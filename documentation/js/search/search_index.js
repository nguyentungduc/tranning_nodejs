var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.158,1,2.848]],["body/controllers/AppController.html",[0,1.377,1,3.385,2,1.026,3,0.117,4,0.091,5,0.104,6,2.831,7,0.378,8,0.91,9,4.047,10,4.719,11,2.639,12,4.099,13,2.123,14,0.014,15,4.099,16,0.707,17,3.26,18,1.07,19,1.326,20,3.26,21,3.26,22,3.26,23,1.377,24,1.06,25,1.377,26,6.081,27,3.26,28,3.26,29,3.26,30,2.338,31,0.383,32,2.029,33,3.26,34,3.26,35,0.245,36,3.454,37,2.831,38,2.549,39,1.909,40,2.338,41,3.26,42,4.719,43,2.338,44,3.26,45,2.123,46,3.26,47,0.117,48,0.041,49,0.882,50,1.377,51,1.356,52,3.26,53,3.26,54,3.26,55,1.246,56,3.26,57,3.26,58,3.26,59,3.26,60,3.26,61,3.26,62,0.008,63,0.008]],["title/modules/AppModule.html",[64,0.998,65,2.848]],["body/modules/AppModule.html",[1,2.715,2,0.932,3,0.064,4,0.05,5,0.057,14,0.014,31,0.429,35,0.135,36,3.267,37,1.555,47,0.064,48,0.023,62,0.005,63,0.005,64,0.951,65,5.549,66,0.685,67,0.778,68,0.852,69,0.852,70,0.778,71,1.645,72,0.778,73,1.555,74,1.555,75,1.555,76,3.492,77,3.492,78,3.492,79,3.492,80,3.242,81,3.492,82,3.492,83,3.492,84,3.492,85,3.267,86,3.267,87,3.074,88,3.074,89,3.074,90,3.074,91,1.409,92,0.852,93,0.852,94,1.791,95,2.715,96,1.971,97,1.791,98,1.791,99,1.791,100,1.791,101,1.791,102,1.791,103,1.791,104,1.791,105,1.791,106,1.791,107,1.791,108,1.791,109,1.4,110,2.961,111,1.791,112,2.961,113,1.791,114,1.555,115,1.4,116,1.345,117,1.791,118,1.555,119,1.284,120,1.284,121,1.791,122,1.4,123,1.115,124,1.791,125,1.791,126,1.791,127,1.555,128,1.192,129,1.791,130,1.791,131,1.284,132,1.284,133,1.791,134,1.791,135,1.791,136,2.52,137,1.791,138,1.791,139,1.791,140,0.283,141,2.572,142,2.572,143,1.791,144,2.315,145,1.555,146,1.115,147,1.555,148,0.991,149,1.555,150,1.4,151,1.115,152,1.555,153,1.555,154,1.791,155,1.791,156,1.791,157,1.555,158,1.791,159,1.791]],["title/injectables/AppService.html",[36,2.472,160,0.244]],["body/injectables/AppService.html",[3,0.18,4,0.14,5,0.16,7,0.582,8,1.219,9,4.837,14,0.014,16,0.639,18,0.967,19,1.776,31,0.286,35,0.377,36,3.935,47,0.18,48,0.063,55,1.126,62,0.011,63,0.011,160,0.388,161,1.169,162,4.355,163,5.014,164,3.596,165,4.355]],["title/controllers/AudioController.html",[0,1.158,166,2.848]],["body/controllers/AudioController.html",[0,1.194,2,1.287,3,0.147,4,0.114,5,0.176,7,0.475,8,1.067,11,2.983,13,1.566,14,0.014,16,0.521,18,0.789,31,0.357,32,2.547,35,0.308,47,0.147,48,0.052,49,1.108,50,1.614,51,2.302,62,0.01,63,0.01,128,2.723,166,3.969,167,3.553,168,2.147,169,3.553,170,6.718,171,5.533,172,4.091,173,4.091,174,4.327,175,5.533,176,3.199,177,4.091,178,2.042,179,4.091,180,4.091,181,4.091,182,4.091,183,4.091,184,4.091,185,2.547,186,4.091,187,4.091]],["title/modules/AudioModule.html",[64,0.998,76,2.643]],["body/modules/AudioModule.html",[2,1.741,3,0.147,4,0.114,5,0.13,14,0.014,24,0.919,31,0.4,35,0.308,47,0.147,48,0.052,62,0.01,63,0.01,64,1.576,66,1.566,67,1.777,68,1.946,69,1.946,70,1.777,71,2.724,72,1.777,76,4.815,91,2.632,92,1.946,93,1.946,96,2.723,127,3.553,128,2.723,166,4.497,169,3.553,188,3.553,189,3.553,190,4.815,191,4.091,192,4.091,193,4.091,194,3.969,195,4.091,196,4.091]],["title/classes/AudioProcessor.html",[48,0.05,194,2.848]],["body/classes/AudioProcessor.html",[3,0.142,4,0.111,5,0.126,7,0.46,8,1.044,13,1.516,14,0.014,16,0.69,18,0.764,23,1.155,24,0.89,25,1.155,31,0.351,35,0.298,47,0.142,48,0.05,50,1.799,51,2.565,62,0.01,63,0.01,128,2.636,140,0.626,174,5.182,176,3.096,178,2.701,194,3.882,197,2.319,198,3.439,199,1.64,200,5.412,201,1.977,202,1.977,203,5.412,204,3.96,205,5.412,206,6.939,207,5.412,208,3.96,209,2.465,210,3.439,211,3.96,212,3.96,213,3.96,214,3.96,215,3.96,216,3.96,217,3.96]],["title/injectables/AudioService.html",[160,0.244,190,2.643]],["body/injectables/AudioService.html",[3,0.202,4,0.157,5,0.18,14,0.014,31,0.321,35,0.424,47,0.202,48,0.071,62,0.012,63,0.012,160,0.417,161,1.314,190,4.52,218,4.893]],["title/controllers/AuthController.html",[0,1.158,219,2.848]],["body/controllers/AuthController.html",[0,1.525,2,1.644,3,0.188,4,0.146,5,0.167,14,0.014,31,0.37,35,0.393,47,0.188,48,0.066,51,2.174,62,0.011,63,0.011,168,2.743,219,4.652,220,4.539,221,4.086,222,3.799,223,5.226,224,5.226,225,2.608,226,2.374]],["title/modules/AuthModule.html",[64,0.998,77,2.643]],["body/modules/AuthModule.html",[2,1.453,3,0.114,4,0.088,5,0.101,14,0.014,31,0.41,35,0.238,39,1.853,45,2.865,47,0.114,48,0.04,62,0.008,63,0.008,64,1.371,66,1.211,67,1.375,68,1.505,69,1.505,70,1.375,71,2.37,72,2.37,77,5.03,85,4.146,91,2.197,92,1.505,93,1.505,96,3.074,219,3.912,227,2.748,228,2.748,229,3.164,230,2.748,231,4.432,232,4.432,233,3.164,234,2.106,235,3.164,236,3.164,237,4.619,238,3.164,239,3.164,240,2.474,241,2.27,242,2.748,243,3.164,244,3.164,245,2.748,246,2.748,247,3.164,248,3.164,249,3.164]],["title/injectables/AuthService.html",[45,1.52,160,0.244]],["body/injectables/AuthService.html",[3,0.111,4,0.086,5,0.099,7,0.359,8,0.877,11,3.144,12,3.948,14,0.014,16,0.686,18,0.877,19,1.857,23,1.572,24,1.21,25,1.572,30,2.221,31,0.307,35,0.233,45,1.74,47,0.111,48,0.039,49,1.231,50,1.326,55,1.21,62,0.008,63,0.008,116,2.696,140,0.852,146,2.83,148,1.714,160,0.279,161,0.722,185,1.928,222,3.871,240,2.421,250,2.689,251,4.546,252,3.097,253,6.83,254,3.097,255,4.546,256,3.097,257,4.546,258,5.935,259,3.097,260,3.026,261,3.097,262,2.447,263,3.097,264,3.097,265,4.546,266,3.097,267,2.689,268,2.689,269,3.097,270,3.097,271,3.097,272,3.097]],["title/injectables/AuthService-1.html",[45,1.269,160,0.204,273,2.063]],["body/injectables/AuthService-1.html",[3,0.177,4,0.138,5,0.157,14,0.014,16,0.628,23,1.438,24,1.107,25,1.438,31,0.356,35,0.371,45,2.393,47,0.177,48,0.062,49,1.334,62,0.011,63,0.011,140,0.779,160,0.384,161,1.149,225,2.46,274,4.281,275,4.281,276,4.46,277,4.929,278,3.854]],["title/injectables/AuthService-2.html",[45,1.269,160,0.204,279,2.377]],["body/injectables/AuthService-2.html",[3,0.15,4,0.117,5,0.134,7,0.486,8,1.085,11,3.019,14,0.014,16,0.716,18,0.808,23,1.222,24,0.941,25,1.222,31,0.362,35,0.315,45,2.152,47,0.15,48,0.053,49,1.134,51,1.743,55,0.941,62,0.01,63,0.01,140,0.662,160,0.345,161,0.977,185,2.608,225,2.091,226,2.554,260,3.743,262,1.903,280,3.639,281,6.783,282,3.276,283,5.696,284,4.19,285,4.19,286,3.005,287,3.005,288,4.19,289,3.639]],["title/injectables/AuthServiceForWardRef.html",[160,0.244,290,2.472]],["body/injectables/AuthServiceForWardRef.html",[3,0.138,4,0.107,5,0.122,7,0.445,8,1.022,9,4.353,14,0.014,16,0.773,18,1.022,19,1.838,23,1.12,24,0.862,25,1.12,31,0.302,35,0.289,45,1.469,47,0.138,48,0.049,49,1.434,50,1.12,55,1.19,62,0.009,63,0.009,140,0.607,160,0.325,161,0.895,164,2.752,226,2.406,290,3.297,291,5.68,292,4.922,293,3,294,6.54,295,3.837,296,4.272,297,3.333,298,3.333,299,3.333,300,1.825,301,3.799,302,3,303,3,304,2.752,305,3.837]],["title/controllers/CatsController.html",[0,1.158,306,2.848]],["body/controllers/CatsController.html",[0,1.155,2,1.246,3,0.142,4,0.111,5,0.126,7,0.46,8,1.044,9,4.411,13,1.516,14,0.014,16,0.505,18,0.764,19,1.521,31,0.378,35,0.298,47,0.142,48,0.05,49,1.072,50,1.579,51,2.252,55,1.216,62,0.01,63,0.01,87,2.319,109,3.096,144,3.096,168,2.079,262,2.459,300,1.884,306,3.882,307,3.439,308,3.96,309,3.96,310,2.996,311,3.439,312,3.96,313,3.839,314,3.96,315,3.96,316,3.96,317,3.439,318,3.96,319,5.412,320,3.96,321,3.96,322,3.96,323,3.96]],["title/modules/CatsModule.html",[64,0.998,78,2.643]],["body/modules/CatsModule.html",[2,1.725,3,0.145,4,0.113,5,0.129,14,0.014,31,0.355,35,0.303,47,0.145,48,0.051,62,0.01,63,0.01,64,1.564,66,1.544,67,1.752,68,1.919,69,1.919,70,1.752,71,2.381,72,2.704,78,4.648,91,2.607,92,1.919,93,1.919,262,1.832,306,4.465,310,4.255,311,3.503,324,3.503,325,3.503,326,3.154,327,5.481,328,4.034,329,4.285,330,4.285,331,3.503,332,3.503,333,4.034]],["title/injectables/CatsService.html",[160,0.244,310,2.198]],["body/injectables/CatsService.html",[3,0.159,4,0.123,5,0.141,7,0.514,8,1.125,14,0.014,16,0.564,18,0.854,24,0.994,31,0.332,35,0.333,47,0.159,48,0.056,49,1.198,50,1.291,55,0.994,62,0.01,63,0.01,86,4.316,160,0.358,161,1.032,273,2.755,300,2.105,301,3.174,304,3.174,310,3.228,334,3.843,335,6.933,336,4.425,337,4.425,338,4.425,339,4.425,340,4.425]],["title/controllers/CircularController.html",[0,1.158,341,2.848]],["body/controllers/CircularController.html",[0,1.222,2,1.318,3,0.15,4,0.117,5,0.134,7,0.486,8,1.085,13,1.604,14,0.014,16,0.534,18,0.808,31,0.362,35,0.315,47,0.15,48,0.053,49,1.134,50,1.641,51,2.339,55,0.941,62,0.01,63,0.01,168,2.199,226,1.903,262,1.903,289,3.639,341,4.033,342,3.639,343,4.19,344,5.304,345,4.19,346,4.19,347,3.951,348,3.639,349,3.639,350,3.951,351,3.639,352,2.091,353,3.639,354,4.19,355,4.19,356,4.19,357,4.19]],["title/modules/CircularModule.html",[64,0.998,79,2.643]],["body/modules/CircularModule.html",[2,1.38,3,0.106,4,0.082,5,0.094,14,0.014,31,0.409,35,0.222,45,2.485,47,0.106,48,0.037,62,0.008,63,0.008,64,1.315,66,1.129,67,1.281,68,1.403,69,1.403,70,1.281,71,2.274,72,1.281,79,5.195,91,2.086,92,1.403,93,1.403,221,2.306,226,2.949,234,1.963,276,3.803,278,2.306,287,2.115,290,4.042,292,3.145,296,4.042,302,2.306,303,3.429,341,3.754,347,4.042,348,2.561,349,2.561,350,4.042,351,2.561,352,1.472,353,2.561,358,2.561,359,2.561,360,4.321,361,2.949,362,2.949,363,2.949]],["title/injectables/CommonService.html",[86,2.472,160,0.244]],["body/injectables/CommonService.html",[3,0.178,4,0.138,5,0.158,14,0.014,31,0.358,35,0.373,47,0.178,48,0.063,49,1.342,50,1.446,62,0.011,63,0.011,86,3.906,160,0.385,161,1.156,300,2.358,301,3.555,304,3.555,310,4.006,364,4.305,365,4.957]],["title/controllers/ConfigController.html",[0,1.158,366,2.848]],["body/controllers/ConfigController.html",[0,1.498,2,1.615,3,0.184,4,0.143,5,0.164,14,0.014,31,0.366,32,3.196,35,0.386,47,0.184,48,0.065,51,2.136,62,0.011,63,0.011,168,2.694,225,2.562,313,3.993,317,4.458,366,4.6,367,4.458,368,5.133,369,4.014,370,4.458,371,5.133]],["title/modules/ConfigModule.html",[64,0.998,80,2.643]],["body/modules/ConfigModule.html",[3,0.153,4,0.119,5,0.135,8,0.82,14,0.014,16,0.542,18,0.82,23,1.24,24,0.955,25,1.24,31,0.364,35,0.32,47,0.153,48,0.054,55,0.955,62,0.01,63,0.01,64,1.607,66,1.627,71,1.847,72,1.847,80,4.255,140,0.672,313,3.98,330,3.324,366,3.049,370,3.692,372,4.251,373,4.932,374,4.251,375,5.678,376,4.251,377,4.932,378,6.394,379,4.251,380,4.251,381,4.251]],["title/interfaces/ConfigOptions.html",[382,2.643,383,2.848]],["body/interfaces/ConfigOptions.html",[3,0.192,4,0.149,5,0.171,7,0.622,14,0.014,19,2.004,47,0.192,62,0.012,63,0.012,140,0.847,199,1.995,382,3.564,383,4.723,384,3.841,385,4.651,386,4.651,387,7.439]],["title/injectables/ConfigService.html",[160,0.244,313,2.472]],["body/injectables/ConfigService.html",[3,0.123,4,0.096,5,0.11,7,0.399,8,0.947,14,0.014,16,0.729,18,0.664,19,1.852,23,1.431,24,1.102,25,1.431,31,0.376,35,0.259,47,0.123,48,0.044,49,0.932,50,1.819,51,2.379,55,0.773,62,0.009,63,0.009,140,0.904,160,0.301,161,0.803,199,1.486,262,2.229,300,1.637,313,3.055,377,4.261,383,4.471,384,2.468,388,2.988,389,4.915,390,3.441,391,4.907,392,4.907,393,3.441,394,2.988,395,4.261,396,4.261,397,4.261,398,3.441,399,4.907,400,3.441,401,3.441,402,3.441,403,3.441,404,3.441,405,3.441,406,3.441,407,3.441,408,3.441]],["title/classes/CreateOrderDto.html",[48,0.05,409,2.643]],["body/classes/CreateOrderDto.html",[3,0.18,4,0.14,5,0.16,7,0.582,14,0.014,16,0.805,19,2.042,24,1.555,47,0.18,48,0.063,62,0.011,63,0.011,140,0.999,197,2.937,199,1.915,409,4.207,410,6.011,411,4.355,412,4.054,413,5.014,414,5.014]],["title/classes/CreateUserDto.html",[48,0.05,415,2.848]],["body/classes/CreateUserDto.html",[3,0.166,4,0.129,5,0.147,7,0.536,13,2.294,14,0.014,16,0.763,19,1.98,31,0.263,47,0.166,48,0.076,62,0.011,63,0.011,140,0.947,148,3.684,197,2.702,199,1.815,415,4.298,416,5.781,417,3.608,418,6.656,419,6.656,420,4.007,421,6.656,422,4.614,423,3.608]],["title/modules/DatabaseModule.html",[64,0.998,424,2.643]],["body/modules/DatabaseModule.html",[3,0.19,4,0.148,5,0.169,14,0.014,31,0.372,35,0.398,47,0.19,48,0.067,62,0.012,63,0.012,64,1.642,66,2.025,71,2.298,72,2.298,424,4.35,425,5.29,426,5.545,427,5.29]],["title/interfaces/EnvConfig.html",[382,2.643,389,2.848]],["body/interfaces/EnvConfig.html",[3,0.197,4,0.153,5,0.175,14,0.013,16,0.7,19,2.109,47,0.197,62,0.012,63,0.012,382,3.655,384,3.938,389,4.796,394,5.807,428,4.769,429,5.491,430,5.491]],["title/classes/FindOneParams.html",[48,0.05,431,2.848]],["body/classes/FindOneParams.html",[3,0.178,4,0.138,5,0.158,7,0.575,13,1.897,14,0.014,16,0.632,31,0.283,47,0.178,48,0.079,62,0.011,63,0.011,140,0.784,197,2.903,199,1.901,417,3.876,420,4.305,423,3.876,431,4.5,432,5.45,433,4.906,434,4.033,435,3.132,436,6.885]],["title/injectables/JwtAuthGuard.html",[43,2.848,160,0.244]],["body/injectables/JwtAuthGuard.html",[3,0.24,4,0.1,5,0.114,7,0.414,8,0.971,14,0.014,16,0.641,18,0.971,23,1.469,24,1.131,25,1.469,31,0.287,35,0.268,38,2.79,39,2.09,43,3.611,47,0.128,48,0.045,55,1.131,62,0.009,63,0.009,116,3.035,140,0.564,160,0.309,161,0.832,178,1.781,437,5.067,438,2.79,439,5.035,440,5.035,441,5.035,442,6.337,443,3.568,444,3.568,445,5.035,446,3.568,447,6.337,448,4.373,449,2.559,450,3.568,451,3.568,452,3.568,453,3.568,454,3.568,455,3.099,456,3.568,457,3.568,458,3.568,459,3.568,460,3.568,461,3.568,462,4.373,463,3.568,464,3.568,465,3.568]],["title/injectables/JwtStrategy.html",[160,0.244,231,2.643]],["body/injectables/JwtStrategy.html",[3,0.142,4,0.111,5,0.126,7,0.46,8,1.044,11,2.933,14,0.014,16,0.69,18,0.764,23,1.155,24,0.89,25,1.155,30,2.84,31,0.378,35,0.298,39,2.319,47,0.142,48,0.05,49,1.669,55,0.89,62,0.01,63,0.01,140,0.626,146,2.465,160,0.333,161,0.924,231,3.602,241,2.84,242,3.439,246,3.439,267,3.439,449,2.84,466,3.439,467,4.701,468,3.96,469,5.412,470,3.96,471,3.96,472,3.439,473,3.096,474,3.439,475,3.439,476,3.439,477,3.439,478,3.96,479,3.96,480,3.96,481,3.439,482,3.96,483,3.439,484,3.96,485,3.96]],["title/injectables/LazyLoaderService.html",[160,0.244,347,2.472]],["body/injectables/LazyLoaderService.html",[3,0.129,4,0.1,5,0.115,7,0.418,8,0.977,14,0.014,16,0.81,18,0.977,31,0.334,35,0.271,45,2.792,47,0.129,48,0.046,50,2.029,55,1.138,62,0.009,63,0.009,140,0.801,160,0.311,161,0.839,178,2.528,199,1.534,226,3.313,234,2.395,287,2.581,347,3.153,486,5.822,487,3.125,488,6.36,489,6.36,490,3.598,491,3.598,492,3.598,493,3.598,494,5.86,495,3.598,496,5.86,497,3.598]],["title/injectables/LocalAuthGuard.html",[40,2.848,160,0.244]],["body/injectables/LocalAuthGuard.html",[3,0.192,4,0.149,5,0.171,14,0.014,31,0.375,35,0.403,38,4.187,39,3.137,40,4.723,47,0.192,48,0.068,62,0.012,63,0.012,160,0.405,161,1.249,438,4.187,449,3.841,498,4.651,499,5.355]],["title/injectables/LocalStrategy.html",[160,0.244,232,2.643]],["body/injectables/LocalStrategy.html",[3,0.13,4,0.101,5,0.116,7,0.421,8,0.983,11,2.8,14,0.014,16,0.649,18,0.7,19,1.959,23,1.486,24,1.144,25,1.486,31,0.364,35,0.273,39,2.125,45,2.669,47,0.13,48,0.046,49,0.982,55,0.815,62,0.009,63,0.009,116,2.674,140,0.805,146,2.259,148,3.533,160,0.313,161,0.846,178,1.811,185,2.259,225,1.811,232,3.39,234,2.415,260,3.39,262,1.648,448,4.424,449,2.602,462,3.151,467,4.424,472,3.151,473,2.837,475,3.151,476,3.151,477,3.151,500,3.151,501,3.151,502,3.628,503,5.094,504,3.628,505,3.151,506,3.628]],["title/classes/Order.html",[48,0.05,507,2.848]],["body/classes/Order.html",[3,0.174,4,0.135,5,0.154,7,0.563,14,0.014,16,0.868,19,2.017,24,1.53,47,0.174,48,0.061,62,0.011,63,0.011,140,1.077,197,2.838,199,1.874,412,3.99,434,3.99,435,3.087,507,4.436,508,4.209,509,4.846,510,4.846,511,4.846]],["title/classes/OrderCreatedEvent.html",[48,0.05,512,2.643]],["body/classes/OrderCreatedEvent.html",[3,0.18,4,0.14,5,0.16,7,0.582,14,0.014,16,0.805,19,2.042,24,1.555,47,0.18,48,0.063,62,0.011,63,0.011,140,0.999,197,2.937,199,1.915,412,4.054,512,4.207,513,6.011,514,3.921,515,5.014,516,5.014]],["title/injectables/OrderCreatedListener.html",[160,0.244,517,2.643]],["body/injectables/OrderCreatedListener.html",[3,0.154,4,0.12,5,0.137,7,0.498,8,1.103,13,1.644,14,0.014,16,0.547,18,0.828,23,1.253,24,0.965,25,1.253,31,0.366,35,0.323,47,0.154,48,0.054,62,0.01,63,0.01,131,3.079,132,3.079,140,0.679,160,0.351,161,1.001,209,2.673,210,3.729,512,4.748,514,3.357,517,3.804,518,4.964,519,5.716,520,5.716,521,5.716,522,4.294,523,5.716,524,4.294,525,3.729,526,3.357,527,4.294,528,4.294]],["title/controllers/OrdersController.html",[0,1.158,529,2.848]],["body/controllers/OrdersController.html",[0,1.253,2,1.351,3,0.154,4,0.12,5,0.137,7,0.498,8,1.103,13,1.644,14,0.014,16,0.547,18,0.828,23,1.253,24,0.965,25,1.253,31,0.366,32,4,35,0.323,47,0.154,48,0.054,55,0.965,62,0.01,63,0.01,140,0.679,168,2.254,225,2.143,369,3.357,409,4.882,529,4.1,530,3.729,531,3.729,532,4.1,533,3.729,534,4.294,535,4,536,3.729,537,3.357,538,3.729,539,4.294,540,3.729,541,4.294]],["title/modules/OrdersModule.html",[64,0.998,81,2.643]],["body/modules/OrdersModule.html",[2,1.764,3,0.15,4,0.116,5,0.133,14,0.014,31,0.386,35,0.314,47,0.15,48,0.053,62,0.01,63,0.01,64,1.591,66,1.596,67,1.811,68,1.984,69,1.984,70,1.811,71,2.751,72,1.811,81,5.029,91,2.666,92,1.984,93,1.984,517,4.841,526,3.26,529,4.541,535,4.529,536,3.621,542,3.621,543,3.621,544,4.17,545,4.17,546,4.17]],["title/injectables/OrdersService.html",[160,0.244,535,2.472]],["body/injectables/OrdersService.html",[3,0.101,4,0.078,5,0.089,7,0.326,8,0.815,14,0.014,16,0.647,18,0.541,23,1.233,24,1.432,25,1.233,31,0.346,35,0.211,47,0.101,48,0.035,49,0.76,55,0.63,62,0.007,63,0.007,131,2.012,132,2.012,140,0.803,160,0.26,161,0.654,178,1.4,199,1.28,201,1.4,202,1.4,225,1.4,262,1.919,273,4.117,279,4.571,409,4.242,412,3.987,434,3.552,507,5.296,512,3.763,525,2.437,526,2.194,531,4.413,532,3.03,533,3.669,535,2.63,537,2.194,538,2.437,547,2.437,548,5.081,549,2.806,550,5.654,551,2.806,552,4.225,553,2.806,554,2.806,555,2.806,556,2.806,557,2.806,558,2.806,559,2.806,560,2.806,561,2.806,562,2.806,563,2.806]],["title/entities/Photo.html",[564,2.326,565,2.848]],["body/entities/Photo.html",[3,0.129,4,0.1,5,0.114,7,0.416,13,2.658,14,0.014,16,0.885,19,1.951,24,1.313,31,0.204,47,0.129,48,0.045,62,0.009,63,0.009,140,1.098,151,2.231,199,1.53,412,3.425,434,3.425,435,3.169,564,2.958,565,3.622,566,3.112,567,5.847,568,5.847,569,5.847,570,5.05,571,3.583,572,5.429,573,3.583,574,5.078,575,3.583,576,4.386,577,3.583,578,3.583,579,5.05,580,3.583,581,5.05,582,3.583,583,2.385,584,3.583]],["title/modules/PhotoModule.html",[64,0.998,585,2.848]],["body/modules/PhotoModule.html",[3,0.15,4,0.117,5,0.134,14,0.014,31,0.387,35,0.315,47,0.15,48,0.053,62,0.01,63,0.01,64,1.595,66,1.604,67,1.82,68,1.993,69,1.993,70,1.82,71,2.757,72,1.82,91,2.675,92,1.993,93,1.993,96,3.743,424,4.848,585,5.425,586,3.639,587,3.639,588,3.639,589,4.848,590,4.19,591,4.19,592,4.397,593,4.19,594,4.19]],["title/injectables/PhotoService.html",[160,0.244,589,2.643]],["body/injectables/PhotoService.html",[3,0.152,4,0.118,5,0.135,7,0.491,8,1.092,11,3.034,14,0.014,16,0.721,18,0.816,23,1.234,24,0.95,25,1.234,31,0.364,35,0.318,47,0.152,48,0.054,49,1.532,50,1.234,55,0.95,62,0.01,63,0.01,140,0.669,160,0.348,161,0.987,260,3.767,300,2.013,565,3.034,583,2.816,589,3.767,595,3.674,596,6.81,597,4.231,598,5.915,599,4.231,600,5.66,601,4.231,602,4.231,603,4.231,604,4.231]],["title/controllers/PostController.html",[0,1.158,95,2.848]],["body/controllers/PostController.html",[0,1.24,2,1.338,3,0.153,4,0.119,5,0.135,7,0.494,8,1.095,13,1.627,14,0.014,16,0.542,18,0.82,31,0.324,35,0.32,47,0.153,48,0.054,49,1.151,50,1.24,51,1.769,55,0.955,62,0.01,63,0.01,87,3.745,95,4.073,168,2.232,262,2.579,300,2.022,605,3.692,606,4.251,607,6.823,608,5.678,609,4.251,610,3.535,611,3.692,612,4.251,613,4.251,614,4.251,615,3.535,616,5.678,617,2.83,618,4.251]],["title/injectables/PostService.html",[87,2.326,160,0.244]],["body/injectables/PostService.html",[3,0.104,4,0.081,5,0.093,7,0.338,8,0.837,14,0.014,16,0.877,18,1.111,19,1.881,23,0.849,24,0.975,25,0.849,31,0.166,32,1.811,35,0.219,47,0.104,48,0.037,49,1.406,50,2.052,51,2.16,55,1.167,62,0.008,63,0.008,87,2.543,140,0.91,160,0.267,161,0.679,199,1.315,201,2.167,202,2.167,209,2.703,273,1.811,352,2.167,373,4.51,435,3.074,615,3.233,617,3.456,619,2.527,620,5.193,621,4.341,622,5.758,623,4.13,624,5.758,625,4.341,626,4.341,627,2.909,628,2.909,629,2.909,630,2.909,631,2.909,632,2.909,633,3.77,634,2.909,635,2.527,636,3.724,637,2.087,638,2.909,639,2.909,640,2.909,641,2.909,642,2.275]],["title/injectables/RequestService.html",[88,2.326,160,0.244]],["body/injectables/RequestService.html",[3,0.141,4,0.11,5,0.126,7,0.458,8,1.041,14,0.014,16,0.843,18,0.76,19,1.516,31,0.225,35,0.297,47,0.141,48,0.05,49,1.665,50,2.087,55,0.886,62,0.01,63,0.01,88,3.16,140,0.853,160,0.331,161,0.919,199,1.635,201,1.968,202,1.968,352,2.693,435,2.693,610,3.359,615,3.83,617,4.094,623,4.744,636,3.87,637,2.827,643,3.424,644,5.395,645,3.942,646,3.942,647,3.424,648,3.082]],["title/injectables/ResolveService.html",[160,0.244,350,2.472]],["body/injectables/ResolveService.html",[3,0.123,4,0.095,5,0.109,7,0.396,8,0.941,11,2.955,14,0.014,16,0.622,18,0.659,23,0.996,24,0.767,25,0.996,31,0.325,35,0.257,47,0.123,48,0.043,49,0.924,62,0.009,63,0.009,136,2.272,140,0.54,160,0.3,161,0.796,185,3.037,225,1.704,226,1.551,262,2.586,282,2.669,283,5.344,286,2.448,287,2.448,350,3.037,352,3.1,481,2.965,649,4.945,650,2.965,651,6.111,652,3.414,653,3.414,654,3.414,655,2.965,656,4.879,657,4.879,658,6.212,659,4.879,660,4.879,661,4.879,662,5.693,663,3.414,664,3.414]],["title/injectables/RetrievingService.html",[160,0.244,360,2.643]],["body/injectables/RetrievingService.html",[3,0.145,4,0.113,5,0.129,7,0.468,8,1.057,14,0.014,16,0.793,18,0.778,23,1.177,24,0.906,25,1.177,31,0.355,35,0.303,45,2.383,47,0.145,48,0.051,49,1.092,50,1.816,62,0.01,63,0.01,140,0.866,160,0.337,161,0.941,199,1.66,209,2.511,225,2.013,234,2.685,282,3.154,283,5.633,286,2.893,360,3.648,651,6.256,655,3.503,665,3.503,666,5.407,667,5.481,668,4.034,669,4.034,670,4.034]],["title/entities/RoleEntity.html",[564,2.326,671,2.643]],["body/entities/RoleEntity.html",[3,0.164,4,0.127,5,0.145,7,0.53,14,0.014,16,0.758,19,1.673,24,1.488,31,0.339,47,0.164,48,0.075,62,0.011,63,0.011,140,0.941,151,2.842,199,1.803,434,3.879,435,2.971,564,3.486,572,3.57,583,3.038,671,3.961,672,3.965,673,4.565,674,4.565,675,3.965,676,3.965,677,3.965,678,3.57,679,3.965,680,5.169,681,3.965]],["title/controllers/ScopeController.html",[0,1.158,682,2.848]],["body/controllers/ScopeController.html",[0,1.033,2,1.114,3,0.127,4,0.099,5,0.113,7,0.411,8,0.966,13,2.223,14,0.014,16,0.74,18,1.12,31,0.36,35,0.266,47,0.127,48,0.045,49,0.958,50,1.694,51,2.416,55,1.305,62,0.009,63,0.009,88,3.402,89,3.402,90,3.402,168,1.858,300,1.684,352,1.767,682,3.59,683,3.074,684,6.314,685,6.314,686,6.314,687,5.006,688,3.539,689,5.006,690,3.539,691,5.006,692,3.539,693,3.074,694,3.074,695,3.074,696,3.539,697,3.539,698,3.539,699,3.539,700,3.539,701,6.314,702,3.539]],["title/modules/ScopeModule.html",[64,0.998,82,2.643]],["body/modules/ScopeModule.html",[2,1.698,3,0.141,4,0.11,5,0.126,14,0.014,31,0.395,35,0.297,47,0.141,48,0.05,62,0.01,63,0.01,64,1.546,66,1.509,67,1.713,68,1.875,69,1.875,70,1.713,71,2.672,72,1.713,82,5.094,88,4.19,89,4.19,90,4.19,91,2.567,92,1.875,93,1.875,682,4.412,693,3.424,694,3.424,695,3.424,703,3.942,704,3.942,705,3.942,706,3.942]],["title/controllers/SeeController.html",[0,1.158,707,2.848]],["body/controllers/SeeController.html",[0,1.473,2,1.127,3,0.129,4,0.1,5,0.114,7,0.679,8,0.974,13,1.933,14,0.014,16,0.643,18,0.974,23,1.045,24,0.805,25,1.045,31,0.396,35,0.27,47,0.129,48,0.045,55,0.805,62,0.009,63,0.009,140,0.566,164,2.57,165,3.112,209,2.231,396,3.112,397,3.112,615,2.231,707,3.622,708,3.112,709,6.693,710,3.583,711,7.135,712,3.583,713,5.05,714,3.583,715,5.847,716,3.583,717,3.112,718,3.583,719,3.112,720,3.112,721,3.112,722,3.583,723,3.583,724,3.583,725,3.583,726,3.583,727,3.583,728,3.583,729,3.583,730,3.583]],["title/modules/SeeModule.html",[64,0.998,83,2.643]],["body/modules/SeeModule.html",[2,2.056,3,0.19,4,0.148,5,0.169,14,0.014,31,0.372,35,0.398,47,0.19,48,0.067,62,0.012,63,0.012,64,1.642,66,2.025,83,4.35,707,5.086,731,5.29,732,5.29]],["title/injectables/ShareService.html",[160,0.244,276,2.326]],["body/injectables/ShareService.html",[3,0.202,4,0.157,5,0.18,14,0.014,31,0.321,35,0.424,47,0.202,48,0.071,62,0.012,63,0.012,160,0.417,161,1.314,276,3.978,733,4.893]],["title/injectables/SingletonService.html",[89,2.326,160,0.244]],["body/injectables/SingletonService.html",[3,0.143,4,0.112,5,0.127,7,0.464,8,1.051,14,0.014,16,0.848,18,0.771,19,1.531,31,0.228,35,0.301,47,0.143,48,0.051,49,1.677,50,2.096,55,0.898,62,0.01,63,0.01,89,3.19,140,0.861,160,0.335,161,0.932,199,1.65,201,1.995,202,1.995,352,1.995,435,2.718,610,3.391,615,3.857,617,4.124,623,4.772,636,3.906,637,2.866,642,3.125,648,3.125,734,3.471,735,5.446,736,3.997,737,3.997]],["title/modules/TasksModule.html",[64,0.998,84,2.643]],["body/modules/TasksModule.html",[3,0.168,4,0.131,5,0.149,14,0.014,31,0.345,35,0.353,47,0.168,48,0.059,62,0.011,63,0.011,64,1.685,66,1.795,67,2.037,68,2.23,69,2.23,70,2.037,71,2.914,72,2.037,84,5.002,91,2.881,92,2.23,93,2.23,123,4.679,738,4.072,739,4.072,740,4.689,741,4.689]],["title/injectables/TasksService.html",[123,2.472,160,0.244]],["body/injectables/TasksService.html",[3,0.134,4,0.104,5,0.119,7,0.432,8,1,13,1.425,14,0.015,16,0.661,18,0.718,31,0.296,35,0.28,47,0.134,48,0.047,50,1.741,51,2.483,62,0.009,63,0.009,122,2.91,123,3.228,160,0.319,161,0.868,174,5.047,178,2.588,199,1.571,201,1.858,202,1.858,209,2.317,720,3.232,742,3.232,743,6.455,744,5.186,745,3.722,746,5.186,747,3.722,748,3.722,749,3.722,750,3.722,751,3.722,752,5.968,753,3.722,754,3.722,755,3.722,756,3.722,757,3.722,758,5.186,759,3.722,760,3.722]],["title/injectables/TransientService.html",[90,2.326,160,0.244]],["body/injectables/TransientService.html",[3,0.141,4,0.11,5,0.126,7,0.458,8,1.041,14,0.014,16,0.843,18,0.76,19,1.516,31,0.225,35,0.297,47,0.141,48,0.05,49,1.665,50,2.087,55,0.886,62,0.01,63,0.01,90,3.16,140,0.853,160,0.331,161,0.919,199,1.635,201,1.968,202,1.968,352,2.693,435,2.693,610,3.359,615,3.83,617,4.094,623,4.744,635,3.424,636,3.87,637,2.827,642,3.082,648,3.082,761,3.424,762,5.395,763,3.942,764,3.942]],["title/entities/User.html",[116,1.804,564,2.326]],["body/entities/User.html",[3,0.113,4,0.088,5,0.1,7,0.365,13,2.542,14,0.014,16,0.846,19,1.928,31,0.31,47,0.113,48,0.058,55,0.706,62,0.008,63,0.008,116,2.087,136,3.058,140,1.05,148,3.006,151,1.956,199,1.392,201,1.568,434,3.181,435,2.293,564,2.691,572,5.364,574,4.717,576,3.99,583,2.091,671,3.615,675,3.99,676,3.99,677,3.99,678,2.456,679,2.728,680,3.99,681,2.728,765,2.728,766,4.717,767,5.432,768,4.717,769,4.717,770,3.141,771,3.141,772,3.141,773,3.141,774,3.141,775,3.141,776,3.141,777,4.594,778,3.141,779,3.141,780,2.728,781,3.141,782,3.141,783,3.141,784,3.141]],["title/injectables/UserService.html",[160,0.244,226,1.804]],["body/injectables/UserService.html",[3,0.156,4,0.122,5,0.139,7,0.506,8,1.114,14,0.014,16,0.736,18,0.841,19,1.622,23,1.272,24,0.979,25,1.272,31,0.329,35,0.328,47,0.156,48,0.055,49,1.18,55,0.979,62,0.01,63,0.01,116,1.98,140,0.689,160,0.355,161,1.016,225,2.175,226,2.622,275,3.785,276,4.315,278,3.408,344,5.388,352,2.881,647,3.785,666,3.785,785,3.785,786,4.358,787,4.358]],["title/injectables/UserServiceForwardRef.html",[160,0.244,296,2.472]],["body/injectables/UserServiceForwardRef.html",[3,0.138,4,0.108,5,0.123,7,0.447,8,1.025,9,4.361,14,0.014,16,0.775,18,1.025,19,1.841,23,1.124,24,0.866,25,1.124,31,0.303,35,0.29,45,2.034,47,0.138,48,0.049,49,1.438,50,1.124,55,1.193,62,0.009,63,0.009,140,0.609,160,0.326,161,0.899,164,2.764,221,3.014,226,1.751,290,4.279,292,4.93,293,3.014,296,3.308,297,3.347,298,3.347,299,3.347,300,1.833,301,2.764,303,3.014,304,2.764,501,3.347,788,5.691,789,6.553,790,3.854]],["title/controllers/UsersController.html",[0,1.158,791,2.848]],["body/controllers/UsersController.html",[0,0.735,2,0.793,3,0.09,4,0.07,5,0.08,7,0.293,8,0.751,11,2.907,13,1.82,14,0.014,15,2.189,16,0.606,18,1.032,19,0.708,23,1.136,24,1.068,25,1.136,30,2.792,31,0.363,32,2.961,35,0.19,47,0.09,48,0.032,50,0.735,55,1.068,62,0.007,63,0.007,116,2.43,119,1.807,120,2.792,136,1.677,140,0.615,148,2.155,168,1.323,178,2.67,185,2.423,202,2.374,262,1.145,273,2.423,300,1.199,344,4.182,369,1.97,415,4.383,431,1.807,433,1.97,434,2.786,435,2.67,532,2.792,537,1.97,540,2.189,610,1.569,611,2.189,671,2.591,766,2.189,768,2.189,769,2.189,780,2.189,791,2.792,792,2.189,793,2.189,794,4.13,795,2.52,796,2.52,797,2.52,798,2.52,799,2.52,800,5.349,801,2.52,802,2.52,803,2.52,804,2.52,805,3.892,806,2.52,807,2.52,808,3.892,809,2.52,810,2.189,811,3.892,812,2.52,813,4.13,814,2.52,815,2.189,816,2.52,817,2.52,818,2.52,819,2.52,820,3.892,821,2.52,822,2.52,823,2.52,824,2.52,825,2.52,826,2.52,827,2.52,828,2.52,829,2.52,830,2.52,831,2.52,832,2.52,833,2.52]],["title/modules/UsersModule.html",[64,0.998,85,2.472]],["body/modules/UsersModule.html",[2,1.677,3,0.139,4,0.108,5,0.123,14,0.014,31,0.406,35,0.291,47,0.139,48,0.049,62,0.009,63,0.009,64,1.531,66,1.482,67,1.682,68,1.842,69,1.842,70,1.682,71,2.647,72,2.647,85,4.538,91,2.535,92,1.842,93,1.842,96,2.577,114,3.362,115,3.027,116,1.759,118,3.362,119,2.777,120,2.777,153,3.362,222,4.548,791,4.371,815,3.362,834,3.362,835,3.362,836,3.362,837,3.871,838,3.871,839,3.871,840,3.871]],["title/injectables/UsersService.html",[160,0.244,222,2.326]],["body/injectables/UsersService.html",[3,0.125,4,0.098,5,0.111,7,0.406,8,0.957,11,2.744,14,0.014,16,0.632,18,0.675,19,1.621,23,1.02,24,0.785,25,1.02,31,0.199,35,0.263,47,0.178,48,0.044,50,1.683,51,2.4,55,0.785,62,0.009,63,0.009,116,1.588,140,0.912,146,4.289,148,3.476,160,0.305,161,0.815,199,1.503,201,1.745,202,1.745,222,2.907,260,3.303,268,3.037,273,3.09,279,3.559,483,5.454,793,5.011,794,4.31,841,2.734,842,4.963,843,3.496,844,4.963,845,4.963,846,4.963,847,4.963,848,3.496,849,3.496]],["title/coverage.html",[850,4.24]],["body/coverage.html",[0,1.846,1,1.261,5,0.056,6,1.527,14,0.014,36,1.094,40,1.261,43,1.261,45,1.43,48,0.066,62,0.005,63,0.005,70,0.764,86,1.094,87,1.03,88,1.03,89,1.03,90,1.03,95,1.261,116,0.799,123,1.094,140,0.278,160,0.461,162,1.527,166,1.261,167,1.527,178,0.877,190,1.17,194,1.261,198,1.527,218,1.527,219,1.261,220,1.527,222,1.03,226,0.799,231,1.17,232,1.17,241,1.261,250,1.527,274,1.527,276,1.03,280,1.527,290,1.094,291,1.527,292,2.092,293,2.28,296,1.094,306,1.261,307,1.527,310,0.973,313,1.094,326,1.375,329,1.375,334,1.527,341,1.261,342,1.527,347,1.094,350,1.094,352,0.877,360,1.17,364,1.527,366,1.261,367,1.527,382,1.941,383,1.261,385,1.527,386,1.527,388,1.527,389,1.261,409,1.17,410,1.527,411,1.527,415,1.261,416,1.527,417,2.28,426,1.375,428,1.527,431,1.261,432,1.527,433,1.375,437,1.527,438,2.28,466,1.527,486,1.527,487,1.527,498,1.527,500,1.527,507,1.261,508,1.527,512,1.17,513,1.527,514,2.28,517,1.17,518,1.527,529,1.261,530,1.527,535,1.094,547,1.527,564,2.189,565,1.261,566,1.527,589,1.17,592,1.375,595,1.527,605,1.527,619,1.527,633,6.936,643,1.527,649,1.527,650,1.527,665,1.527,671,1.17,672,1.527,682,1.261,683,1.527,707,1.261,708,1.527,733,1.527,734,1.527,742,1.527,761,1.527,765,1.527,785,1.527,788,1.527,791,1.261,792,1.527,841,1.375,850,1.375,851,1.758,852,1.758,853,1.758,854,6.166,855,6.326,856,6.699,857,6.797,858,1.527,859,4.349,860,4.349,861,1.527,862,1.527,863,1.527,864,1.758,865,1.758,866,1.758,867,1.758]],["title/dependencies.html",[67,2.075,868,2.878]],["body/dependencies.html",[14,0.014,35,0.295,39,2.298,48,0.068,62,0.01,63,0.01,67,1.705,109,3.068,115,3.068,119,2.814,120,3.858,122,3.068,128,2.612,131,2.814,132,2.814,176,3.068,240,3.068,286,2.814,395,3.408,423,3.068,473,4.799,474,3.408,505,4.671,583,2.612,678,3.068,717,3.408,721,3.408,813,3.408,869,3.924,870,3.924,871,6.602,872,3.924,873,3.924,874,3.924,875,3.924,876,3.924,877,3.924,878,3.924,879,3.924,880,3.924,881,3.924,882,3.924,883,3.924,884,3.924,885,3.924,886,3.924,887,3.924,888,3.924,889,3.924,890,3.924,891,3.924,892,3.924,893,3.924,894,3.924]],["title/miscellaneous/functions.html",[895,2.063,896,4.148]],["body/miscellaneous/functions.html",[7,0.69,14,0.012,62,0.012,63,0.012,70,3.24,863,5.162,895,3.7,896,5.162,897,5.943]],["title/index.html",[7,0.385,898,3.314,899,3.314]],["body/index.html",[4,0.105,14,0.014,62,0.009,63,0.009,150,4.091,412,2.208,455,3.275,598,3.275,719,3.275,850,2.948,900,3.77,901,3.77,902,5.233,903,3.77,904,3.77,905,3.77,906,3.77,907,3.77,908,3.77,909,6.009,910,3.77,911,3.77,912,3.77,913,7.237,914,3.77,915,3.77,916,3.77,917,7.057,918,3.77,919,3.77,920,5.233,921,3.77,922,3.77,923,3.77,924,3.77,925,5.233,926,3.77,927,3.77,928,3.77,929,5.233,930,5.233,931,3.77,932,3.77,933,3.77,934,3.77,935,3.77,936,3.275,937,3.77,938,3.77,939,3.77,940,3.77,941,3.77,942,3.77,943,3.77,944,3.77,945,3.275,946,3.77,947,3.77,948,3.77,949,3.77,950,3.77,951,3.77,952,3.275]],["title/modules.html",[66,2.075]],["body/modules.html",[14,0.01,62,0.01,63,0.01,65,3.095,66,1.652,76,2.872,77,2.872,78,2.872,79,2.872,80,2.872,81,2.872,82,2.872,83,2.872,84,2.872,85,2.686,424,2.872,585,3.095,936,6.76,953,7.784,954,7.784,955,7.947,956,6.441,957,6.441]],["title/overview.html",[958,4.709]],["body/overview.html",[2,0.643,14,0.014,36,2.583,45,2.341,62,0.006,63,0.006,64,0.514,65,5.606,66,0.783,67,0.888,68,0.972,69,0.972,70,0.888,71,0.888,72,0.888,73,1.776,74,1.776,75,1.776,76,3.477,77,4.497,78,3.169,79,4.873,80,2.761,81,3.911,82,4.203,83,2.761,84,3.477,85,3.659,86,2.583,87,2.43,88,2.789,89,2.789,90,2.789,91,1.57,92,0.972,93,0.972,123,2.583,151,1.273,161,0.477,188,1.776,189,1.776,190,2.761,197,1.197,222,3.442,226,1.884,227,1.776,228,1.776,230,1.776,231,2.761,232,2.761,276,2.43,279,1.466,290,2.583,296,2.583,310,2.635,324,1.776,325,1.776,347,2.583,350,2.583,358,1.776,359,1.776,360,2.761,384,1.466,424,2.761,517,2.761,535,2.583,542,1.776,543,1.776,585,4.006,586,1.776,587,1.776,588,1.776,589,2.761,738,1.776,739,1.776,834,1.776,835,1.776,836,1.776,958,1.776,959,2.044,960,2.044,961,2.044,962,2.044,963,2.044]],["title/properties.html",[199,1.447,868,2.878]],["body/properties.html",[14,0.014,62,0.012,63,0.012,199,1.764,412,3.411,810,5.058,945,5.058,952,5.058,964,5.823,965,5.823]],["title/miscellaneous/typealiases.html",[895,2.063,966,4.776]],["body/miscellaneous/typealiases.html",[7,0.69,14,0.012,62,0.012,63,0.012,116,3.185,140,0.94,841,4.647,895,3.7,967,5.943,968,5.943]],["title/miscellaneous/variables.html",[895,2.063,969,4.148]],["body/miscellaneous/variables.html",[4,0.095,7,0.396,11,1.624,14,0.014,55,0.767,62,0.009,63,0.009,136,2.272,140,1.039,141,2.965,142,2.965,144,2.669,145,2.965,146,2.125,147,4.237,148,1.89,149,2.965,150,2.669,151,2.125,152,2.965,157,2.965,178,1.704,201,3.1,202,3.28,241,3.499,245,4.237,262,1.551,300,1.624,302,2.669,310,1.89,326,2.669,329,3.815,330,4.452,331,2.965,332,2.965,426,3.815,532,2.448,592,3.815,610,3.037,858,2.965,861,2.965,862,2.965,895,2.125,969,2.965,970,3.414,971,3.414,972,3.414,973,3.414,974,4.879,975,4.879,976,6.212,977,3.414,978,3.414,979,3.414,980,3.414,981,3.414,982,3.414,983,3.414,984,3.414,985,3.414,986,3.414,987,3.414]]],"invertedIndex":[["",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"injectables/AudioService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/CommonService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"classes/FindOneParams.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"controllers/SeeController.html":{},"modules/SeeModule.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":633,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["0.0.1",{"_index":964,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":892,"title":{},"body":{"dependencies.html":{}}}],["0.14.0",{"_index":883,"title":{},"body":{"dependencies.html":{}}}],["0.3.17",{"_index":894,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":882,"title":{},"body":{"dependencies.html":{}}}],["0.6.0",{"_index":887,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":857,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":855,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":856,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":854,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":860,"title":{},"body":{"coverage.html":{}}}],["0/9",{"_index":865,"title":{},"body":{"coverage.html":{}}}],["1",{"_index":273,"title":{"injectables/AuthService-1.html":{}},"body":{"injectables/CatsService.html":{},"injectables/OrdersService.html":{},"injectables/PostService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["1.0.0",{"_index":889,"title":{},"body":{"dependencies.html":{}}}],["1.0.36",{"_index":879,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":757,"title":{},"body":{"injectables/TasksService.html":{}}}],["10.0.0",{"_index":871,"title":{},"body":{"dependencies.html":{}}}],["10.0.1",{"_index":869,"title":{},"body":{"dependencies.html":{}}}],["10.0.2",{"_index":875,"title":{},"body":{"dependencies.html":{}}}],["10.1.1",{"_index":874,"title":{},"body":{"dependencies.html":{}}}],["11",{"_index":960,"title":{},"body":{"overview.html":{}}}],["13",{"_index":959,"title":{},"body":{"overview.html":{}}}],["16.3.1",{"_index":884,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":279,"title":{"injectables/AuthService-2.html":{}},"body":{"injectables/OrdersService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["2.0.2",{"_index":873,"title":{},"body":{"dependencies.html":{}}}],["2.1.0",{"_index":870,"title":{},"body":{"dependencies.html":{}}}],["28",{"_index":962,"title":{},"body":{"overview.html":{}}}],["3",{"_index":961,"title":{},"body":{"overview.html":{}}}],["3.0.4",{"_index":877,"title":{},"body":{"dependencies.html":{}}}],["3.1.1",{"_index":872,"title":{},"body":{"dependencies.html":{}}}],["3.6.1",{"_index":886,"title":{},"body":{"dependencies.html":{}}}],["3306",{"_index":145,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["3600s",{"_index":249,"title":{},"body":{"modules/AuthModule.html":{}}}],["4.0.1",{"_index":888,"title":{},"body":{"dependencies.html":{}}}],["4.11.3",{"_index":880,"title":{},"body":{"dependencies.html":{}}}],["45",{"_index":754,"title":{},"body":{"injectables/TasksService.html":{}}}],["5",{"_index":760,"title":{},"body":{"injectables/TasksService.html":{}}}],["5.2.3",{"_index":881,"title":{},"body":{"dependencies.html":{}}}],["500",{"_index":579,"title":{},"body":{"entities/Photo.html":{}}}],["6",{"_index":963,"title":{},"body":{"overview.html":{}}}],["6379",{"_index":158,"title":{},"body":{"modules/AppModule.html":{}}}],["7.8.1",{"_index":893,"title":{},"body":{"dependencies.html":{}}}],["__dirname",{"_index":977,"title":{},"body":{"miscellaneous/variables.html":{}}}],["_kamil",{"_index":824,"title":{},"body":{"controllers/UsersController.html":{}}}],["aaa",{"_index":322,"title":{},"body":{"controllers/CatsController.html":{}}}],["access_token",{"_index":271,"title":{},"body":{"injectables/AuthService.html":{}}}],["action",{"_index":820,"title":{},"body":{"controllers/UsersController.html":{}}}],["add",{"_index":451,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["adddata",{"_index":621,"title":{},"body":{"injectables/PostService.html":{}}}],["adddata(item",{"_index":626,"title":{},"body":{"injectables/PostService.html":{}}}],["adds",{"_index":821,"title":{},"body":{"controllers/UsersController.html":{}}}],["admin",{"_index":826,"title":{},"body":{"controllers/UsersController.html":{}}}],["aliasedcatsservice",{"_index":331,"title":{},"body":{"modules/CatsModule.html":{},"miscellaneous/variables.html":{}}}],["aliases",{"_index":967,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["amazing",{"_index":937,"title":{},"body":{"index.html":{}}}],["app",{"_index":915,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":97,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":37,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":908,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":65,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":36,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arguments",{"_index":465,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["async",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"controllers/AudioController.html":{},"injectables/AuthService.html":{},"injectables/AuthService-2.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/PhotoService.html":{},"injectables/ResolveService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["audio",{"_index":169,"title":{},"body":{"controllers/AudioController.html":{},"modules/AudioModule.html":{}}}],["audio.controller",{"_index":192,"title":{},"body":{"modules/AudioModule.html":{}}}],["audio.mp3",{"_index":187,"title":{},"body":{"controllers/AudioController.html":{}}}],["audio.processor",{"_index":195,"title":{},"body":{"modules/AudioModule.html":{}}}],["audio.service",{"_index":193,"title":{},"body":{"modules/AudioModule.html":{}}}],["audio/audio.module",{"_index":126,"title":{},"body":{"modules/AppModule.html":{}}}],["audiocontroller",{"_index":166,"title":{"controllers/AudioController.html":{}},"body":{"controllers/AudioController.html":{},"modules/AudioModule.html":{},"coverage.html":{}}}],["audiomodule",{"_index":76,"title":{"modules/AudioModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules.html":{},"overview.html":{}}}],["audioprocessor",{"_index":194,"title":{"classes/AudioProcessor.html":{}},"body":{"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"coverage.html":{}}}],["audioqueue",{"_index":181,"title":{},"body":{"controllers/AudioController.html":{}}}],["audioservice",{"_index":190,"title":{"injectables/AudioService.html":{}},"body":{"modules/AudioModule.html":{},"injectables/AudioService.html":{},"coverage.html":{},"overview.html":{}}}],["auth",{"_index":221,"title":{},"body":{"controllers/AuthController.html":{},"modules/CircularModule.html":{},"injectables/UserServiceForwardRef.html":{}}}],["auth.controller",{"_index":235,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth.guard",{"_index":42,"title":{},"body":{"controllers/AppController.html":{}}}],["auth.guard.ts",{"_index":438,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["auth.guard.ts:12",{"_index":446,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.guard.ts:6",{"_index":443,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["auth.service",{"_index":234,"title":{},"body":{"modules/AuthModule.html":{},"modules/CircularModule.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalStrategy.html":{},"injectables/RetrievingService.html":{}}}],["auth/auth.module",{"_index":101,"title":{},"body":{"modules/AppModule.html":{}}}],["auth/auth.service",{"_index":46,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/jwt",{"_index":44,"title":{},"body":{"controllers/AppController.html":{}}}],["auth/local",{"_index":41,"title":{},"body":{"controllers/AppController.html":{}}}],["authcontroller",{"_index":219,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authentication",{"_index":453,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard",{"_index":38,"title":{},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalAuthGuard.html":{}}}],["authguard('jwt",{"_index":450,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["authguard('local",{"_index":499,"title":{},"body":{"injectables/LocalAuthGuard.html":{}}}],["authmodule",{"_index":77,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":945,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authservice",{"_index":45,"title":{"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{}},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"modules/CircularModule.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalStrategy.html":{},"injectables/RetrievingService.html":{},"injectables/UserServiceForwardRef.html":{},"coverage.html":{},"overview.html":{}}}],["authservice(this.getlazyuserservice",{"_index":497,"title":{},"body":{"injectables/LazyLoaderService.html":{}}}],["authserviceforwardref",{"_index":290,"title":{"injectables/AuthServiceForWardRef.html":{}},"body":{"injectables/AuthServiceForWardRef.html":{},"modules/CircularModule.html":{},"injectables/UserServiceForwardRef.html":{},"coverage.html":{},"overview.html":{}}}],["available",{"_index":957,"title":{},"body":{"modules.html":{}}}],["await",{"_index":185,"title":{},"body":{"controllers/AudioController.html":{},"injectables/AuthService.html":{},"injectables/AuthService-2.html":{},"injectables/LocalStrategy.html":{},"injectables/ResolveService.html":{},"controllers/UsersController.html":{}}}],["backers",{"_index":938,"title":{},"body":{"index.html":{}}}],["based",{"_index":464,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["body",{"_index":369,"title":{},"body":{"controllers/ConfigController.html":{},"controllers/OrdersController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":576,"title":{},"body":{"entities/Photo.html":{},"entities/User.html":{}}}],["bootstrap",{"_index":70,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CircularModule.html":{},"modules/OrdersModule.html":{},"modules/PhotoModule.html":{},"modules/ScopeModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":955,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":953,"title":{},"body":{"modules.html":{}}}],["building",{"_index":903,"title":{},"body":{"index.html":{}}}],["bull",{"_index":176,"title":{},"body":{"controllers/AudioController.html":{},"classes/AudioProcessor.html":{},"dependencies.html":{}}}],["bullmodule",{"_index":127,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{}}}],["bullmodule.forroot",{"_index":155,"title":{},"body":{"modules/AppModule.html":{}}}],["bullmodule.registerqueue",{"_index":196,"title":{},"body":{"modules/AudioModule.html":{}}}],["cache",{"_index":813,"title":{},"body":{"controllers/UsersController.html":{},"dependencies.html":{}}}],["cache_manager",{"_index":814,"title":{},"body":{"controllers/UsersController.html":{}}}],["cachemanager",{"_index":819,"title":{},"body":{"controllers/UsersController.html":{}}}],["cachemodule",{"_index":118,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["cachemodule.register",{"_index":153,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["call",{"_index":457,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate",{"_index":439,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["canactivate(context",{"_index":441,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["cat",{"_index":340,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat_id",{"_index":338,"title":{},"body":{"injectables/CatsService.html":{}}}],["cat_name",{"_index":339,"title":{},"body":{"injectables/CatsService.html":{}}}],["cats",{"_index":308,"title":{},"body":{"controllers/CatsController.html":{}}}],["cats.controller",{"_index":328,"title":{},"body":{"modules/CatsModule.html":{}}}],["cats.service",{"_index":311,"title":{},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{}}}],["cats/cats.module",{"_index":100,"title":{},"body":{"modules/AppModule.html":{}}}],["catscontroller",{"_index":306,"title":{"controllers/CatsController.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"coverage.html":{}}}],["catservice",{"_index":317,"title":{},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{}}}],["catsmodule",{"_index":78,"title":{"modules/CatsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CatsModule.html":{},"modules.html":{},"overview.html":{}}}],["catsservice",{"_index":310,"title":{"injectables/CatsService.html":{}},"body":{"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"coverage.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["changeme",{"_index":845,"title":{},"body":{"injectables/UsersService.html":{}}}],["circular",{"_index":343,"title":{},"body":{"controllers/CircularController.html":{}}}],["circular.controller",{"_index":362,"title":{},"body":{"modules/CircularModule.html":{}}}],["circular/circular.module",{"_index":108,"title":{},"body":{"modules/AppModule.html":{}}}],["circularcontroller",{"_index":341,"title":{"controllers/CircularController.html":{}},"body":{"controllers/CircularController.html":{},"modules/CircularModule.html":{},"coverage.html":{}}}],["circularmodule",{"_index":79,"title":{"modules/CircularModule.html":{}},"body":{"modules/AppModule.html":{},"modules/CircularModule.html":{},"modules.html":{},"overview.html":{}}}],["class",{"_index":48,"title":{"classes/AudioProcessor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"injectables/AudioService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/CommonService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/FindOneParams.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"controllers/SeeController.html":{},"modules/SeeModule.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":197,"title":{},"body":{"classes/AudioProcessor.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"overview.html":{}}}],["classserializerinterceptor",{"_index":804,"title":{},"body":{"controllers/UsersController.html":{}}}],["cluster_appmodule",{"_index":73,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":75,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":74,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_audiomodule",{"_index":188,"title":{},"body":{"modules/AudioModule.html":{},"overview.html":{}}}],["cluster_audiomodule_providers",{"_index":189,"title":{},"body":{"modules/AudioModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":227,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":230,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_imports",{"_index":229,"title":{},"body":{"modules/AuthModule.html":{}}}],["cluster_authmodule_providers",{"_index":228,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_catsmodule",{"_index":324,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_catsmodule_exports",{"_index":325,"title":{},"body":{"modules/CatsModule.html":{},"overview.html":{}}}],["cluster_circularmodule",{"_index":358,"title":{},"body":{"modules/CircularModule.html":{},"overview.html":{}}}],["cluster_circularmodule_providers",{"_index":359,"title":{},"body":{"modules/CircularModule.html":{},"overview.html":{}}}],["cluster_ordersmodule",{"_index":542,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_ordersmodule_providers",{"_index":543,"title":{},"body":{"modules/OrdersModule.html":{},"overview.html":{}}}],["cluster_photomodule",{"_index":586,"title":{},"body":{"modules/PhotoModule.html":{},"overview.html":{}}}],["cluster_photomodule_imports",{"_index":588,"title":{},"body":{"modules/PhotoModule.html":{},"overview.html":{}}}],["cluster_photomodule_providers",{"_index":587,"title":{},"body":{"modules/PhotoModule.html":{},"overview.html":{}}}],["cluster_scopemodule",{"_index":703,"title":{},"body":{"modules/ScopeModule.html":{}}}],["cluster_scopemodule_providers",{"_index":704,"title":{},"body":{"modules/ScopeModule.html":{}}}],["cluster_tasksmodule",{"_index":738,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_tasksmodule_providers",{"_index":739,"title":{},"body":{"modules/TasksModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":834,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":835,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":836,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["code",{"_index":985,"title":{},"body":{"miscellaneous/variables.html":{}}}],["column",{"_index":572,"title":{},"body":{"entities/Photo.html":{},"entities/RoleEntity.html":{},"entities/User.html":{}}}],["column('int",{"_index":581,"title":{},"body":{"entities/Photo.html":{}}}],["column('text",{"_index":570,"title":{},"body":{"entities/Photo.html":{}}}],["column({default",{"_index":772,"title":{},"body":{"entities/User.html":{}}}],["column({length",{"_index":578,"title":{},"body":{"entities/Photo.html":{}}}],["common/common.service",{"_index":103,"title":{},"body":{"modules/AppModule.html":{}}}],["commonservice",{"_index":86,"title":{"injectables/CommonService.html":{}},"body":{"modules/AppModule.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"coverage.html":{},"overview.html":{}}}],["completed",{"_index":217,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["complex",{"_index":981,"title":{},"body":{"miscellaneous/variables.html":{}}}],["config",{"_index":368,"title":{},"body":{"controllers/ConfigController.html":{}}}],["config.controller",{"_index":379,"title":{},"body":{"modules/ConfigModule.html":{}}}],["config.service",{"_index":370,"title":{},"body":{"controllers/ConfigController.html":{},"modules/ConfigModule.html":{}}}],["config/configuration",{"_index":111,"title":{},"body":{"modules/AppModule.html":{}}}],["config/regex.config",{"_index":113,"title":{},"body":{"modules/AppModule.html":{}}}],["config_options",{"_index":380,"title":{},"body":{"modules/ConfigModule.html":{}}}],["configcontroller",{"_index":366,"title":{"controllers/ConfigController.html":{}},"body":{"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"coverage.html":{}}}],["configmodule",{"_index":80,"title":{"modules/ConfigModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ConfigModule.html":{},"modules.html":{},"overview.html":{}}}],["configmodule.forroot",{"_index":134,"title":{},"body":{"modules/AppModule.html":{}}}],["configoptions",{"_index":383,"title":{"interfaces/ConfigOptions.html":{}},"body":{"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"coverage.html":{}}}],["configservice",{"_index":313,"title":{"injectables/ConfigService.html":{}},"body":{"controllers/CatsController.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"coverage.html":{}}}],["configuration",{"_index":110,"title":{},"body":{"modules/AppModule.html":{}}}],["console.log(\"bbbb",{"_index":184,"title":{},"body":{"controllers/AudioController.html":{}}}],["console.log(\"onmoduleinit",{"_index":659,"title":{},"body":{"injectables/ResolveService.html":{}}}],["console.log('this.instanceid",{"_index":640,"title":{},"body":{"injectables/PostService.html":{}}}],["console.log(contextid",{"_index":664,"title":{},"body":{"injectables/ResolveService.html":{}}}],["console.log(envfile",{"_index":405,"title":{},"body":{"injectables/ConfigService.html":{}}}],["console.log(event",{"_index":528,"title":{},"body":{"injectables/OrderCreatedListener.html":{}}}],["console.log(order",{"_index":557,"title":{},"body":{"injectables/OrdersService.html":{}}}],["console.log(port",{"_index":321,"title":{},"body":{"controllers/CatsController.html":{}}}],["console.log(typeof",{"_index":833,"title":{},"body":{"controllers/UsersController.html":{}}}],["const",{"_index":262,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-2.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/CircularController.html":{},"injectables/ConfigService.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"controllers/PostController.html":{},"injectables/ResolveService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["constants",{"_index":242,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["constructor",{"_index":49,"title":{},"body":{"controllers/AppController.html":{},"controllers/AudioController.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"injectables/CommonService.html":{},"injectables/ConfigService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"controllers/ScopeController.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{}}}],["constructor(@inject('config_options",{"_index":398,"title":{},"body":{"injectables/ConfigService.html":{}}}],["constructor(@inject(cache_manager",{"_index":818,"title":{},"body":{"controllers/UsersController.html":{}}}],["constructor(authservice",{"_index":501,"title":{},"body":{"injectables/LocalStrategy.html":{},"injectables/UserServiceForwardRef.html":{}}}],["constructor(eventemitter",{"_index":549,"title":{},"body":{"injectables/OrdersService.html":{}}}],["constructor(moduleref",{"_index":282,"title":{},"body":{"injectables/AuthService-2.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{}}}],["constructor(options",{"_index":390,"title":{},"body":{"injectables/ConfigService.html":{}}}],["constructor(partial",{"_index":679,"title":{},"body":{"entities/RoleEntity.html":{},"entities/User.html":{}}}],["constructor(photorepository",{"_index":597,"title":{},"body":{"injectables/PhotoService.html":{}}}],["constructor(private",{"_index":225,"title":{},"body":{"controllers/AuthController.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"controllers/ConfigController.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"injectables/UserService.html":{}}}],["constructor(shareservice",{"_index":275,"title":{},"body":{"injectables/AuthService-1.html":{},"injectables/UserService.html":{}}}],["constructor(userservice",{"_index":295,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{}}}],["constructor(usersservice",{"_index":252,"title":{},"body":{"injectables/AuthService.html":{}}}],["context",{"_index":444,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["contextid",{"_index":662,"title":{},"body":{"injectables/ResolveService.html":{}}}],["contextidfactory",{"_index":654,"title":{},"body":{"injectables/ResolveService.html":{}}}],["contextidfactory.create",{"_index":663,"title":{},"body":{"injectables/ResolveService.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AudioController.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/CircularController.html":{},"controllers/ConfigController.html":{},"controllers/OrdersController.html":{},"controllers/PostController.html":{},"controllers/ScopeController.html":{},"controllers/SeeController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AudioController.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/CircularController.html":{},"controllers/ConfigController.html":{},"controllers/OrdersController.html":{},"controllers/PostController.html":{},"controllers/ScopeController.html":{},"controllers/SeeController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('audio",{"_index":177,"title":{},"body":{"controllers/AudioController.html":{}}}],["controller('auth",{"_index":224,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('cats",{"_index":314,"title":{},"body":{"controllers/CatsController.html":{}}}],["controller('circular",{"_index":354,"title":{},"body":{"controllers/CircularController.html":{}}}],["controller('config",{"_index":371,"title":{},"body":{"controllers/ConfigController.html":{}}}],["controller('orders",{"_index":539,"title":{},"body":{"controllers/OrdersController.html":{}}}],["controller('posts",{"_index":613,"title":{},"body":{"controllers/PostController.html":{}}}],["controller('scope",{"_index":696,"title":{},"body":{"controllers/ScopeController.html":{}}}],["controller('users",{"_index":816,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AudioController.html":{},"modules/AudioModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"controllers/CircularController.html":{},"modules/CircularModule.html":{},"controllers/ConfigController.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"controllers/PostController.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"controllers/SeeController.html":{},"modules/SeeModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["coverage",{"_index":850,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":532,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["create(@body",{"_index":540,"title":{},"body":{"controllers/OrdersController.html":{},"controllers/UsersController.html":{}}}],["create(createorderdto",{"_index":533,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["create(createuserdto",{"_index":795,"title":{},"body":{"controllers/UsersController.html":{}}}],["created.event",{"_index":526,"title":{},"body":{"injectables/OrderCreatedListener.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{}}}],["created.event.ts",{"_index":514,"title":{},"body":{"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"coverage.html":{}}}],["created.event.ts:2",{"_index":516,"title":{},"body":{"classes/OrderCreatedEvent.html":{}}}],["created.event.ts:3",{"_index":515,"title":{},"body":{"classes/OrderCreatedEvent.html":{}}}],["created.event.ts:8",{"_index":522,"title":{},"body":{"injectables/OrderCreatedListener.html":{}}}],["createorderdto",{"_index":409,"title":{"classes/CreateOrderDto.html":{}},"body":{"classes/CreateOrderDto.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["createuserdto",{"_index":415,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["cron",{"_index":748,"title":{},"body":{"injectables/TasksService.html":{}}}],["cron('45",{"_index":750,"title":{},"body":{"injectables/TasksService.html":{}}}],["custom",{"_index":452,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["data",{"_index":615,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"controllers/SeeController.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{}}}],["data,instanceid",{"_index":618,"title":{},"body":{"controllers/PostController.html":{}}}],["data_source",{"_index":974,"title":{},"body":{"miscellaneous/variables.html":{}}}],["database",{"_index":149,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["database.providers",{"_index":427,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["database/database.module",{"_index":591,"title":{},"body":{"modules/PhotoModule.html":{}}}],["databasemodule",{"_index":424,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/DatabaseModule.html":{},"modules/PhotoModule.html":{},"modules.html":{},"overview.html":{}}}],["databaseproviders",{"_index":426,"title":{},"body":{"modules/DatabaseModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["datasource",{"_index":976,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.getrepository(photo",{"_index":987,"title":{},"body":{"miscellaneous/variables.html":{}}}],["datasource.initialize",{"_index":979,"title":{},"body":{"miscellaneous/variables.html":{}}}],["declarations",{"_index":69,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CircularModule.html":{},"modules/OrdersModule.html":{},"modules/PhotoModule.html":{},"modules/ScopeModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":13,"title":{},"body":{"controllers/AppController.html":{},"controllers/AudioController.html":{},"classes/AudioProcessor.html":{},"controllers/CatsController.html":{},"controllers/CircularController.html":{},"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"entities/Photo.html":{},"controllers/PostController.html":{},"controllers/ScopeController.html":{},"controllers/SeeController.html":{},"injectables/TasksService.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["default",{"_index":201,"title":{},"body":{"classes/AudioProcessor.html":{},"injectables/OrdersService.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/SingletonService.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["defined",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"classes/AudioProcessor.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"interfaces/EnvConfig.html":{},"classes/FindOneParams.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/ScopeController.html":{},"controllers/SeeController.html":{},"injectables/SingletonService.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dependencies",{"_index":67,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CircularModule.html":{},"modules/OrdersModule.html":{},"modules/PhotoModule.html":{},"modules/ScopeModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":412,"title":{},"body":{"classes/CreateOrderDto.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":916,"title":{},"body":{"index.html":{}}}],["development'}.env",{"_index":401,"title":{},"body":{"injectables/ConfigService.html":{}}}],["documentation",{"_index":851,"title":{},"body":{"coverage.html":{}}}],["dotenv",{"_index":395,"title":{},"body":{"injectables/ConfigService.html":{},"dependencies.html":{}}}],["dotenv.parse(fs.readfilesync(envfile",{"_index":407,"title":{},"body":{"injectables/ConfigService.html":{}}}],["dto/create",{"_index":537,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"controllers/UsersController.html":{}}}],["dto/find",{"_index":812,"title":{},"body":{"controllers/UsersController.html":{}}}],["dynamicmodule",{"_index":378,"title":{},"body":{"modules/ConfigModule.html":{}}}],["e2e",{"_index":926,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":904,"title":{},"body":{"index.html":{}}}],["email",{"_index":418,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["emitter",{"_index":132,"title":{},"body":{"modules/AppModule.html":{},"injectables/OrderCreatedListener.html":{},"injectables/OrdersService.html":{},"dependencies.html":{}}}],["entities",{"_index":151,"title":{},"body":{"modules/AppModule.html":{},"entities/Photo.html":{},"entities/RoleEntity.html":{},"entities/User.html":{},"overview.html":{},"miscellaneous/variables.html":{}}}],["entities/order.entity",{"_index":555,"title":{},"body":{"injectables/OrdersService.html":{}}}],["entity",{"_index":564,"title":{"entities/Photo.html":{},"entities/RoleEntity.html":{},"entities/User.html":{}},"body":{"entities/Photo.html":{},"entities/RoleEntity.html":{},"entities/User.html":{},"coverage.html":{}}}],["entity{.ts,.js",{"_index":978,"title":{},"body":{"miscellaneous/variables.html":{}}}],["envconfig",{"_index":389,"title":{"interfaces/EnvConfig.html":{}},"body":{"injectables/ConfigService.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["envfile",{"_index":402,"title":{},"body":{"injectables/ConfigService.html":{}}}],["err",{"_index":447,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["establish",{"_index":459,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["event",{"_index":523,"title":{},"body":{"injectables/OrderCreatedListener.html":{}}}],["eventemitter",{"_index":552,"title":{},"body":{"injectables/OrdersService.html":{}}}],["eventemitter2",{"_index":550,"title":{},"body":{"injectables/OrdersService.html":{}}}],["eventemittermodule",{"_index":130,"title":{},"body":{"modules/AppModule.html":{}}}],["eventemittermodule.forroot",{"_index":159,"title":{},"body":{"modules/AppModule.html":{}}}],["events/order",{"_index":525,"title":{},"body":{"injectables/OrderCreatedListener.html":{},"injectables/OrdersService.html":{}}}],["example",{"_index":456,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exception",{"_index":463,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["exclude",{"_index":675,"title":{},"body":{"entities/RoleEntity.html":{},"entities/User.html":{}}}],["exclude()@column",{"_index":775,"title":{},"body":{"entities/User.html":{}}}],["excludeprefixes",{"_index":823,"title":{},"body":{"controllers/UsersController.html":{}}}],["executioncontext",{"_index":442,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["expandvariables",{"_index":138,"title":{},"body":{"modules/AppModule.html":{}}}],["expiresin",{"_index":248,"title":{},"body":{"modules/AuthModule.html":{}}}],["export",{"_index":47,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"injectables/AudioService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/CommonService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"classes/FindOneParams.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"controllers/SeeController.html":{},"modules/SeeModule.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":72,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CircularModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/PhotoModule.html":{},"modules/ScopeModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["expose",{"_index":676,"title":{},"body":{"entities/RoleEntity.html":{},"entities/User.html":{}}}],["express",{"_index":717,"title":{},"body":{"controllers/SeeController.html":{},"dependencies.html":{}}}],["extends",{"_index":449,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["extractjwt",{"_index":471,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["extractjwt.fromauthheaderasbearertoken",{"_index":479,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["false",{"_index":481,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/ResolveService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"injectables/AudioService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/CommonService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"classes/FindOneParams.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"controllers/SeeController.html":{},"modules/SeeModule.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["filename",{"_index":567,"title":{},"body":{"entities/Photo.html":{}}}],["filepath",{"_index":399,"title":{},"body":{"injectables/ConfigService.html":{}}}],["findall",{"_index":596,"title":{},"body":{"injectables/PhotoService.html":{}}}],["findone",{"_index":794,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["findone(ids",{"_index":797,"title":{},"body":{"controllers/UsersController.html":{}}}],["findone(username",{"_index":842,"title":{},"body":{"injectables/UsersService.html":{}}}],["findoneparams",{"_index":431,"title":{"classes/FindOneParams.html":{}},"body":{"classes/FindOneParams.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["firstname",{"_index":766,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{}}}],["folder",{"_index":387,"title":{},"body":{"interfaces/ConfigOptions.html":{}}}],["forward",{"_index":292,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{},"modules/CircularModule.html":{},"injectables/UserServiceForwardRef.html":{},"coverage.html":{}}}],["forwardref",{"_index":301,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"injectables/UserServiceForwardRef.html":{}}}],["framework",{"_index":902,"title":{},"body":{"index.html":{}}}],["fs",{"_index":396,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/SeeController.html":{}}}],["fullname",{"_index":781,"title":{},"body":{"entities/User.html":{}}}],["function",{"_index":864,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":896,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(\"aaa",{"_index":355,"title":{},"body":{"controllers/CircularController.html":{}}}],["get(':id",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/UsersController.html":{}}}],["get(':id')@version('2",{"_index":798,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('aaa",{"_index":345,"title":{},"body":{"controllers/CircularController.html":{}}}],["get('info",{"_index":608,"title":{},"body":{"controllers/PostController.html":{}}}],["get('profile",{"_index":53,"title":{},"body":{"controllers/AppController.html":{}}}],["get('request",{"_index":687,"title":{},"body":{"controllers/ScopeController.html":{}}}],["get('singleton",{"_index":689,"title":{},"body":{"controllers/ScopeController.html":{}}}],["get('transient",{"_index":691,"title":{},"body":{"controllers/ScopeController.html":{}}}],["get()@version('1')@serializeoptions({excludeprefixes",{"_index":801,"title":{},"body":{"controllers/UsersController.html":{}}}],["get(key",{"_index":392,"title":{},"body":{"injectables/ConfigService.html":{}}}],["getauthhello",{"_index":789,"title":{},"body":{"injectables/UserServiceForwardRef.html":{}}}],["getcat",{"_index":335,"title":{},"body":{"injectables/CatsService.html":{}}}],["getdata",{"_index":622,"title":{},"body":{"injectables/PostService.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"injectables/UserServiceForwardRef.html":{}}}],["getinfo",{"_index":607,"title":{},"body":{"controllers/PostController.html":{}}}],["getinstanceid",{"_index":623,"title":{},"body":{"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{}}}],["getlazyauthservice",{"_index":488,"title":{},"body":{"injectables/LazyLoaderService.html":{}}}],["getlazyuserservice",{"_index":489,"title":{},"body":{"injectables/LazyLoaderService.html":{}}}],["getpostsbyid",{"_index":624,"title":{},"body":{"injectables/PostService.html":{}}}],["getprofile",{"_index":10,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(@request",{"_index":54,"title":{},"body":{"controllers/AppController.html":{}}}],["getprofile(req",{"_index":20,"title":{},"body":{"controllers/AppController.html":{}}}],["getrequestinstanceid",{"_index":684,"title":{},"body":{"controllers/ScopeController.html":{}}}],["getsingletoninstanceid",{"_index":685,"title":{},"body":{"controllers/ScopeController.html":{}}}],["getting",{"_index":898,"title":{"index.html":{}},"body":{}}],["gettransientinstanceid",{"_index":686,"title":{},"body":{"controllers/ScopeController.html":{}}}],["getuserhello",{"_index":294,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{}}}],["getusers",{"_index":344,"title":{},"body":{"controllers/CircularController.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{}}}],["getusersfromuserservice",{"_index":281,"title":{},"body":{"injectables/AuthService-2.html":{}}}],["global",{"_index":327,"title":{},"body":{"modules/CatsModule.html":{}}}],["graph",{"_index":956,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":933,"title":{},"body":{"index.html":{}}}],["guess",{"_index":847,"title":{},"body":{"injectables/UsersService.html":{}}}],["handle",{"_index":527,"title":{},"body":{"injectables/OrderCreatedListener.html":{}}}],["handlecron",{"_index":751,"title":{},"body":{"injectables/TasksService.html":{}}}],["handleinterval",{"_index":756,"title":{},"body":{"injectables/TasksService.html":{}}}],["handleordercreatedevent",{"_index":519,"title":{},"body":{"injectables/OrderCreatedListener.html":{}}}],["handleordercreatedevent(event",{"_index":520,"title":{},"body":{"injectables/OrderCreatedListener.html":{}}}],["handlerequest",{"_index":440,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handlerequest(err",{"_index":445,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["handletimeout",{"_index":743,"title":{},"body":{"injectables/TasksService.html":{}}}],["handletranscode",{"_index":200,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["handletranscode(job",{"_index":205,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["hello",{"_index":164,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/SeeController.html":{},"injectables/UserServiceForwardRef.html":{}}}],["here",{"_index":455,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"index.html":{}}}],["host",{"_index":142,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["https://nestjs.com",{"_index":949,"title":{},"body":{"index.html":{}}}],["id",{"_index":434,"title":{},"body":{"classes/FindOneParams.html":{},"classes/Order.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"entities/RoleEntity.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["identifier",{"_index":852,"title":{},"body":{"coverage.html":{}}}],["ids",{"_index":800,"title":{},"body":{"controllers/UsersController.html":{}}}],["ignoreexpiration",{"_index":480,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["implements",{"_index":655,"title":{},"body":{"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{}}}],["import",{"_index":31,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"injectables/AudioService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/CommonService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"classes/FindOneParams.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"controllers/SeeController.html":{},"modules/SeeModule.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":96,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/PhotoModule.html":{},"modules/UsersModule.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"classes/AudioProcessor.html":{},"injectables/AuthService.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/ScopeController.html":{},"controllers/SeeController.html":{},"injectables/SingletonService.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["index(@res",{"_index":724,"title":{},"body":{"controllers/SeeController.html":{}}}],["index(response",{"_index":710,"title":{},"body":{"controllers/SeeController.html":{}}}],["index.html')).tostring",{"_index":727,"title":{},"body":{"controllers/SeeController.html":{}}}],["indexable",{"_index":429,"title":{},"body":{"interfaces/EnvConfig.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"injectables/AudioService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/CommonService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"classes/FindOneParams.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"controllers/SeeController.html":{},"modules/SeeModule.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["inject",{"_index":300,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"injectables/ConfigService.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"controllers/ScopeController.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["inject('aliasedcatsservice",{"_index":316,"title":{},"body":{"controllers/CatsController.html":{}}}],["inject('catsservice",{"_index":315,"title":{},"body":{"controllers/CatsController.html":{}}}],["inject('photo_repository",{"_index":603,"title":{},"body":{"injectables/PhotoService.html":{}}}],["inject(forwardref",{"_index":304,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"injectables/UserServiceForwardRef.html":{}}}],["inject(requestservice",{"_index":698,"title":{},"body":{"controllers/ScopeController.html":{}}}],["inject(singletonservice",{"_index":699,"title":{},"body":{"controllers/ScopeController.html":{}}}],["inject(transientservice",{"_index":697,"title":{},"body":{"controllers/ScopeController.html":{}}}],["injectable",{"_index":160,"title":{"injectables/AppService.html":{},"injectables/AudioService.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"injectables/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrderCreatedListener.html":{},"injectables/OrdersService.html":{},"injectables/PhotoService.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AudioService.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"injectables/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrderCreatedListener.html":{},"injectables/OrdersService.html":{},"injectables/PhotoService.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":161,"title":{},"body":{"injectables/AppService.html":{},"injectables/AudioService.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"injectables/CatsService.html":{},"injectables/CommonService.html":{},"injectables/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrderCreatedListener.html":{},"injectables/OrdersService.html":{},"injectables/PhotoService.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["injectqueue",{"_index":173,"title":{},"body":{"controllers/AudioController.html":{}}}],["injectqueue('audio",{"_index":180,"title":{},"body":{"controllers/AudioController.html":{}}}],["installation",{"_index":912,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":914,"title":{},"body":{"index.html":{}}}],["instancecount",{"_index":620,"title":{},"body":{"injectables/PostService.html":{}}}],["instanceid",{"_index":617,"title":{},"body":{"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{}}}],["instead",{"_index":980,"title":{},"body":{"miscellaneous/variables.html":{}}}],["interface",{"_index":382,"title":{"interfaces/ConfigOptions.html":{},"interfaces/EnvConfig.html":{}},"body":{"interfaces/ConfigOptions.html":{},"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["interfaces",{"_index":384,"title":{},"body":{"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"interfaces/EnvConfig.html":{},"overview.html":{}}}],["interval",{"_index":720,"title":{},"body":{"controllers/SeeController.html":{},"injectables/TasksService.html":{}}}],["interval(1000).pipe",{"_index":728,"title":{},"body":{"controllers/SeeController.html":{}}}],["interval(10000",{"_index":755,"title":{},"body":{"injectables/TasksService.html":{}}}],["isactive",{"_index":767,"title":{},"body":{"entities/User.html":{}}}],["isemail",{"_index":419,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isglobal",{"_index":135,"title":{},"body":{"modules/AppModule.html":{}}}],["isnotempty",{"_index":421,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isnumberstring",{"_index":436,"title":{},"body":{"classes/FindOneParams.html":{}}}],["ispublished",{"_index":568,"title":{},"body":{"entities/Photo.html":{}}}],["item",{"_index":628,"title":{},"body":{"injectables/PostService.html":{}}}],["items",{"_index":829,"title":{},"body":{"controllers/UsersController.html":{}}}],["job",{"_index":206,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["john",{"_index":844,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":719,"title":{},"body":{"controllers/SeeController.html":{},"index.html":{}}}],["jwt",{"_index":474,"title":{},"body":{"injectables/JwtStrategy.html":{},"dependencies.html":{}}}],["jwt.strategy",{"_index":243,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtauthguard",{"_index":43,"title":{"injectables/JwtAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["jwtconstants",{"_index":241,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["jwtconstants.secret",{"_index":246,"title":{},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{}}}],["jwtfromrequest",{"_index":478,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["jwtmodule",{"_index":239,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtmodule.register",{"_index":244,"title":{},"body":{"modules/AuthModule.html":{}}}],["jwtservice",{"_index":253,"title":{},"body":{"injectables/AuthService.html":{}}}],["jwtstrategy",{"_index":231,"title":{"injectables/JwtStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/JwtStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["kamil",{"_index":946,"title":{},"body":{"index.html":{}}}],["keep",{"_index":982,"title":{},"body":{"miscellaneous/variables.html":{}}}],["key",{"_index":394,"title":{},"body":{"injectables/ConfigService.html":{},"interfaces/EnvConfig.html":{}}}],["lastname",{"_index":768,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{}}}],["lazy",{"_index":348,"title":{},"body":{"controllers/CircularController.html":{},"modules/CircularModule.html":{}}}],["lazyloaderservice",{"_index":347,"title":{"injectables/LazyLoaderService.html":{}},"body":{"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/LazyLoaderService.html":{},"coverage.html":{},"overview.html":{}}}],["legend",{"_index":68,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CircularModule.html":{},"modules/OrdersModule.html":{},"modules/PhotoModule.html":{},"modules/ScopeModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["length",{"_index":584,"title":{},"body":{"entities/Photo.html":{}}}],["license",{"_index":952,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":930,"title":{},"body":{"index.html":{}}}],["listeners/order",{"_index":546,"title":{},"body":{"modules/OrdersModule.html":{}}}],["load",{"_index":137,"title":{},"body":{"modules/AppModule.html":{}}}],["loader.service",{"_index":349,"title":{},"body":{"controllers/CircularController.html":{},"modules/CircularModule.html":{}}}],["loader.service.ts",{"_index":487,"title":{},"body":{"injectables/LazyLoaderService.html":{},"coverage.html":{}}}],["loader.service.ts:10",{"_index":491,"title":{},"body":{"injectables/LazyLoaderService.html":{}}}],["loader.service.ts:17",{"_index":490,"title":{},"body":{"injectables/LazyLoaderService.html":{}}}],["loader.service.ts:7",{"_index":493,"title":{},"body":{"injectables/LazyLoaderService.html":{}}}],["loader.service.ts:8",{"_index":492,"title":{},"body":{"injectables/LazyLoaderService.html":{}}}],["local",{"_index":505,"title":{},"body":{"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["local.strategy",{"_index":238,"title":{},"body":{"modules/AuthModule.html":{}}}],["localauthguard",{"_index":40,"title":{"injectables/LocalAuthGuard.html":{}},"body":{"controllers/AppController.html":{},"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["localhost",{"_index":157,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["localstrategy",{"_index":232,"title":{"injectables/LocalStrategy.html":{}},"body":{"modules/AuthModule.html":{},"injectables/LocalStrategy.html":{},"coverage.html":{},"overview.html":{}}}],["logger",{"_index":174,"title":{},"body":{"controllers/AudioController.html":{},"classes/AudioProcessor.html":{},"injectables/TasksService.html":{}}}],["logger(audiocontroller.name",{"_index":179,"title":{},"body":{"controllers/AudioController.html":{}}}],["logger(audioprocessor.name",{"_index":203,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["logger(tasksservice.name",{"_index":746,"title":{},"body":{"injectables/TasksService.html":{}}}],["loggeraliasprovider",{"_index":329,"title":{},"body":{"modules/CatsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["logic",{"_index":454,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["login",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{}}}],["login(@request",{"_index":60,"title":{},"body":{"controllers/AppController.html":{}}}],["login(req",{"_index":27,"title":{},"body":{"controllers/AppController.html":{}}}],["login(user",{"_index":255,"title":{},"body":{"injectables/AuthService.html":{}}}],["manager",{"_index":120,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["map",{"_index":722,"title":{},"body":{"controllers/SeeController.html":{}}}],["map((_",{"_index":729,"title":{},"body":{"controllers/SeeController.html":{}}}],["maria",{"_index":846,"title":{},"body":{"injectables/UsersService.html":{}}}],["matching",{"_index":63,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"injectables/AudioService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/CommonService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"classes/FindOneParams.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"controllers/SeeController.html":{},"modules/SeeModule.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["math.random",{"_index":637,"title":{},"body":{"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{}}}],["messageevent",{"_index":730,"title":{},"body":{"controllers/SeeController.html":{}}}],["metadata",{"_index":891,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"classes/AudioProcessor.html":{},"injectables/AuthService.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalStrategy.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"controllers/ScopeController.html":{},"controllers/SeeController.html":{},"injectables/SingletonService.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["miscellaneous",{"_index":895,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":929,"title":{},"body":{"index.html":{}}}],["mode",{"_index":920,"title":{},"body":{"index.html":{}}}],["module",{"_index":64,"title":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CircularModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/PhotoModule.html":{},"modules/ScopeModule.html":{},"modules/SeeModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CircularModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/PhotoModule.html":{},"modules/ScopeModule.html":{},"modules/SeeModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["moduleref",{"_index":283,"title":{},"body":{"injectables/AuthService-2.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{}}}],["modules",{"_index":66,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CircularModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/PhotoModule.html":{},"modules/ScopeModule.html":{},"modules/SeeModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":942,"title":{},"body":{"index.html":{}}}],["mysliwiec",{"_index":825,"title":{},"body":{"controllers/UsersController.html":{}}}],["mysql",{"_index":141,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["mysql2",{"_index":885,"title":{},"body":{"dependencies.html":{}}}],["myśliwiec",{"_index":947,"title":{},"body":{"index.html":{}}}],["name",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"injectables/CatsService.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"injectables/PhotoService.html":{},"injectables/PostService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/SeeController.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["nest",{"_index":909,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":951,"title":{},"body":{"index.html":{}}}],["nestjs/bull",{"_index":128,"title":{},"body":{"modules/AppModule.html":{},"controllers/AudioController.html":{},"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"dependencies.html":{}}}],["nestjs/cache",{"_index":119,"title":{},"body":{"modules/AppModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["nestjs/common",{"_index":35,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"injectables/AudioService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/CommonService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"modules/DatabaseModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"controllers/SeeController.html":{},"modules/SeeModule.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":109,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":286,"title":{},"body":{"injectables/AuthService-2.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"dependencies.html":{}}}],["nestjs/event",{"_index":131,"title":{},"body":{"modules/AppModule.html":{},"injectables/OrderCreatedListener.html":{},"injectables/OrdersService.html":{},"dependencies.html":{}}}],["nestjs/jwt",{"_index":240,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"dependencies.html":{}}}],["nestjs/passport",{"_index":39,"title":{},"body":{"controllers/AppController.html":{},"modules/AuthModule.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":876,"title":{},"body":{"dependencies.html":{}}}],["nestjs/schedule",{"_index":122,"title":{},"body":{"modules/AppModule.html":{},"injectables/TasksService.html":{},"dependencies.html":{}}}],["nestjs/typeorm",{"_index":115,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{},"dependencies.html":{}}}],["new",{"_index":178,"title":{},"body":{"controllers/AudioController.html":{},"classes/AudioProcessor.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalStrategy.html":{},"injectables/OrdersService.html":{},"injectables/TasksService.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["node.js",{"_index":901,"title":{},"body":{"index.html":{}}}],["null",{"_index":266,"title":{},"body":{"injectables/AuthService.html":{}}}],["number",{"_index":435,"title":{},"body":{"classes/FindOneParams.html":{},"classes/Order.html":{},"entities/Photo.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"entities/RoleEntity.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"controllers/UsersController.html":{}}}],["object",{"_index":610,"title":{},"body":{"controllers/PostController.html":{},"injectables/RequestService.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["object.assign(this",{"_index":681,"title":{},"body":{"entities/RoleEntity.html":{},"entities/User.html":{}}}],["observable",{"_index":715,"title":{},"body":{"controllers/SeeController.html":{}}}],["once",{"_index":759,"title":{},"body":{"injectables/TasksService.html":{}}}],["one",{"_index":433,"title":{},"body":{"classes/FindOneParams.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["onetomany",{"_index":779,"title":{},"body":{"entities/User.html":{}}}],["onevent",{"_index":524,"title":{},"body":{"injectables/OrderCreatedListener.html":{}}}],["onevent('order.created",{"_index":521,"title":{},"body":{"injectables/OrderCreatedListener.html":{}}}],["onmoduleinit",{"_index":651,"title":{},"body":{"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{}}}],["open",{"_index":931,"title":{},"body":{"index.html":{}}}],["optional",{"_index":25,"title":{},"body":{"controllers/AppController.html":{},"classes/AudioProcessor.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/PhotoService.html":{},"injectables/PostService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"controllers/SeeController.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":377,"title":{},"body":{"modules/ConfigModule.html":{},"injectables/ConfigService.html":{}}}],["options.folder",{"_index":404,"title":{},"body":{"injectables/ConfigService.html":{}}}],["options.interface.ts",{"_index":386,"title":{},"body":{"interfaces/ConfigOptions.html":{},"coverage.html":{}}}],["order",{"_index":507,"title":{"classes/Order.html":{}},"body":{"classes/Order.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["order.description",{"_index":562,"title":{},"body":{"injectables/OrdersService.html":{}}}],["order.dto",{"_index":538,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["order.dto.ts",{"_index":411,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["order.dto.ts:2",{"_index":414,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.dto.ts:3",{"_index":413,"title":{},"body":{"classes/CreateOrderDto.html":{}}}],["order.name",{"_index":560,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordercreatedevent",{"_index":512,"title":{"classes/OrderCreatedEvent.html":{}},"body":{"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"injectables/OrdersService.html":{},"coverage.html":{}}}],["ordercreatedevent.description",{"_index":561,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordercreatedevent.name",{"_index":559,"title":{},"body":{"injectables/OrdersService.html":{}}}],["ordercreatedlistener",{"_index":517,"title":{"injectables/OrderCreatedListener.html":{}},"body":{"injectables/OrderCreatedListener.html":{},"modules/OrdersModule.html":{},"coverage.html":{},"overview.html":{}}}],["orders",{"_index":531,"title":{},"body":{"controllers/OrdersController.html":{},"injectables/OrdersService.html":{}}}],["orders.controller",{"_index":545,"title":{},"body":{"modules/OrdersModule.html":{}}}],["orders.service",{"_index":536,"title":{},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{}}}],["orders/orders.module",{"_index":129,"title":{},"body":{"modules/AppModule.html":{}}}],["orderscontroller",{"_index":529,"title":{"controllers/OrdersController.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"coverage.html":{}}}],["ordersmodule",{"_index":81,"title":{"modules/OrdersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/OrdersModule.html":{},"modules.html":{},"overview.html":{}}}],["ordersservice",{"_index":535,"title":{"injectables/OrdersService.html":{}},"body":{"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"coverage.html":{},"overview.html":{}}}],["out",{"_index":93,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CircularModule.html":{},"modules/OrdersModule.html":{},"modules/PhotoModule.html":{},"modules/ScopeModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["outside",{"_index":984,"title":{},"body":{"miscellaneous/variables.html":{}}}],["overview",{"_index":958,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":868,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":611,"title":{},"body":{"controllers/PostController.html":{},"controllers/UsersController.html":{}}}],["parameters",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"classes/AudioProcessor.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/PhotoService.html":{},"injectables/PostService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"controllers/SeeController.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parsearraypipe",{"_index":805,"title":{},"body":{"controllers/UsersController.html":{}}}],["parseintpipe",{"_index":806,"title":{},"body":{"controllers/UsersController.html":{}}}],["partial",{"_index":680,"title":{},"body":{"entities/RoleEntity.html":{},"entities/User.html":{}}}],["pass",{"_index":258,"title":{},"body":{"injectables/AuthService.html":{}}}],["passport",{"_index":473,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"dependencies.html":{}}}],["passportmodule",{"_index":237,"title":{},"body":{"modules/AuthModule.html":{}}}],["passportstrategy",{"_index":475,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["passportstrategy(strategy",{"_index":476,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["password",{"_index":148,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"injectables/LocalStrategy.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["path",{"_index":397,"title":{},"body":{"injectables/ConfigService.html":{},"controllers/SeeController.html":{}}}],["path.resolve(__dirname",{"_index":403,"title":{},"body":{"injectables/ConfigService.html":{}}}],["payload",{"_index":267,"title":{},"body":{"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{}}}],["payload.sub",{"_index":484,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["payload.username",{"_index":485,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["photo",{"_index":565,"title":{"entities/Photo.html":{}},"body":{"entities/Photo.html":{},"injectables/PhotoService.html":{},"coverage.html":{}}}],["photo.entity",{"_index":602,"title":{},"body":{"injectables/PhotoService.html":{}}}],["photo.providers",{"_index":593,"title":{},"body":{"modules/PhotoModule.html":{}}}],["photo.service",{"_index":594,"title":{},"body":{"modules/PhotoModule.html":{}}}],["photo_repository",{"_index":986,"title":{},"body":{"miscellaneous/variables.html":{}}}],["photomodule",{"_index":585,"title":{"modules/PhotoModule.html":{}},"body":{"modules/PhotoModule.html":{},"modules.html":{},"overview.html":{}}}],["photoproviders",{"_index":592,"title":{},"body":{"modules/PhotoModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["photorepository",{"_index":600,"title":{},"body":{"injectables/PhotoService.html":{}}}],["photoservice",{"_index":589,"title":{"injectables/PhotoService.html":{}},"body":{"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"coverage.html":{},"overview.html":{}}}],["please",{"_index":940,"title":{},"body":{"index.html":{}}}],["port",{"_index":144,"title":{},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"miscellaneous/variables.html":{}}}],["post",{"_index":32,"title":{},"body":{"controllers/AppController.html":{},"controllers/AudioController.html":{},"controllers/ConfigController.html":{},"controllers/OrdersController.html":{},"injectables/PostService.html":{},"controllers/UsersController.html":{}}}],["post('auth/login",{"_index":59,"title":{},"body":{"controllers/AppController.html":{}}}],["post('transcode",{"_index":171,"title":{},"body":{"controllers/AudioController.html":{}}}],["post.service",{"_index":612,"title":{},"body":{"controllers/PostController.html":{}}}],["post/post.controller",{"_index":98,"title":{},"body":{"modules/AppModule.html":{}}}],["post/post.service",{"_index":99,"title":{},"body":{"modules/AppModule.html":{}}}],["post_id",{"_index":638,"title":{},"body":{"injectables/PostService.html":{}}}],["post_name",{"_index":639,"title":{},"body":{"injectables/PostService.html":{}}}],["postcoderegex",{"_index":319,"title":{},"body":{"controllers/CatsController.html":{}}}],["postcontroller",{"_index":95,"title":{"controllers/PostController.html":{}},"body":{"modules/AppModule.html":{},"controllers/PostController.html":{},"coverage.html":{}}}],["posts",{"_index":606,"title":{},"body":{"controllers/PostController.html":{}}}],["postservice",{"_index":87,"title":{"injectables/PostService.html":{}},"body":{"modules/AppModule.html":{},"controllers/CatsController.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"coverage.html":{},"overview.html":{}}}],["prefix",{"_index":168,"title":{},"body":{"controllers/AudioController.html":{},"controllers/AuthController.html":{},"controllers/CatsController.html":{},"controllers/CircularController.html":{},"controllers/ConfigController.html":{},"controllers/OrdersController.html":{},"controllers/PostController.html":{},"controllers/ScopeController.html":{},"controllers/UsersController.html":{}}}],["primarygeneratedcolumn",{"_index":574,"title":{},"body":{"entities/Photo.html":{},"entities/User.html":{}}}],["private",{"_index":50,"title":{},"body":{"controllers/AppController.html":{},"controllers/AudioController.html":{},"classes/AudioProcessor.html":{},"injectables/AuthService.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"injectables/CommonService.html":{},"injectables/ConfigService.html":{},"injectables/LazyLoaderService.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/RetrievingService.html":{},"controllers/ScopeController.html":{},"injectables/SingletonService.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["process",{"_index":210,"title":{},"body":{"classes/AudioProcessor.html":{},"injectables/OrderCreatedListener.html":{}}}],["process('transcode",{"_index":207,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["process.env.mysql_host",{"_index":143,"title":{},"body":{"modules/AppModule.html":{}}}],["process.env.node_env",{"_index":400,"title":{},"body":{"injectables/ConfigService.html":{}}}],["processor",{"_index":211,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["processor('audio",{"_index":212,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["production",{"_index":922,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":900,"title":{},"body":{"index.html":{}}}],["project",{"_index":932,"title":{},"body":{"index.html":{}}}],["promise",{"_index":260,"title":{},"body":{"injectables/AuthService.html":{},"injectables/AuthService-2.html":{},"injectables/LocalStrategy.html":{},"injectables/PhotoService.html":{},"injectables/UsersService.html":{}}}],["promise.all",{"_index":657,"title":{},"body":{"injectables/ResolveService.html":{}}}],["properties",{"_index":199,"title":{"properties.html":{}},"body":{"classes/AudioProcessor.html":{},"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"injectables/LazyLoaderService.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"injectables/SingletonService.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UsersService.html":{},"properties.html":{}}}],["provide",{"_index":330,"title":{},"body":{"modules/CatsModule.html":{},"modules/ConfigModule.html":{},"miscellaneous/variables.html":{}}}],["providers",{"_index":71,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CircularModule.html":{},"modules/ConfigModule.html":{},"modules/DatabaseModule.html":{},"modules/OrdersModule.html":{},"modules/PhotoModule.html":{},"modules/ScopeModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["public",{"_index":548,"title":{},"body":{"injectables/OrdersService.html":{}}}],["query",{"_index":807,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('ids",{"_index":828,"title":{},"body":{"controllers/UsersController.html":{}}}],["queue",{"_index":175,"title":{},"body":{"controllers/AudioController.html":{}}}],["read",{"_index":941,"title":{},"body":{"index.html":{}}}],["readfilesync",{"_index":718,"title":{},"body":{"controllers/SeeController.html":{}}}],["readonly",{"_index":51,"title":{},"body":{"controllers/AppController.html":{},"controllers/AudioController.html":{},"classes/AudioProcessor.html":{},"controllers/AuthController.html":{},"injectables/AuthService-2.html":{},"controllers/CatsController.html":{},"controllers/CircularController.html":{},"controllers/ConfigController.html":{},"injectables/ConfigService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"controllers/ScopeController.html":{},"injectables/TasksService.html":{},"injectables/UsersService.html":{}}}],["redis",{"_index":156,"title":{},"body":{"modules/AppModule.html":{}}}],["ref.service",{"_index":303,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{},"modules/CircularModule.html":{},"injectables/UserServiceForwardRef.html":{}}}],["ref.service.ts",{"_index":293,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{},"injectables/UserServiceForwardRef.html":{},"coverage.html":{}}}],["ref.service.ts:11",{"_index":298,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{},"injectables/UserServiceForwardRef.html":{}}}],["ref.service.ts:15",{"_index":299,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{},"injectables/UserServiceForwardRef.html":{}}}],["ref.service.ts:5",{"_index":297,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{},"injectables/UserServiceForwardRef.html":{}}}],["reflect",{"_index":890,"title":{},"body":{"dependencies.html":{}}}],["regex",{"_index":112,"title":{},"body":{"modules/AppModule.html":{}}}],["register",{"_index":374,"title":{},"body":{"modules/ConfigModule.html":{}}}],["register(options",{"_index":375,"title":{},"body":{"modules/ConfigModule.html":{}}}],["repository",{"_index":598,"title":{},"body":{"injectables/PhotoService.html":{},"index.html":{}}}],["req",{"_index":26,"title":{},"body":{"controllers/AppController.html":{}}}],["req.user",{"_index":56,"title":{},"body":{"controllers/AppController.html":{}}}],["request",{"_index":33,"title":{},"body":{"controllers/AppController.html":{}}}],["request.service",{"_index":694,"title":{},"body":{"controllers/ScopeController.html":{},"modules/ScopeModule.html":{}}}],["requestservice",{"_index":88,"title":{"injectables/RequestService.html":{}},"body":{"modules/AppModule.html":{},"injectables/RequestService.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"coverage.html":{},"overview.html":{}}}],["res",{"_index":716,"title":{},"body":{"controllers/SeeController.html":{}}}],["reset",{"_index":92,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CircularModule.html":{},"modules/OrdersModule.html":{},"modules/PhotoModule.html":{},"modules/ScopeModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resolveservice",{"_index":350,"title":{"injectables/ResolveService.html":{}},"body":{"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/ResolveService.html":{},"coverage.html":{},"overview.html":{}}}],["resolving",{"_index":351,"title":{},"body":{"controllers/CircularController.html":{},"modules/CircularModule.html":{}}}],["response",{"_index":711,"title":{},"body":{"controllers/SeeController.html":{}}}],["result",{"_index":265,"title":{},"body":{"injectables/AuthService.html":{}}}],["results",{"_index":62,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"injectables/AudioService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/CommonService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"classes/FindOneParams.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"controllers/SeeController.html":{},"modules/SeeModule.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["retrieving.service",{"_index":363,"title":{},"body":{"modules/CircularModule.html":{}}}],["retrievingservice",{"_index":360,"title":{"injectables/RetrievingService.html":{}},"body":{"modules/CircularModule.html":{},"injectables/RetrievingService.html":{},"coverage.html":{},"overview.html":{}}}],["return",{"_index":55,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalStrategy.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"controllers/ScopeController.html":{},"controllers/SeeController.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["returns",{"_index":18,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"classes/AudioProcessor.html":{},"injectables/AuthService.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/ConfigModule.html":{},"injectables/ConfigService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalStrategy.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"controllers/ScopeController.html":{},"controllers/SeeController.html":{},"injectables/SingletonService.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["role",{"_index":769,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{}}}],["role.entity",{"_index":780,"title":{},"body":{"entities/User.html":{},"controllers/UsersController.html":{}}}],["roleentity",{"_index":671,"title":{"entities/RoleEntity.html":{}},"body":{"entities/RoleEntity.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["root",{"_index":147,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["run",{"_index":917,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":721,"title":{},"body":{"controllers/SeeController.html":{},"dependencies.html":{}}}],["rxjs/operators",{"_index":723,"title":{},"body":{"controllers/SeeController.html":{}}}],["safe",{"_index":983,"title":{},"body":{"miscellaneous/variables.html":{}}}],["scalable",{"_index":905,"title":{},"body":{"index.html":{}}}],["schedulemodule",{"_index":121,"title":{},"body":{"modules/AppModule.html":{}}}],["schedulemodule.forroot",{"_index":154,"title":{},"body":{"modules/AppModule.html":{}}}],["scope",{"_index":352,"title":{},"body":{"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"controllers/ScopeController.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{},"injectables/UserService.html":{},"coverage.html":{}}}],["scope.controller",{"_index":706,"title":{},"body":{"modules/ScopeModule.html":{}}}],["scope.request",{"_index":647,"title":{},"body":{"injectables/RequestService.html":{},"injectables/UserService.html":{}}}],["scope.transient",{"_index":635,"title":{},"body":{"injectables/PostService.html":{},"injectables/TransientService.html":{}}}],["scope/request.service",{"_index":106,"title":{},"body":{"modules/AppModule.html":{}}}],["scope/scope.module",{"_index":104,"title":{},"body":{"modules/AppModule.html":{}}}],["scope/singleton.service",{"_index":107,"title":{},"body":{"modules/AppModule.html":{}}}],["scope/transient.service",{"_index":105,"title":{},"body":{"modules/AppModule.html":{}}}],["scopecontroller",{"_index":682,"title":{"controllers/ScopeController.html":{}},"body":{"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"coverage.html":{}}}],["scopemodule",{"_index":82,"title":{"modules/ScopeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/ScopeModule.html":{},"modules.html":{},"overview.html":{}}}],["second",{"_index":753,"title":{},"body":{"injectables/TasksService.html":{}}}],["seconds",{"_index":758,"title":{},"body":{"injectables/TasksService.html":{}}}],["secret",{"_index":245,"title":{},"body":{"modules/AuthModule.html":{},"miscellaneous/variables.html":{}}}],["secretorkey",{"_index":482,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["see.controller",{"_index":732,"title":{},"body":{"modules/SeeModule.html":{}}}],["see/see.module",{"_index":133,"title":{},"body":{"modules/AppModule.html":{}}}],["seecontroller",{"_index":707,"title":{"controllers/SeeController.html":{}},"body":{"controllers/SeeController.html":{},"modules/SeeModule.html":{},"coverage.html":{}}}],["seemodule",{"_index":83,"title":{"modules/SeeModule.html":{}},"body":{"modules/AppModule.html":{},"modules/SeeModule.html":{},"modules.html":{},"overview.html":{}}}],["send(readfilesync(join(__dirname",{"_index":726,"title":{},"body":{"controllers/SeeController.html":{}}}],["separator",{"_index":830,"title":{},"body":{"controllers/UsersController.html":{}}}],["serializeoptions",{"_index":808,"title":{},"body":{"controllers/UsersController.html":{}}}],["server",{"_index":906,"title":{},"body":{"index.html":{}}}],["service",{"_index":666,"title":{},"body":{"injectables/RetrievingService.html":{},"injectables/UserService.html":{}}}],["service.service",{"_index":353,"title":{},"body":{"controllers/CircularController.html":{},"modules/CircularModule.html":{}}}],["service.service.ts",{"_index":650,"title":{},"body":{"injectables/ResolveService.html":{},"coverage.html":{}}}],["service.service.ts:17",{"_index":653,"title":{},"body":{"injectables/ResolveService.html":{}}}],["service.service.ts:6",{"_index":652,"title":{},"body":{"injectables/ResolveService.html":{}}}],["session",{"_index":460,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["share.service",{"_index":278,"title":{},"body":{"injectables/AuthService-1.html":{},"modules/CircularModule.html":{},"injectables/UserService.html":{}}}],["shareservice",{"_index":276,"title":{"injectables/ShareService.html":{}},"body":{"injectables/AuthService-1.html":{},"modules/CircularModule.html":{},"injectables/ShareService.html":{},"injectables/UserService.html":{},"coverage.html":{},"overview.html":{}}}],["side",{"_index":907,"title":{},"body":{"index.html":{}}}],["signoptions",{"_index":247,"title":{},"body":{"modules/AuthModule.html":{}}}],["singleton.service",{"_index":695,"title":{},"body":{"controllers/ScopeController.html":{},"modules/ScopeModule.html":{}}}],["singletonservice",{"_index":89,"title":{"injectables/SingletonService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"injectables/SingletonService.html":{},"coverage.html":{},"overview.html":{}}}],["something",{"_index":183,"title":{},"body":{"controllers/AudioController.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AudioController.html":{},"modules/AudioModule.html":{},"classes/AudioProcessor.html":{},"injectables/AudioService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"modules/CatsModule.html":{},"injectables/CatsService.html":{},"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/CommonService.html":{},"controllers/ConfigController.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"modules/DatabaseModule.html":{},"interfaces/EnvConfig.html":{},"classes/FindOneParams.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalAuthGuard.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"modules/OrdersModule.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"modules/PhotoModule.html":{},"injectables/PhotoService.html":{},"controllers/PostController.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"controllers/SeeController.html":{},"modules/SeeModule.html":{},"injectables/ShareService.html":{},"injectables/SingletonService.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["sponsors",{"_index":935,"title":{},"body":{"index.html":{}}}],["src/.../cats.module.ts",{"_index":972,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../constants.ts",{"_index":971,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../database.providers.ts",{"_index":970,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":897,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../photo.providers.ts",{"_index":973,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../users.service.ts",{"_index":968,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:17",{"_index":22,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:22",{"_index":17,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.controller.ts:28",{"_index":29,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":94,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":162,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":163,"title":{},"body":{"injectables/AppService.html":{}}}],["src/audio/audio.controller.ts",{"_index":167,"title":{},"body":{"controllers/AudioController.html":{},"coverage.html":{}}}],["src/audio/audio.controller.ts:13",{"_index":172,"title":{},"body":{"controllers/AudioController.html":{}}}],["src/audio/audio.module.ts",{"_index":191,"title":{},"body":{"modules/AudioModule.html":{}}}],["src/audio/audio.processor.ts",{"_index":198,"title":{},"body":{"classes/AudioProcessor.html":{},"coverage.html":{}}}],["src/audio/audio.processor.ts:10",{"_index":208,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["src/audio/audio.processor.ts:7",{"_index":204,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["src/audio/audio.service.ts",{"_index":218,"title":{},"body":{"injectables/AudioService.html":{},"coverage.html":{}}}],["src/auth/auth.controller.ts",{"_index":220,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module.ts",{"_index":233,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/auth.service.ts",{"_index":250,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/auth.service.ts:12",{"_index":259,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:21",{"_index":256,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/auth.service.ts:6",{"_index":254,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/constants.ts",{"_index":858,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/auth/jwt",{"_index":437,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts",{"_index":466,"title":{},"body":{"injectables/JwtStrategy.html":{},"coverage.html":{}}}],["src/auth/jwt.strategy.ts:16",{"_index":470,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/jwt.strategy.ts:7",{"_index":468,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["src/auth/local",{"_index":498,"title":{},"body":{"injectables/LocalAuthGuard.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts",{"_index":500,"title":{},"body":{"injectables/LocalStrategy.html":{},"coverage.html":{}}}],["src/auth/local.strategy.ts:12",{"_index":504,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/auth/local.strategy.ts:7",{"_index":502,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["src/cats/cats.controller.ts",{"_index":307,"title":{},"body":{"controllers/CatsController.html":{},"coverage.html":{}}}],["src/cats/cats.controller.ts:16",{"_index":309,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/cats/cats.module.ts",{"_index":326,"title":{},"body":{"modules/CatsModule.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/cats/cats.service",{"_index":365,"title":{},"body":{"injectables/CommonService.html":{}}}],["src/cats/cats.service.ts",{"_index":334,"title":{},"body":{"injectables/CatsService.html":{},"coverage.html":{}}}],["src/cats/cats.service.ts:11",{"_index":336,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/circular/auth",{"_index":291,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{},"coverage.html":{}}}],["src/circular/auth.service.ts",{"_index":274,"title":{},"body":{"injectables/AuthService-1.html":{},"coverage.html":{}}}],["src/circular/auth.service.ts:5",{"_index":277,"title":{},"body":{"injectables/AuthService-1.html":{}}}],["src/circular/circular.controller.ts",{"_index":342,"title":{},"body":{"controllers/CircularController.html":{},"coverage.html":{}}}],["src/circular/circular.controller.ts:13",{"_index":346,"title":{},"body":{"controllers/CircularController.html":{}}}],["src/circular/circular.module.ts",{"_index":361,"title":{},"body":{"modules/CircularModule.html":{}}}],["src/circular/injector.service.ts",{"_index":280,"title":{},"body":{"injectables/AuthService-2.html":{},"coverage.html":{}}}],["src/circular/injector.service.ts:10",{"_index":285,"title":{},"body":{"injectables/AuthService-2.html":{}}}],["src/circular/injector.service.ts:7",{"_index":284,"title":{},"body":{"injectables/AuthService-2.html":{}}}],["src/circular/lazy",{"_index":486,"title":{},"body":{"injectables/LazyLoaderService.html":{},"coverage.html":{}}}],["src/circular/resolving",{"_index":649,"title":{},"body":{"injectables/ResolveService.html":{},"coverage.html":{}}}],["src/circular/retrieving.service.ts",{"_index":665,"title":{},"body":{"injectables/RetrievingService.html":{},"coverage.html":{}}}],["src/circular/retrieving.service.ts:10",{"_index":668,"title":{},"body":{"injectables/RetrievingService.html":{}}}],["src/circular/retrieving.service.ts:7",{"_index":667,"title":{},"body":{"injectables/RetrievingService.html":{}}}],["src/circular/share.service.ts",{"_index":733,"title":{},"body":{"injectables/ShareService.html":{},"coverage.html":{}}}],["src/circular/use",{"_index":788,"title":{},"body":{"injectables/UserServiceForwardRef.html":{},"coverage.html":{}}}],["src/circular/user.service.ts",{"_index":785,"title":{},"body":{"injectables/UserService.html":{},"coverage.html":{}}}],["src/circular/user.service.ts:6",{"_index":786,"title":{},"body":{"injectables/UserService.html":{}}}],["src/circular/user.service.ts:9",{"_index":787,"title":{},"body":{"injectables/UserService.html":{}}}],["src/common/common.service",{"_index":337,"title":{},"body":{"injectables/CatsService.html":{}}}],["src/common/common.service.ts",{"_index":364,"title":{},"body":{"injectables/CommonService.html":{},"coverage.html":{}}}],["src/config/config.controller.ts",{"_index":367,"title":{},"body":{"controllers/ConfigController.html":{},"coverage.html":{}}}],["src/config/config.module.ts",{"_index":372,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/config/config.module.ts:7",{"_index":376,"title":{},"body":{"modules/ConfigModule.html":{}}}],["src/config/config.service.ts",{"_index":388,"title":{},"body":{"injectables/ConfigService.html":{},"coverage.html":{}}}],["src/config/config.service.ts:10",{"_index":391,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/config/config.service.ts:19",{"_index":393,"title":{},"body":{"injectables/ConfigService.html":{}}}],["src/config/interfaces/config",{"_index":385,"title":{},"body":{"interfaces/ConfigOptions.html":{},"coverage.html":{}}}],["src/config/interfaces/envconfig.interface.ts",{"_index":428,"title":{},"body":{"interfaces/EnvConfig.html":{},"coverage.html":{}}}],["src/config/interfaces/envconfig.interface.ts:1",{"_index":430,"title":{},"body":{"interfaces/EnvConfig.html":{}}}],["src/database/database.module.ts",{"_index":425,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/database/database.providers.ts",{"_index":861,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/photo.entity.ts",{"_index":566,"title":{},"body":{"entities/Photo.html":{},"coverage.html":{}}}],["src/database/photo.entity.ts:12",{"_index":571,"title":{},"body":{"entities/Photo.html":{}}}],["src/database/photo.entity.ts:15",{"_index":573,"title":{},"body":{"entities/Photo.html":{}}}],["src/database/photo.entity.ts:18",{"_index":582,"title":{},"body":{"entities/Photo.html":{}}}],["src/database/photo.entity.ts:21",{"_index":577,"title":{},"body":{"entities/Photo.html":{}}}],["src/database/photo.entity.ts:6",{"_index":575,"title":{},"body":{"entities/Photo.html":{}}}],["src/database/photo.entity.ts:9",{"_index":580,"title":{},"body":{"entities/Photo.html":{}}}],["src/database/photo.module.ts",{"_index":590,"title":{},"body":{"modules/PhotoModule.html":{}}}],["src/database/photo.providers.ts",{"_index":862,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["src/database/photo.service.ts",{"_index":595,"title":{},"body":{"injectables/PhotoService.html":{},"coverage.html":{}}}],["src/database/photo.service.ts:12",{"_index":601,"title":{},"body":{"injectables/PhotoService.html":{}}}],["src/database/photo.service.ts:6",{"_index":599,"title":{},"body":{"injectables/PhotoService.html":{}}}],["src/main.ts",{"_index":863,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/orders/dto/create",{"_index":410,"title":{},"body":{"classes/CreateOrderDto.html":{},"coverage.html":{}}}],["src/orders/entities/order.entity.ts",{"_index":508,"title":{},"body":{"classes/Order.html":{},"coverage.html":{}}}],["src/orders/entities/order.entity.ts:2",{"_index":510,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/entities/order.entity.ts:3",{"_index":511,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/entities/order.entity.ts:4",{"_index":509,"title":{},"body":{"classes/Order.html":{}}}],["src/orders/events/order",{"_index":513,"title":{},"body":{"classes/OrderCreatedEvent.html":{},"coverage.html":{}}}],["src/orders/listeners/order",{"_index":518,"title":{},"body":{"injectables/OrderCreatedListener.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts",{"_index":530,"title":{},"body":{"controllers/OrdersController.html":{},"coverage.html":{}}}],["src/orders/orders.controller.ts:10",{"_index":534,"title":{},"body":{"controllers/OrdersController.html":{}}}],["src/orders/orders.module.ts",{"_index":544,"title":{},"body":{"modules/OrdersModule.html":{}}}],["src/orders/orders.service.ts",{"_index":547,"title":{},"body":{"injectables/OrdersService.html":{},"coverage.html":{}}}],["src/orders/orders.service.ts:20",{"_index":551,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:24",{"_index":553,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/orders/orders.service.ts:9",{"_index":554,"title":{},"body":{"injectables/OrdersService.html":{}}}],["src/post/post.controller.ts",{"_index":605,"title":{},"body":{"controllers/PostController.html":{},"coverage.html":{}}}],["src/post/post.controller.ts:11",{"_index":609,"title":{},"body":{"controllers/PostController.html":{}}}],["src/post/post.service",{"_index":312,"title":{},"body":{"controllers/CatsController.html":{}}}],["src/post/post.service.ts",{"_index":619,"title":{},"body":{"injectables/PostService.html":{},"coverage.html":{}}}],["src/post/post.service.ts:13",{"_index":631,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:20",{"_index":627,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:25",{"_index":629,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:29",{"_index":630,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:5",{"_index":632,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:6",{"_index":634,"title":{},"body":{"injectables/PostService.html":{}}}],["src/post/post.service.ts:7",{"_index":625,"title":{},"body":{"injectables/PostService.html":{}}}],["src/scope/request.service.ts",{"_index":643,"title":{},"body":{"injectables/RequestService.html":{},"coverage.html":{}}}],["src/scope/request.service.ts:12",{"_index":645,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/scope/request.service.ts:5",{"_index":646,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/scope/request.service.ts:6",{"_index":644,"title":{},"body":{"injectables/RequestService.html":{}}}],["src/scope/scope.controller.ts",{"_index":683,"title":{},"body":{"controllers/ScopeController.html":{},"coverage.html":{}}}],["src/scope/scope.controller.ts:18",{"_index":692,"title":{},"body":{"controllers/ScopeController.html":{}}}],["src/scope/scope.controller.ts:23",{"_index":688,"title":{},"body":{"controllers/ScopeController.html":{}}}],["src/scope/scope.controller.ts:28",{"_index":690,"title":{},"body":{"controllers/ScopeController.html":{}}}],["src/scope/scope.module.ts",{"_index":705,"title":{},"body":{"modules/ScopeModule.html":{}}}],["src/scope/singleton.service.ts",{"_index":734,"title":{},"body":{"injectables/SingletonService.html":{},"coverage.html":{}}}],["src/scope/singleton.service.ts:13",{"_index":736,"title":{},"body":{"injectables/SingletonService.html":{}}}],["src/scope/singleton.service.ts:5",{"_index":737,"title":{},"body":{"injectables/SingletonService.html":{}}}],["src/scope/singleton.service.ts:7",{"_index":735,"title":{},"body":{"injectables/SingletonService.html":{}}}],["src/scope/transient.service.ts",{"_index":761,"title":{},"body":{"injectables/TransientService.html":{},"coverage.html":{}}}],["src/scope/transient.service.ts:12",{"_index":763,"title":{},"body":{"injectables/TransientService.html":{}}}],["src/scope/transient.service.ts:5",{"_index":764,"title":{},"body":{"injectables/TransientService.html":{}}}],["src/scope/transient.service.ts:6",{"_index":762,"title":{},"body":{"injectables/TransientService.html":{}}}],["src/see/see.controller.ts",{"_index":708,"title":{},"body":{"controllers/SeeController.html":{},"coverage.html":{}}}],["src/see/see.controller.ts:11",{"_index":712,"title":{},"body":{"controllers/SeeController.html":{}}}],["src/see/see.controller.ts:18",{"_index":714,"title":{},"body":{"controllers/SeeController.html":{}}}],["src/see/see.module.ts",{"_index":731,"title":{},"body":{"modules/SeeModule.html":{}}}],["src/tasks/tasks.module.ts",{"_index":740,"title":{},"body":{"modules/TasksModule.html":{}}}],["src/tasks/tasks.service.ts",{"_index":742,"title":{},"body":{"injectables/TasksService.html":{},"coverage.html":{}}}],["src/tasks/tasks.service.ts:19",{"_index":745,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/tasks/tasks.service.ts:6",{"_index":747,"title":{},"body":{"injectables/TasksService.html":{}}}],["src/users/dto/create",{"_index":416,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dto/find",{"_index":432,"title":{},"body":{"classes/FindOneParams.html":{},"coverage.html":{}}}],["src/users/role.entity.ts",{"_index":672,"title":{},"body":{"entities/RoleEntity.html":{},"coverage.html":{}}}],["src/users/role.entity.ts:6",{"_index":673,"title":{},"body":{"entities/RoleEntity.html":{}}}],["src/users/role.entity.ts:7",{"_index":674,"title":{},"body":{"entities/RoleEntity.html":{}}}],["src/users/user.entity.ts",{"_index":765,"title":{},"body":{"entities/User.html":{},"coverage.html":{}}}],["src/users/user.entity.ts:12",{"_index":771,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:15",{"_index":770,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:18",{"_index":774,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:26",{"_index":778,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:30",{"_index":776,"title":{},"body":{"entities/User.html":{}}}],["src/users/user.entity.ts:33",{"_index":773,"title":{},"body":{"entities/User.html":{}}}],["src/users/users.controller.ts",{"_index":792,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:29",{"_index":796,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:37",{"_index":803,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:49",{"_index":799,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":236,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/users/users.module.ts",{"_index":837,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/users/users.service",{"_index":223,"title":{},"body":{"controllers/AuthController.html":{}}}],["src/users/users.service.ts",{"_index":841,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["src/users/users.service.ts:20",{"_index":843,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.service.ts:7",{"_index":848,"title":{},"body":{"injectables/UsersService.html":{}}}],["sse",{"_index":709,"title":{},"body":{"controllers/SeeController.html":{}}}],["sse('sse",{"_index":713,"title":{},"body":{"controllers/SeeController.html":{}}}],["start",{"_index":918,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":921,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":923,"title":{},"body":{"index.html":{}}}],["started",{"_index":899,"title":{"index.html":{}},"body":{}}],["starter",{"_index":911,"title":{},"body":{"index.html":{}}}],["statements",{"_index":853,"title":{},"body":{"coverage.html":{}}}],["static",{"_index":373,"title":{},"body":{"modules/ConfigModule.html":{},"injectables/PostService.html":{}}}],["stay",{"_index":943,"title":{},"body":{"index.html":{}}}],["strategy",{"_index":472,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["string",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CatsController.html":{},"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"interfaces/EnvConfig.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"entities/Photo.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"entities/RoleEntity.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["sub",{"_index":269,"title":{},"body":{"injectables/AuthService.html":{}}}],["super",{"_index":477,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["super.canactivate(context",{"_index":461,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["super.login(request",{"_index":458,"title":{},"body":{"injectables/JwtAuthGuard.html":{}}}],["support",{"_index":936,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":954,"title":{},"body":{"modules.html":{}}}],["synchronize",{"_index":152,"title":{},"body":{"modules/AppModule.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":867,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":866,"title":{},"body":{"coverage.html":{}}}],["tasks.service",{"_index":741,"title":{},"body":{"modules/TasksModule.html":{}}}],["tasks/tasks.module",{"_index":125,"title":{},"body":{"modules/AppModule.html":{}}}],["tasks/tasks.service",{"_index":124,"title":{},"body":{"modules/AppModule.html":{}}}],["tasksmodule",{"_index":84,"title":{"modules/TasksModule.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"modules.html":{},"overview.html":{}}}],["tasksservice",{"_index":123,"title":{"injectables/TasksService.html":{}},"body":{"modules/AppModule.html":{},"modules/TasksModule.html":{},"injectables/TasksService.html":{},"coverage.html":{},"overview.html":{}}}],["test",{"_index":150,"title":{},"body":{"modules/AppModule.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["test:covsupport",{"_index":928,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":927,"title":{},"body":{"index.html":{}}}],["tests",{"_index":925,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":934,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":57,"title":{},"body":{"controllers/AppController.html":{}}}],["this.audioqueue.add('transcode",{"_index":186,"title":{},"body":{"controllers/AudioController.html":{}}}],["this.authservice",{"_index":496,"title":{},"body":{"injectables/LazyLoaderService.html":{}}}],["this.authservice.gethello",{"_index":790,"title":{},"body":{"injectables/UserServiceForwardRef.html":{}}}],["this.authservice.login(req.user",{"_index":61,"title":{},"body":{"controllers/AppController.html":{}}}],["this.authservice.validateuser(username",{"_index":506,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["this.cachemanager.get('key",{"_index":832,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.cachemanager.set('key",{"_index":831,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.catservice.getcat",{"_index":323,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.configservice.get('port",{"_index":318,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.configservice.get('regex.postcode",{"_index":320,"title":{},"body":{"controllers/CatsController.html":{}}}],["this.data",{"_index":642,"title":{},"body":{"injectables/PostService.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{}}}],["this.data.push(\"hello",{"_index":648,"title":{},"body":{"injectables/RequestService.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{}}}],["this.data.push(item",{"_index":641,"title":{},"body":{"injectables/PostService.html":{}}}],["this.envconfig",{"_index":406,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.envconfig[key",{"_index":408,"title":{},"body":{"injectables/ConfigService.html":{}}}],["this.eventemitter.emit('order.created",{"_index":563,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.firstname",{"_index":782,"title":{},"body":{"entities/User.html":{}}}],["this.instanceid",{"_index":636,"title":{},"body":{"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{}}}],["this.jwtservice.sign(payload",{"_index":272,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.lastname",{"_index":783,"title":{},"body":{"entities/User.html":{}}}],["this.lazyloaderservice.getlazyuserservice",{"_index":356,"title":{},"body":{"controllers/CircularController.html":{}}}],["this.logger.debug('called",{"_index":752,"title":{},"body":{"injectables/TasksService.html":{}}}],["this.logger.debug('start",{"_index":213,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["this.logger.debug('transcoding",{"_index":216,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["this.logger.debug(job.data",{"_index":215,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["this.logger.log('doing",{"_index":182,"title":{},"body":{"controllers/AudioController.html":{}}}],["this.moduleref.create(userservice",{"_index":288,"title":{},"body":{"injectables/AuthService-2.html":{}}}],["this.moduleref.get(authservice",{"_index":670,"title":{},"body":{"injectables/RetrievingService.html":{}}}],["this.moduleref.resolve(userservice",{"_index":658,"title":{},"body":{"injectables/ResolveService.html":{}}}],["this.orders.length",{"_index":556,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.orders.push(order",{"_index":558,"title":{},"body":{"injectables/OrdersService.html":{}}}],["this.ordersservice.create(createorderdto",{"_index":541,"title":{},"body":{"controllers/OrdersController.html":{}}}],["this.photorepository.find",{"_index":604,"title":{},"body":{"injectables/PhotoService.html":{}}}],["this.postservice.adddata('some",{"_index":614,"title":{},"body":{"controllers/PostController.html":{}}}],["this.postservice.getinstanceid",{"_index":616,"title":{},"body":{"controllers/PostController.html":{}}}],["this.requestservice.getinstanceid",{"_index":701,"title":{},"body":{"controllers/ScopeController.html":{}}}],["this.resolveservice.onmoduleinit",{"_index":357,"title":{},"body":{"controllers/CircularController.html":{}}}],["this.service",{"_index":669,"title":{},"body":{"injectables/RetrievingService.html":{}}}],["this.singletonservice.getinstanceid",{"_index":702,"title":{},"body":{"controllers/ScopeController.html":{}}}],["this.transientservice.getinstanceid",{"_index":700,"title":{},"body":{"controllers/ScopeController.html":{}}}],["this.users.find(user",{"_index":849,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.userservice",{"_index":494,"title":{},"body":{"injectables/LazyLoaderService.html":{}}}],["this.userservice.gethello",{"_index":305,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{}}}],["this.usersservice.findone(username",{"_index":263,"title":{},"body":{"injectables/AuthService.html":{}}}],["throw",{"_index":462,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["timeout",{"_index":749,"title":{},"body":{"injectables/TasksService.html":{}}}],["timeout(5000",{"_index":744,"title":{},"body":{"injectables/TasksService.html":{}}}],["touch",{"_index":944,"title":{},"body":{"index.html":{}}}],["transcode",{"_index":170,"title":{},"body":{"controllers/AudioController.html":{}}}],["transcoding",{"_index":214,"title":{},"body":{"classes/AudioProcessor.html":{}}}],["transform",{"_index":677,"title":{},"body":{"entities/RoleEntity.html":{},"entities/User.html":{}}}],["transform(({value",{"_index":784,"title":{},"body":{"entities/User.html":{}}}],["transformer",{"_index":678,"title":{},"body":{"entities/RoleEntity.html":{},"entities/User.html":{},"dependencies.html":{}}}],["transient.service",{"_index":693,"title":{},"body":{"controllers/ScopeController.html":{},"modules/ScopeModule.html":{}}}],["transientservice",{"_index":90,"title":{"injectables/TransientService.html":{}},"body":{"modules/AppModule.html":{},"controllers/ScopeController.html":{},"modules/ScopeModule.html":{},"injectables/TransientService.html":{},"coverage.html":{},"overview.html":{}}}],["true",{"_index":136,"title":{},"body":{"modules/AppModule.html":{},"injectables/ResolveService.html":{},"entities/User.html":{},"controllers/UsersController.html":{},"miscellaneous/variables.html":{}}}],["twitter",{"_index":950,"title":{},"body":{"index.html":{}}}],["type",{"_index":140,"title":{},"body":{"modules/AppModule.html":{},"classes/AudioProcessor.html":{},"injectables/AuthService.html":{},"injectables/AuthService-1.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"modules/ConfigModule.html":{},"interfaces/ConfigOptions.html":{},"injectables/ConfigService.html":{},"classes/CreateOrderDto.html":{},"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"injectables/JwtAuthGuard.html":{},"injectables/JwtStrategy.html":{},"injectables/LazyLoaderService.html":{},"injectables/LocalStrategy.html":{},"classes/Order.html":{},"classes/OrderCreatedEvent.html":{},"injectables/OrderCreatedListener.html":{},"controllers/OrdersController.html":{},"injectables/OrdersService.html":{},"entities/Photo.html":{},"injectables/PhotoService.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/ResolveService.html":{},"injectables/RetrievingService.html":{},"entities/RoleEntity.html":{},"controllers/SeeController.html":{},"injectables/SingletonService.html":{},"injectables/TransientService.html":{},"entities/User.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["type('text/html",{"_index":725,"title":{},"body":{"controllers/SeeController.html":{}}}],["typealiases",{"_index":966,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typeorm",{"_index":583,"title":{},"body":{"entities/Photo.html":{},"injectables/PhotoService.html":{},"entities/RoleEntity.html":{},"entities/User.html":{},"dependencies.html":{}}}],["typeormmodule",{"_index":114,"title":{},"body":{"modules/AppModule.html":{},"modules/UsersModule.html":{}}}],["typeormmodule.forfeature([user",{"_index":840,"title":{},"body":{"modules/UsersModule.html":{}}}],["typeormmodule.forroot",{"_index":139,"title":{},"body":{"modules/AppModule.html":{}}}],["types/passport",{"_index":878,"title":{},"body":{"dependencies.html":{}}}],["typescript",{"_index":910,"title":{},"body":{"index.html":{}}}],["unauthorizedexception",{"_index":448,"title":{},"body":{"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{}}}],["undefined",{"_index":802,"title":{},"body":{"controllers/UsersController.html":{}}}],["unit",{"_index":924,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":30,"title":{},"body":{"controllers/AppController.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"controllers/UsersController.html":{}}}],["unlicensed",{"_index":965,"title":{},"body":{"properties.html":{}}}],["use",{"_index":302,"title":{},"body":{"injectables/AuthServiceForWardRef.html":{},"modules/CircularModule.html":{},"miscellaneous/variables.html":{}}}],["useclass",{"_index":333,"title":{},"body":{"modules/CatsModule.html":{}}}],["useexisting",{"_index":332,"title":{},"body":{"modules/CatsModule.html":{},"miscellaneous/variables.html":{}}}],["usefactory",{"_index":975,"title":{},"body":{"miscellaneous/variables.html":{}}}],["useguards",{"_index":34,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard",{"_index":52,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(jwtauthguard)@get('profile",{"_index":21,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard",{"_index":58,"title":{},"body":{"controllers/AppController.html":{}}}],["useguards(localauthguard)@post('auth/login",{"_index":28,"title":{},"body":{"controllers/AppController.html":{}}}],["useinterceptors",{"_index":809,"title":{},"body":{"controllers/UsersController.html":{}}}],["useinterceptors(classserializerinterceptor",{"_index":817,"title":{},"body":{"controllers/UsersController.html":{}}}],["user",{"_index":116,"title":{"entities/User.html":{}},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtAuthGuard.html":{},"injectables/LocalStrategy.html":{},"entities/User.html":{},"injectables/UserService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["user.dto",{"_index":811,"title":{},"body":{"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":417,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"coverage.html":{}}}],["user.dto.ts:5",{"_index":420,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{}}}],["user.dto.ts:8",{"_index":422,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.entity",{"_index":815,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["user.password",{"_index":264,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.service",{"_index":287,"title":{},"body":{"injectables/AuthService-2.html":{},"modules/CircularModule.html":{},"injectables/LazyLoaderService.html":{},"injectables/ResolveService.html":{}}}],["user.userid",{"_index":270,"title":{},"body":{"injectables/AuthService.html":{}}}],["user.username",{"_index":268,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["userid",{"_index":483,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/UsersService.html":{}}}],["username",{"_index":146,"title":{},"body":{"modules/AppModule.html":{},"injectables/AuthService.html":{},"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["users",{"_index":793,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["users.controller",{"_index":838,"title":{},"body":{"modules/UsersModule.html":{}}}],["users.service",{"_index":839,"title":{},"body":{"modules/UsersModule.html":{}}}],["users/user.entity",{"_index":117,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.module",{"_index":102,"title":{},"body":{"modules/AppModule.html":{}}}],["users/users.service",{"_index":261,"title":{},"body":{"injectables/AuthService.html":{}}}],["userscontroller",{"_index":791,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":226,"title":{"injectables/UserService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService-2.html":{},"injectables/AuthServiceForWardRef.html":{},"controllers/CircularController.html":{},"modules/CircularModule.html":{},"injectables/LazyLoaderService.html":{},"injectables/ResolveService.html":{},"injectables/UserService.html":{},"injectables/UserServiceForwardRef.html":{},"coverage.html":{},"overview.html":{}}}],["userservice(this.getlazyauthservice",{"_index":495,"title":{},"body":{"injectables/LazyLoaderService.html":{}}}],["userservice.getusers",{"_index":289,"title":{},"body":{"injectables/AuthService-2.html":{},"controllers/CircularController.html":{}}}],["userserviceforwardref",{"_index":296,"title":{"injectables/UserServiceForwardRef.html":{}},"body":{"injectables/AuthServiceForWardRef.html":{},"modules/CircularModule.html":{},"injectables/UserServiceForwardRef.html":{},"coverage.html":{},"overview.html":{}}}],["userservices",{"_index":656,"title":{},"body":{"injectables/ResolveService.html":{}}}],["userservices[0",{"_index":660,"title":{},"body":{"injectables/ResolveService.html":{}}}],["userservices[1",{"_index":661,"title":{},"body":{"injectables/ResolveService.html":{}}}],["usersmodule",{"_index":85,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":222,"title":{"injectables/UsersService.html":{}},"body":{"controllers/AuthController.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["usevalue",{"_index":381,"title":{},"body":{"modules/ConfigModule.html":{}}}],["validate",{"_index":467,"title":{},"body":{"injectables/JwtStrategy.html":{},"injectables/LocalStrategy.html":{}}}],["validate(payload",{"_index":469,"title":{},"body":{"injectables/JwtStrategy.html":{}}}],["validate(username",{"_index":503,"title":{},"body":{"injectables/LocalStrategy.html":{}}}],["validateuser",{"_index":251,"title":{},"body":{"injectables/AuthService.html":{}}}],["validateuser(username",{"_index":257,"title":{},"body":{"injectables/AuthService.html":{}}}],["validator",{"_index":423,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/FindOneParams.html":{},"dependencies.html":{}}}],["value",{"_index":202,"title":{},"body":{"classes/AudioProcessor.html":{},"injectables/OrdersService.html":{},"injectables/PostService.html":{},"injectables/RequestService.html":{},"injectables/SingletonService.html":{},"injectables/TasksService.html":{},"injectables/TransientService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/variables.html":{}}}],["value.name",{"_index":777,"title":{},"body":{"entities/User.html":{}}}],["variable",{"_index":859,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":969,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":810,"title":{},"body":{"controllers/UsersController.html":{},"properties.html":{}}}],["version('1",{"_index":822,"title":{},"body":{"controllers/UsersController.html":{}}}],["version('2",{"_index":827,"title":{},"body":{"controllers/UsersController.html":{}}}],["views",{"_index":569,"title":{},"body":{"entities/Photo.html":{}}}],["void",{"_index":209,"title":{},"body":{"classes/AudioProcessor.html":{},"injectables/OrderCreatedListener.html":{},"injectables/PostService.html":{},"injectables/RetrievingService.html":{},"controllers/SeeController.html":{},"injectables/TasksService.html":{}}}],["watch",{"_index":919,"title":{},"body":{"index.html":{}}}],["website",{"_index":948,"title":{},"body":{"index.html":{}}}],["world",{"_index":165,"title":{},"body":{"injectables/AppService.html":{},"controllers/SeeController.html":{}}}],["yarn",{"_index":913,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":939,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":91,"title":{},"body":{"modules/AppModule.html":{},"modules/AudioModule.html":{},"modules/AuthModule.html":{},"modules/CatsModule.html":{},"modules/CircularModule.html":{},"modules/OrdersModule.html":{},"modules/PhotoModule.html":{},"modules/ScopeModule.html":{},"modules/TasksModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                            \n                                    \n                                    \n                                getProfile\n                            \n                            \n                                    \n                                    \n                                    Async\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        getProfile\n                        \n                    \n                \n            \n            \n                \n                    \n                    getProfile(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(JwtAuthGuard)@Get('profile')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(req)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @UseGuards(LocalAuthGuard)@Post('auth/login')\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    req\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Post, Request, UseGuards } from '@nestjs/common';\nimport { AppService } from './app.service';\nimport { AuthGuard } from '@nestjs/passport';\nimport { LocalAuthGuard } from './auth/local-auth.guard';\nimport { JwtAuthGuard } from './auth/jwt-auth.guard';\nimport { AuthService } from './auth/auth.service';\n\n@Controller()\nexport class AppController {\n  constructor(\n    private readonly appService: AppService,\n    private authService: AuthService\n  ) {}\n\n  @UseGuards(JwtAuthGuard)\n  @Get('profile')\n  getProfile(@Request() req) {\n    return req.user;\n  }\n\n  @Get(':id')\n  getHello(): string {\n    return this.appService.getHello();\n  }\n\n  @UseGuards(LocalAuthGuard)\n  @Post('auth/login')\n  async login(@Request() req) {\n    return this.authService.login(req.user);\n  }\n\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAudioModule\n\nAudioModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAudioModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCircularModule\n\nCircularModule\n\nAppModule -->\n\nCircularModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nScopeModule\n\nScopeModule\n\nAppModule -->\n\nScopeModule->AppModule\n\n\n\n\n\nSeeModule\n\nSeeModule\n\nAppModule -->\n\nSeeModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nAppModule -->\n\nCommonService->AppModule\n\n\n\n\n\nPostService\n\nPostService\n\nAppModule -->\n\nPostService->AppModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nAppModule -->\n\nRequestService->AppModule\n\n\n\n\n\nSingletonService\n\nSingletonService\n\nAppModule -->\n\nSingletonService->AppModule\n\n\n\n\n\nTransientService\n\nTransientService\n\nAppModule -->\n\nTransientService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                        \n                            CommonService\n                        \n                        \n                            PostService\n                        \n                        \n                            RequestService\n                        \n                        \n                            SingletonService\n                        \n                        \n                            TransientService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                        \n                            PostController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AudioModule\n                        \n                        \n                            AuthModule\n                        \n                        \n                            CatsModule\n                        \n                        \n                            CircularModule\n                        \n                        \n                            ConfigModule\n                        \n                        \n                            OrdersModule\n                        \n                        \n                            ScopeModule\n                        \n                        \n                            SeeModule\n                        \n                        \n                            TasksModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { PostController } from './post/post.controller';\nimport { PostService } from './post/post.service';\nimport { CatsModule } from './cats/cats.module';\nimport { AuthModule } from './auth/auth.module';\nimport { UsersModule } from './users/users.module';\nimport { CommonService } from './common/common.service';\nimport { ScopeModule } from './scope/scope.module';\nimport { TransientService } from './scope/transient.service';\nimport { RequestService } from './scope/request.service';\nimport { SingletonService } from './scope/singleton.service';\nimport { CircularModule } from './circular/circular.module';\nimport { ConfigModule } from '@nestjs/config';\nimport configuration from './config/configuration';\nimport regex from './config/regex.config';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './users/user.entity';\nimport { CacheModule } from '@nestjs/cache-manager';\nimport { ScheduleModule } from '@nestjs/schedule';\nimport { TasksService } from './tasks/tasks.service';\nimport { TasksModule } from './tasks/tasks.module';\nimport { AudioModule } from './audio/audio.module';\nimport { BullModule } from '@nestjs/bull';\nimport { OrdersModule } from './orders/orders.module';\nimport { EventEmitterModule } from '@nestjs/event-emitter';\nimport { SeeModule } from './see/see.module';\n\n@Module({\n  imports: [\n    CatsModule,\n    AuthModule,\n    UsersModule,\n    ScopeModule,\n    CircularModule,\n    ConfigModule.forRoot({\n      isGlobal: true,\n      load: [configuration, regex],\n      expandVariables: true,\n    }),\n    TypeOrmModule.forRoot({\n      type: 'mysql',\n      host: process.env.MYSQL_HOST,\n      port: 3306,\n      username: 'root',\n      password: 'mysql',\n      database: 'test',\n      entities: [User],\n      synchronize: true,\n    }),\n    CacheModule.register(),\n    ScheduleModule.forRoot(),\n    TasksModule,\n    BullModule.forRoot({\n      redis: {\n        host: 'localhost',\n        port: 6379,\n      },\n    }),\n    AudioModule,\n    OrdersModule,\n    EventEmitterModule.forRoot(),\n    SeeModule\n  ],\n  controllers: [AppController, PostController],\n  providers: [\n    AppService,\n    PostService,\n    CommonService,\n    TransientService,\n    RequestService,\n    SingletonService,\n  ],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AudioController.html":{"url":"controllers/AudioController.html","title":"controller - AudioController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AudioController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/audio/audio.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                audio\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Async\n                                transcode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        Async\n                        transcode\n                        \n                    \n                \n            \n            \n                \n                    \n                    transcode()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post('transcode')\n                \n            \n\n            \n                \n                    Defined in src/audio/audio.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { InjectQueue } from '@nestjs/bull';\nimport { Controller, Logger, Post } from '@nestjs/common';\nimport { Queue } from 'bull';\n\n@Controller('audio')\nexport class AudioController {\n  private readonly logger = new Logger(AudioController.name);\n  constructor(\n    @InjectQueue('audio') private readonly audioQueue: Queue,\n  ) {}\n\n  @Post('transcode')\n  async transcode() {\n    this.logger.log('Doing something...');\n    console.log(\"bbbb\");\n    await this.audioQueue.add('transcode', {\n      file: 'audio.mp3',\n    });\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AudioModule.html":{"url":"modules/AudioModule.html","title":"module - AudioModule","body":"\n                   \n\n\n\n\n    Modules\n    AudioModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AudioModule\n\n\n\ncluster_AudioModule_providers\n\n\n\n\nAudioService\n\nAudioService\n\n\n\nAudioModule\n\nAudioModule\n\nAudioModule -->\n\nAudioService->AudioModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/audio/audio.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AudioService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AudioController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AudioController } from './audio.controller';\nimport { AudioService } from './audio.service';\nimport { BullModule } from '@nestjs/bull';\nimport { AudioProcessor } from './audio.processor';\n\n@Module({\n  imports: [\n    BullModule.registerQueue({\n      name: 'audio',\n    }),\n  ],\n  controllers: [AudioController],\n  providers: [AudioService, AudioProcessor],\n})\nexport class AudioModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/AudioProcessor.html":{"url":"classes/AudioProcessor.html","title":"class - AudioProcessor","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  AudioProcessor\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/audio/audio.processor.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleTranscode\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(AudioProcessor.name)\n                    \n                \n                    \n                        \n                                Defined in src/audio/audio.processor.ts:7\n                        \n                    \n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        handleTranscode\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleTranscode(job: Job)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Process('transcode')\n                \n            \n\n            \n                \n                    Defined in src/audio/audio.processor.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    job\n                                    \n                                            Job\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n\n\n\n\n    \n\n\n    \n        import { Process, Processor } from '@nestjs/bull';\nimport { Logger } from '@nestjs/common';\nimport { Job } from 'bull';\n\n@Processor('audio')\nexport class AudioProcessor {\n  private readonly logger = new Logger(AudioProcessor.name);\n\n  @Process('transcode')\n  handleTranscode(job: Job) {\n    this.logger.debug('Start transcoding...');\n    this.logger.debug(job.data);\n    this.logger.debug('Transcoding completed');\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AudioService.html":{"url":"injectables/AudioService.html","title":"injectable - AudioService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AudioService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/audio/audio.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AudioService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { UsersService } from 'src/users/users.service';\n\n@Controller('auth')\nexport class AuthController {\n  constructor(private readonly userService: UsersService){}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_AuthModule_imports\n\n\n\ncluster_AuthModule_exports\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nAuthModule\n\nAuthModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            JwtStrategy\n                        \n                        \n                            LocalStrategy\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AuthService } from './auth.service';\nimport { AuthController } from './auth.controller';\nimport { UsersModule } from 'src/users/users.module';\nimport { PassportModule } from '@nestjs/passport';\nimport { LocalStrategy } from './local.strategy';\nimport { JwtModule } from '@nestjs/jwt';\nimport { jwtConstants } from './constants';\nimport { JwtStrategy } from './jwt.strategy';\n\n@Module({\n  imports: [\n    UsersModule,\n    PassportModule,\n    JwtModule.register({\n      secret: jwtConstants.secret,\n      signOptions: { expiresIn: '3600s' },\n    }),\n  ],\n  providers: [AuthService, LocalStrategy, JwtStrategy],\n  controllers: [AuthController],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                login\n                            \n                            \n                                    Async\n                                validateUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService, jwtService: JwtService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/auth.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                                \n                                                        jwtService\n                                                  \n                                                        \n                                                                    JwtService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        login\n                        \n                    \n                \n            \n            \n                \n                    \n                    login(user: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:21\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    user\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validateUser\n                        \n                    \n                \n            \n            \n                \n                    \n                    validateUser(username: string, pass: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/auth.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    pass\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from '../users/users.service';\nimport { JwtService } from '@nestjs/jwt';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    private usersService: UsersService,\n    private jwtService: JwtService\n  ) {}\n\n  async validateUser(username: string, pass: string): Promise {\n    const user = await this.usersService.findOne(username);\n    if (user && user.password === pass) {\n      const { password, ...result } = user;\n      return result;\n    }\n    return null;\n  }\n\n  async login(user: any) {\n    const payload = { username: user.username, sub: user.userId };\n    return {\n      access_token: this.jwtService.sign(payload),\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService-1.html":{"url":"injectables/AuthService-1.html","title":"injectable - AuthService-1","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/circular/auth.service.ts\n        \n\n\n\n\n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(shareService: ShareService)\n                    \n                \n                        \n                            \n                                Defined in src/circular/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shareService\n                                                  \n                                                        \n                                                                        ShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { ShareService } from './share.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(private shareService: ShareService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService-2.html":{"url":"injectables/AuthService-2.html","title":"injectable - AuthService-2","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/circular/injector.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                getUsersFromUserService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/circular/injector.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        getUsersFromUserService\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsersFromUserService()\n                \n            \n\n\n            \n                \n                    Defined in src/circular/injector.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ModuleRef } from '@nestjs/core';\nimport { Injectable } from '@nestjs/common';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(private readonly moduleRef: ModuleRef) {}\n\n  async getUsersFromUserService(): Promise {\n    const userService = await this.moduleRef.create(UserService);\n\n    return userService.getUsers();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthServiceForWardRef.html":{"url":"injectables/AuthServiceForWardRef.html","title":"injectable - AuthServiceForWardRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthServiceForWardRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/circular/auth-forward-ref.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                            \n                                getUserHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(userService: UserServiceForwardRef)\n                    \n                \n                        \n                            \n                                Defined in src/circular/auth-forward-ref.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        userService\n                                                  \n                                                        \n                                                                        UserServiceForwardRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/circular/auth-forward-ref.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getUserHello\n                        \n                    \n                \n            \n            \n                \ngetUserHello()\n                \n            \n\n\n            \n                \n                    Defined in src/circular/auth-forward-ref.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, forwardRef } from '@nestjs/common';\nimport { UserServiceForwardRef } from './use-forward-ref.service';\n\n@Injectable()\nexport class AuthServiceForWardRef {\n  constructor(\n    @Inject(forwardRef(() => UserServiceForwardRef))\n    private userService: UserServiceForwardRef,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from AuthService ForWardRef';\n  }\n\n  getUserHello(): string {\n    return this.userService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CatsController.html":{"url":"controllers/CatsController.html","title":"controller - CatsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CatsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                cats\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getHello\n                        \n                    \n                \n            \n            \n                \n                    \n                    getHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/cats/cats.controller.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Inject } from '@nestjs/common';\nimport { CatsService } from './cats.service';\nimport { PostService } from 'src/post/post.service';\nimport { ConfigService } from '@nestjs/config';\n\n@Controller('cats')\nexport class CatsController {\n  constructor(\n    private readonly configService: ConfigService,\n    @Inject('CatsService') \n    // @Inject('AliasedCatsService') \n    private readonly catService: CatsService,\n    ) {}\n\n  @Get()\n  getHello(): string {\n    const port = this.configService.get('port');\n    const postcodeRegex = this.configService.get('regex.postcode');\n\n    console.log(port, postcodeRegex);\n    return \"aaa\";\n    // return this.catService.getCat();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CatsModule.html":{"url":"modules/CatsModule.html","title":"module - CatsModule","body":"\n                   \n\n\n\n\n    Modules\n    CatsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\n\nCatsService \n\nCatsService \n\n\n\nCatsModule\n\nCatsModule\n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/cats/cats.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            CatsController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            CatsService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Global, Module } from '@nestjs/common';\nimport { CatsController } from './cats.controller';\nimport { CatsService } from './cats.service';\n\nconst loggerAliasProvider = {\n    provide: 'AliasedCatsService',\n    useExisting: \"CatsService\",\n  };\n\n@Global()\n@Module({\n  controllers: [CatsController],\n  providers: [\n    {\n      provide: \"CatsService\",\n      useClass: CatsService,\n    },\n    loggerAliasProvider\n  ],\n  exports: [\"CatsService\"],\n})\nexport class CatsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CatsService.html":{"url":"injectables/CatsService.html","title":"injectable - CatsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CatsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/cats/cats.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getCat\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getCat\n                        \n                    \n                \n            \n            \n                \ngetCat()\n                \n            \n\n\n            \n                \n                    Defined in src/cats/cats.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, forwardRef } from '@nestjs/common';\nimport { CommonService } from 'src/common/common.service';\n\n@Injectable()\nexport class CatsService {\n//   constructor(\n//     @Inject(forwardRef(() => CommonService))\n//     private commonService: CommonService,\n//   ) {}\n\n  getCat(): any {\n    return {\n      cat_id: 1,\n      cat_name: 'cat name',\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CircularController.html":{"url":"controllers/CircularController.html","title":"controller - CircularController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CircularController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/circular/circular.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                circular\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('aaa')\n                \n            \n\n            \n                \n                    Defined in src/circular/circular.controller.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { LazyLoaderService } from './lazy-loader.service';\nimport { ResolveService } from './resolving-scope-service.service';\n\n@Controller('circular')\nexport class CircularController {\n    constructor(\n        private readonly lazyLoaderService: LazyLoaderService,\n        private readonly resolveService: ResolveService\n    ) {}\n\n    @Get(\"aaa\")\n    getUsers(): any {\n    //   const userService = this.lazyLoaderService.getLazyUserService();\n      this.resolveService.onModuleInit;\n    //   return userService.getUsers();\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/CircularModule.html":{"url":"modules/CircularModule.html","title":"module - CircularModule","body":"\n                   \n\n\n\n\n    Modules\n    CircularModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_CircularModule\n\n\n\ncluster_CircularModule_providers\n\n\n\n\nAuthService\n\nAuthService\n\n\n\nCircularModule\n\nCircularModule\n\nCircularModule -->\n\nAuthService->CircularModule\n\n\n\n\n\nAuthServiceForWardRef\n\nAuthServiceForWardRef\n\nCircularModule -->\n\nAuthServiceForWardRef->CircularModule\n\n\n\n\n\nLazyLoaderService\n\nLazyLoaderService\n\nCircularModule -->\n\nLazyLoaderService->CircularModule\n\n\n\n\n\nResolveService\n\nResolveService\n\nCircularModule -->\n\nResolveService->CircularModule\n\n\n\n\n\nRetrievingService\n\nRetrievingService\n\nCircularModule -->\n\nRetrievingService->CircularModule\n\n\n\n\n\nShareService\n\nShareService\n\nCircularModule -->\n\nShareService->CircularModule\n\n\n\n\n\nUserService\n\nUserService\n\nCircularModule -->\n\nUserService->CircularModule\n\n\n\n\n\nUserServiceForwardRef\n\nUserServiceForwardRef\n\nCircularModule -->\n\nUserServiceForwardRef->CircularModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/circular/circular.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                        \n                            AuthServiceForWardRef\n                        \n                        \n                            LazyLoaderService\n                        \n                        \n                            ResolveService\n                        \n                        \n                            RetrievingService\n                        \n                        \n                            ShareService\n                        \n                        \n                            UserService\n                        \n                        \n                            UserServiceForwardRef\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CircularController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { CircularController } from './circular.controller';\nimport { AuthService } from './auth.service';\nimport { UserService } from './user.service';\nimport { ShareService } from './share.service';\nimport { LazyLoaderService } from './lazy-loader.service';\nimport { UserServiceForwardRef } from './use-forward-ref.service';\nimport { AuthServiceForWardRef } from './auth-forward-ref.service';\nimport { RetrievingService } from './retrieving.service';\nimport { ResolveService } from './resolving-scope-service.service';\n\n@Module({\n  controllers: [CircularController],\n  providers: [\n    AuthService,\n    UserService,\n    ShareService,\n    LazyLoaderService,\n    UserServiceForwardRef,\n    AuthServiceForWardRef,\n    RetrievingService,\n    ResolveService,\n  ],\n})\nexport class CircularModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CommonService.html":{"url":"injectables/CommonService.html","title":"injectable - CommonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CommonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/common/common.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Inject, Injectable, forwardRef } from '@nestjs/common';\nimport { CatsService } from 'src/cats/cats.service';\n\n@Injectable()\nexport class CommonService {\n//   constructor(\n//     @Inject(forwardRef(() => CatsService))\n//     private catsService: CatsService,\n//   ) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ConfigController.html":{"url":"controllers/ConfigController.html","title":"controller - ConfigController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ConfigController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                config\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { ConfigService } from './config.service';\n\n@Controller('config')\nexport class ConfigController {\n  constructor(private readonly catService: ConfigService) {}\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ConfigModule.html":{"url":"modules/ConfigModule.html","title":"module - ConfigModule","body":"\n                   \n\n\n\n\n    Modules\n    ConfigModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/config/config.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n        \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Static\n                        register\n                        \n                    \n                \n            \n            \n                \n                    \n                    register(options: any)\n                \n            \n\n\n            \n                \n                    Defined in src/config/config.module.ts:7\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    options\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     DynamicModule\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n    \n\n\n    \n        import { DynamicModule, Module } from '@nestjs/common';\nimport { ConfigService } from './config.service';\nimport { ConfigController } from './config.controller';\n\n@Module({})\nexport class ConfigModule {\n  static register(options : any): DynamicModule {\n    return {\n      module: ConfigModule,\n      providers: [\n        ConfigService,\n        {\n          provide: 'CONFIG_OPTIONS',\n          useValue: options,\n        },\n      ],\n      exports: [ConfigService],\n    };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/ConfigOptions.html":{"url":"interfaces/ConfigOptions.html","title":"interface - ConfigOptions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  ConfigOptions\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/interfaces/config-options.interface.ts\n        \n\n\n\n\n        \n            Index\n            \n                \n                    \n                        \n                            Properties\n                        \n                    \n                    \n                        \n                            \n                                \n                                        \n                                            folder\n                                        \n                                \n                            \n                        \n                    \n                \n            \n        \n\n\n\n            \n                Properties\n                    \n                        \n                                \n                                    \n                                        \n                                        folder\n                                            \n                                                \n                                            \n                                        \n                                    \n                                \n                                \n                                    \n                                        folder:         string\n\n                                    \n                                \n\n\n                                    \n                                        \n                                            Type :         string\n\n                                        \n                                    \n\n\n\n\n\n                        \n                    \n            \n    \n\n\n    \n        export interface ConfigOptions {\n  folder: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ConfigService.html":{"url":"injectables/ConfigService.html","title":"injectable - ConfigService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ConfigService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/config.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                envConfig\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                get\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(options: ConfigOptions)\n                    \n                \n                        \n                            \n                                Defined in src/config/config.service.ts:10\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        options\n                                                  \n                                                        \n                                                                        ConfigOptions\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        get\n                        \n                    \n                \n            \n            \n                \nget(key: string)\n                \n            \n\n\n            \n                \n                    Defined in src/config/config.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    key\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        envConfig\n                        \n                    \n                \n            \n                \n                    \n                        Type :         EnvConfig\n\n                    \n                \n                    \n                        \n                                Defined in src/config/config.service.ts:10\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable } from '@nestjs/common';\nimport { ConfigOptions, EnvConfig } from './interfaces';\nimport * as dotenv from 'dotenv';\nimport * as fs from 'fs';\nimport * as path from 'path';\n\n\n@Injectable()\nexport class ConfigService {\n  private readonly envConfig: EnvConfig;\n\n  constructor(@Inject('CONFIG_OPTIONS') private options : ConfigOptions) {\n    const filePath = `${process.env.NODE_ENV || 'development'}.env`;\n    const envFile = path.resolve(__dirname, '../../', options.folder, filePath);\n    console.log(envFile); \n    // this.envConfig = dotenv.parse(fs.readFileSync(envFile));\n  }\n\n  get(key: string): string {\n    return this.envConfig[key];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateOrderDto.html":{"url":"classes/CreateOrderDto.html","title":"class - CreateOrderDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateOrderDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/dto/create-order.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/dto/create-order.dto.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class CreateOrderDto {\n    name: string;\n    description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                email\n                            \n                            \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/create-user.dto.ts:8\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsEmail, IsNotEmpty } from 'class-validator';\n\nexport class CreateUserDto {\n  @IsEmail()\n  email: string;\n\n  @IsNotEmpty()\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { databaseProviders } from './database.providers';\n\n@Module({\n  providers: [...databaseProviders],\n  exports: [...databaseProviders],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"interfaces/EnvConfig.html":{"url":"interfaces/EnvConfig.html","title":"interface - EnvConfig","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Interfaces\n  \n  EnvConfig\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/config/interfaces/envconfig.interface.ts\n        \n\n\n\n\n\n\n            \n    Indexable\n        \n            \n                \n                    \n                        [key: string]:        string\n\n                    \n                \n                        \n                            \n                                Defined in src/config/interfaces/envconfig.interface.ts:1\n                            \n                        \n            \n        \n\n\n    \n\n\n    \n        export interface EnvConfig {\n  [key: string]: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/FindOneParams.html":{"url":"classes/FindOneParams.html","title":"class - FindOneParams","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  FindOneParams\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dto/find-one-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNumberString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dto/find-one-user.dto.ts:5\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNumberString } from 'class-validator';\n\nexport class FindOneParams {\n  @IsNumberString()\n  id: number;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtAuthGuard.html":{"url":"injectables/JwtAuthGuard.html","title":"injectable - JwtAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt-auth.guard.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                canActivate\n                            \n                            \n                                handleRequest\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        canActivate\n                        \n                    \n                \n            \n            \n                \ncanActivate(context: ExecutionContext)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:6\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    context\n                                    \n                                            ExecutionContext\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        handleRequest\n                        \n                    \n                \n            \n            \n                \nhandleRequest(err, user, info)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt-auth.guard.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    err\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    user\n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    info\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExecutionContext, Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class JwtAuthGuard extends AuthGuard('jwt') {\n  canActivate(context: ExecutionContext) {\n    // Add your custom authentication logic here\n    // for example, call super.logIn(request) to establish a session.\n    return super.canActivate(context);\n  }\n\n  handleRequest(err, user, info) {\n    // You can throw an exception based on either \"info\" or \"err\" arguments\n    if (err || !user) {\n      throw err || new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/JwtStrategy.html":{"url":"injectables/JwtStrategy.html","title":"injectable - JwtStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  JwtStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/jwt.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/auth/jwt.strategy.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(payload: any)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/jwt.strategy.ts:16\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    payload\n                                    \n                                                any\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { ExtractJwt, Strategy } from 'passport-jwt';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable } from '@nestjs/common';\nimport { jwtConstants } from './constants';\n\n@Injectable()\nexport class JwtStrategy extends PassportStrategy(Strategy) {\n  constructor() {\n    super({\n      jwtFromRequest: ExtractJwt.fromAuthHeaderAsBearerToken(),\n      ignoreExpiration: false,\n      secretOrKey: jwtConstants.secret,\n    });\n  }\n\n  async validate(payload: any) {\n    return { userId: payload.sub, username: payload.username };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LazyLoaderService.html":{"url":"injectables/LazyLoaderService.html","title":"injectable - LazyLoaderService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LazyLoaderService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/circular/lazy-loader.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                authService\n                            \n                            \n                                    Private\n                                userService\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getLazyAuthService\n                            \n                            \n                                getLazyUserService\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getLazyAuthService\n                        \n                    \n                \n            \n            \n                \ngetLazyAuthService()\n                \n            \n\n\n            \n                \n                    Defined in src/circular/lazy-loader.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         AuthService\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getLazyUserService\n                        \n                    \n                \n            \n            \n                \ngetLazyUserService()\n                \n            \n\n\n            \n                \n                    Defined in src/circular/lazy-loader.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         UserService\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        authService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/circular/lazy-loader.service.ts:8\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        userService\n                        \n                    \n                \n            \n                \n                    \n                        Type :         UserService\n\n                    \n                \n                    \n                        \n                                Defined in src/circular/lazy-loader.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UserService } from './user.service';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LazyLoaderService {\n  private userService: UserService;\n  private authService: AuthService;\n\n  getLazyUserService(): UserService {\n    if (!this.userService) {\n      this.userService = new UserService(this.getLazyAuthService());\n    }\n    return this.userService;\n  }\n\n  getLazyAuthService(): AuthService {\n    if (!this.authService) {\n      this.authService = new AuthService(this.getLazyUserService());\n    }\n    return this.authService;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalAuthGuard.html":{"url":"injectables/LocalAuthGuard.html","title":"injectable - LocalAuthGuard","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalAuthGuard\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local-auth.guard.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { AuthGuard } from '@nestjs/passport';\n\n@Injectable()\nexport class LocalAuthGuard extends AuthGuard('local') {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/LocalStrategy.html":{"url":"injectables/LocalStrategy.html","title":"injectable - LocalStrategy","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  LocalStrategy\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/local.strategy.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                validate\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/local.strategy.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        validate\n                        \n                    \n                \n            \n            \n                \n                    \n                    validate(username: string, password: string)\n                \n            \n\n\n            \n                \n                    Defined in src/auth/local.strategy.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    password\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Strategy } from 'passport-local';\nimport { PassportStrategy } from '@nestjs/passport';\nimport { Injectable, UnauthorizedException } from '@nestjs/common';\nimport { AuthService } from './auth.service';\n\n@Injectable()\nexport class LocalStrategy extends PassportStrategy(Strategy) {\n  constructor(private authService: AuthService) {\n    super();\n  }\n\n  async validate(username: string, password: string): Promise {\n    const user = await this.authService.validateUser(username, password);\n    if (!user) {\n      throw new UnauthorizedException();\n    }\n    return user;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Order.html":{"url":"classes/Order.html","title":"class - Order","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Order\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/entities/order.entity.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:4\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:2\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/entities/order.entity.ts:3\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class Order {\n  id: number;\n  name: string;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/OrderCreatedEvent.html":{"url":"classes/OrderCreatedEvent.html","title":"class - OrderCreatedEvent","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  OrderCreatedEvent\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/events/order-created.event.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                description\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/events/order-created.event.ts:3\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/orders/events/order-created.event.ts:2\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        export class OrderCreatedEvent {\n  name: string;\n  description: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrderCreatedListener.html":{"url":"injectables/OrderCreatedListener.html","title":"injectable - OrderCreatedListener","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrderCreatedListener\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/listeners/order-created.event.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleOrderCreatedEvent\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        handleOrderCreatedEvent\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleOrderCreatedEvent(event: OrderCreatedEvent)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @OnEvent('order.created')\n                \n            \n\n            \n                \n                    Defined in src/orders/listeners/order-created.event.ts:8\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    event\n                                    \n                                                OrderCreatedEvent\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { OnEvent } from '@nestjs/event-emitter';\nimport { OrderCreatedEvent } from '../events/order-created.event';\n\n@Injectable()\nexport class OrderCreatedListener {\n  @OnEvent('order.created')\n  handleOrderCreatedEvent(event: OrderCreatedEvent) {\n    // handle and process \"OrderCreatedEvent\" event\n    console.log(event);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/OrdersController.html":{"url":"controllers/OrdersController.html","title":"controller - OrdersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  OrdersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                orders\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createOrderDto: CreateOrderDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/orders/orders.controller.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Body, Controller, Post } from '@nestjs/common';\nimport { OrdersService } from './orders.service';\nimport { CreateOrderDto } from './dto/create-order.dto';\n\n@Controller('orders')\nexport class OrdersController {\n    constructor(private ordersService: OrdersService){}\n\n    @Post()\n    create(@Body() createOrderDto: CreateOrderDto) {\n      return this.ordersService.create(createOrderDto);\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/OrdersModule.html":{"url":"modules/OrdersModule.html","title":"module - OrdersModule","body":"\n                   \n\n\n\n\n    Modules\n    OrdersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\n\nOrderCreatedListener\n\nOrderCreatedListener\n\n\n\nOrdersModule\n\nOrdersModule\n\nOrdersModule -->\n\nOrderCreatedListener->OrdersModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/orders/orders.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            OrderCreatedListener\n                        \n                        \n                            OrdersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            OrdersController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { OrdersController } from './orders.controller';\nimport { OrdersService } from './orders.service';\nimport { OrderCreatedListener } from './listeners/order-created.event';\n\n@Module({\n  controllers: [OrdersController],\n  providers: [OrdersService, OrderCreatedListener]\n})\nexport class OrdersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/OrdersService.html":{"url":"injectables/OrdersService.html","title":"injectable - OrdersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  OrdersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/orders/orders.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                orders\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                create\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(eventEmitter: EventEmitter2)\n                    \n                \n                        \n                            \n                                Defined in src/orders/orders.service.ts:20\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        eventEmitter\n                                                  \n                                                        \n                                                                    EventEmitter2\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        create\n                        \n                    \n                \n            \n            \n                \ncreate(createOrderDto: CreateOrderDto)\n                \n            \n\n\n            \n                \n                    Defined in src/orders/orders.service.ts:24\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createOrderDto\n                                    \n                                                CreateOrderDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        orders\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Order[]\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      id: 1,\n      name: 'Order #1',\n      description: 'Description order #1',\n    },\n    {\n      id: 2,\n      name: 'Order #2',\n      description: 'Description order #2',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/orders/orders.service.ts:9\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { Order } from './entities/order.entity';\nimport { EventEmitter2 } from '@nestjs/event-emitter';\nimport { CreateOrderDto } from './dto/create-order.dto';\nimport { OrderCreatedEvent } from './events/order-created.event';\n\n@Injectable()\nexport class OrdersService {\n  public orders: Order[] = [\n    {\n      id: 1,\n      name: 'Order #1',\n      description: 'Description order #1',\n    },\n    {\n      id: 2,\n      name: 'Order #2',\n      description: 'Description order #2',\n    },\n  ];\n\n  constructor(private eventEmitter: EventEmitter2) {}\n\n  create(createOrderDto: CreateOrderDto) {\n    const order = {\n      id: this.orders.length + 1,\n      ...createOrderDto,\n    };\n    console.log(order);\n\n    this.orders.push(order);\n\n    const orderCreatedEvent = new OrderCreatedEvent();\n    orderCreatedEvent.name = order.name;\n    orderCreatedEvent.description = order.description;\n    this.eventEmitter.emit('order.created', orderCreatedEvent);\n\n    return order;\n  }  \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/Photo.html":{"url":"entities/Photo.html","title":"entity - Photo","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  Photo\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/photo.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                description\n                            \n                            \n                                    \n                                filename\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isPublished\n                            \n                            \n                                    \n                                name\n                            \n                            \n                                    \n                                views\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        description\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('text')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/photo.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        filename\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/photo.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/photo.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isPublished\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/photo.entity.ts:21\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({length: 500})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/photo.entity.ts:9\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        views\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column('int')\n                        \n                    \n                \n                    \n                        \n                                Defined in src/database/photo.entity.ts:18\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Entity, Column, PrimaryGeneratedColumn } from 'typeorm';\n\n@Entity()\nexport class Photo {\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column({ length: 500 })\n  name: string;\n\n  @Column('text')\n  description: string;\n\n  @Column()\n  filename: string;\n\n  @Column('int')\n  views: number;\n\n  @Column()\n  isPublished: boolean;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PhotoModule.html":{"url":"modules/PhotoModule.html","title":"module - PhotoModule","body":"\n                   \n\n\n\n\n    Modules\n    PhotoModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PhotoModule\n\n\n\ncluster_PhotoModule_providers\n\n\n\ncluster_PhotoModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nPhotoModule\n\nPhotoModule\n\nPhotoModule -->\n\nDatabaseModule->PhotoModule\n\n\n\n\n\nPhotoService\n\nPhotoService\n\nPhotoModule -->\n\nPhotoService->PhotoModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/photo.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PhotoService\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { DatabaseModule } from '../database/database.module';\nimport { photoProviders } from './photo.providers';\nimport { PhotoService } from './photo.service';\n\n@Module({\n  imports: [DatabaseModule],\n  providers: [...photoProviders, PhotoService],\n})\nexport class PhotoModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PhotoService.html":{"url":"injectables/PhotoService.html","title":"injectable - PhotoService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PhotoService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/database/photo.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(photoRepository: Repository)\n                    \n                \n                        \n                            \n                                Defined in src/database/photo.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        photoRepository\n                                                  \n                                                        \n                                                                        Repository\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/database/photo.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         Promise\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Inject } from '@nestjs/common';\nimport { Repository } from 'typeorm';\nimport { Photo } from './photo.entity';\n\n@Injectable()\nexport class PhotoService {\n  constructor(\n    @Inject('PHOTO_REPOSITORY')\n    private photoRepository: Repository,\n  ) {}\n\n  async findAll(): Promise {\n    return this.photoRepository.find();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostController.html":{"url":"controllers/PostController.html","title":"controller - PostController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/post.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getInfo\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getInfo\n                        \n                    \n                \n            \n            \n                \n                    \n                    getInfo()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('info')\n                \n            \n\n            \n                \n                    Defined in src/post/post.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Inject, Param } from '@nestjs/common';\nimport { PostService } from './post.service';\n\n@Controller('posts')\nexport class PostController {\n  constructor(\n    private readonly postService: PostService\n  ) {}\n\n  @Get('info')\n  getInfo(): object {\n    this.postService.addData('Some data');\n    const data = this.postService.getInstanceId();\n    const instanceId = this.postService.getInstanceId();\n    return { data,instanceId };\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostService.html":{"url":"injectables/PostService.html","title":"injectable - PostService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/post/post.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                    Static\n                                instanceCount\n                            \n                            \n                                    Private\n                                    Readonly\n                                instanceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                addData\n                            \n                            \n                                getData\n                            \n                            \n                                getInstanceId\n                            \n                            \n                                getPostsById\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/post/post.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        addData\n                        \n                    \n                \n            \n            \n                \naddData(item: string)\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    item\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getData\n                        \n                    \n                \n            \n            \n                \ngetData()\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:25\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     string[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getInstanceId\n                        \n                    \n                \n            \n            \n                \ngetInstanceId()\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getPostsById\n                        \n                    \n                \n            \n            \n                \ngetPostsById()\n                \n            \n\n\n            \n                \n                    Defined in src/post/post.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/post/post.service.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Static\n                        instanceCount\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 0\n                    \n                \n                    \n                        \n                                Defined in src/post/post.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        instanceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/post/post.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class PostService {\n  private data: string[] = [];\n  private static instanceCount = 0;\n  private readonly instanceId: number;\n\n  constructor() {\n    this.instanceId = Math.random();\n  }\n\n  getPostsById(): any {\n    return {\n      post_id: 1,\n      post_name: 'post name',\n    };\n  }\n\n  addData(item: string): void {\n    console.log('this.instanceId ', this.instanceId);\n    this.data.push(item);\n  }\n\n  getData(): string[] {\n    return this.data;\n  }\n\n  getInstanceId(): number {\n    return this.instanceId;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RequestService.html":{"url":"injectables/RequestService.html","title":"injectable - RequestService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RequestService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/scope/request.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                instanceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInstanceId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/scope/request.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getInstanceId\n                        \n                    \n                \n            \n            \n                \ngetInstanceId()\n                \n            \n\n\n            \n                \n                    Defined in src/scope/request.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/scope/request.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        instanceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/scope/request.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class RequestService {\n  private instanceId: number;\n  private data: string[] = [];\n\n  constructor() {\n    this.instanceId = Math.random();\n  }\n\n  getInstanceId(): object {\n    // this.data.push(\"hello\");\n    return [this.instanceId];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ResolveService.html":{"url":"injectables/ResolveService.html","title":"injectable - ResolveService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ResolveService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/circular/resolving-scope-service.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/circular/resolving-scope-service.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \n                    \n                    onModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/circular/resolving-scope-service.service.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit, Scope } from '@nestjs/common';\nimport { ContextIdFactory, ModuleRef } from '@nestjs/core';\nimport { UserService } from './user.service';\n\n@Injectable()\nexport class ResolveService implements OnModuleInit {\n  constructor(private moduleRef: ModuleRef) {}\n\n  // async onModuleInit() {\n  //   const userServices = await Promise.all([\n  //     this.moduleRef.resolve(UserService),\n  //     this.moduleRef.resolve(UserService),\n  //   ]);\n    \n  //   console.log(\"onModuleInit\", userServices[0] === userServices[1]); // false\n  // }\n  async onModuleInit() {\n    const contextId = ContextIdFactory.create();\n    console.log(contextId);\n    const userServices = await Promise.all([\n      this.moduleRef.resolve(UserService, contextId),\n      this.moduleRef.resolve(UserService, contextId),\n    ]);\n    \n    console.log(\"onModuleInit\", userServices[0] === userServices[1]); // true\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/RetrievingService.html":{"url":"injectables/RetrievingService.html","title":"injectable - RetrievingService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  RetrievingService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/circular/retrieving.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                service\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                onModuleInit\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(moduleRef: ModuleRef)\n                    \n                \n                        \n                            \n                                Defined in src/circular/retrieving.service.ts:7\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        moduleRef\n                                                  \n                                                        \n                                                                    ModuleRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        onModuleInit\n                        \n                    \n                \n            \n            \n                \nonModuleInit()\n                \n            \n\n\n            \n                \n                    Defined in src/circular/retrieving.service.ts:10\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        service\n                        \n                    \n                \n            \n                \n                    \n                        Type :         AuthService\n\n                    \n                \n                    \n                        \n                                Defined in src/circular/retrieving.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, OnModuleInit } from \"@nestjs/common\";\nimport { ModuleRef } from \"@nestjs/core\";\nimport { AuthService } from \"./auth.service\";\n\n@Injectable()\nexport class RetrievingService implements OnModuleInit {\n  private service: AuthService;\n  constructor(private moduleRef: ModuleRef) {}\n\n  onModuleInit() {\n    this.service = this.moduleRef.get(AuthService);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/RoleEntity.html":{"url":"entities/RoleEntity.html","title":"entity - RoleEntity","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  RoleEntity\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/role.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                id\n                            \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/users/role.entity.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                    \n                        \n                                Defined in src/users/role.entity.ts:7\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Exclude, Expose, Transform } from 'class-transformer';\nimport { Entity, Column } from 'typeorm';\n\n@Entity()\nexport class RoleEntity {\n  id: number;\n  name: string;\n\n  constructor(partial: Partial){\n    Object.assign(this, partial);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/ScopeController.html":{"url":"controllers/ScopeController.html","title":"controller - ScopeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  ScopeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/scope/scope.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                scope\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                getRequestInstanceId\n                            \n                            \n                                    \n                                getSingletonInstanceId\n                            \n                            \n                                    \n                                getTransientInstanceId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getRequestInstanceId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getRequestInstanceId()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('request')\n                \n            \n\n            \n                \n                    Defined in src/scope/scope.controller.ts:23\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getSingletonInstanceId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getSingletonInstanceId()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('singleton')\n                \n            \n\n            \n                \n                    Defined in src/scope/scope.controller.ts:28\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        getTransientInstanceId\n                        \n                    \n                \n            \n            \n                \n                    \n                    getTransientInstanceId()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('transient')\n                \n            \n\n            \n                \n                    Defined in src/scope/scope.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         any\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Inject } from '@nestjs/common';\nimport { TransientService } from './transient.service';\nimport { RequestService } from './request.service';\nimport { SingletonService } from './singleton.service';\n\n@Controller('scope')\nexport class ScopeController {\n  constructor(\n    @Inject(TransientService)\n    private readonly transientService: TransientService,\n    @Inject(RequestService) \n    private readonly requestService: RequestService,\n    @Inject(SingletonService)\n    private readonly singletonService: SingletonService,\n  ) {}\n\n  @Get('transient')\n  getTransientInstanceId(): any {\n    return [this.transientService.getInstanceId(), this.requestService.getInstanceId()];\n  }\n\n  @Get('request')\n  getRequestInstanceId(): any {\n    return [this.requestService.getInstanceId(), this.requestService.getInstanceId()];\n  }\n\n  @Get('singleton')\n  getSingletonInstanceId(): any {\n    return [this.singletonService.getInstanceId(), this.requestService.getInstanceId()];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/ScopeModule.html":{"url":"modules/ScopeModule.html","title":"module - ScopeModule","body":"\n                   \n\n\n\n\n    Modules\n    ScopeModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_ScopeModule\n\n\n\ncluster_ScopeModule_providers\n\n\n\n\nRequestService\n\nRequestService\n\n\n\nScopeModule\n\nScopeModule\n\nScopeModule -->\n\nRequestService->ScopeModule\n\n\n\n\n\nSingletonService\n\nSingletonService\n\nScopeModule -->\n\nSingletonService->ScopeModule\n\n\n\n\n\nTransientService\n\nTransientService\n\nScopeModule -->\n\nTransientService->ScopeModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/scope/scope.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            RequestService\n                        \n                        \n                            SingletonService\n                        \n                        \n                            TransientService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            ScopeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ScopeController } from './scope.controller';\nimport { SingletonService } from './singleton.service';\nimport { RequestService } from './request.service';\nimport { TransientService } from './transient.service';\n\n@Module({\n  providers: [SingletonService, RequestService, TransientService],\n  controllers: [ScopeController]\n})\nexport class ScopeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/SeeController.html":{"url":"controllers/SeeController.html","title":"controller - SeeController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  SeeController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/see/see.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                index\n                            \n                            \n                                    \n                                sse\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        index\n                        \n                    \n                \n            \n            \n                \n                    \n                    index(response: Response)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/see/see.controller.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    response\n                                    \n                                            Response\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         void\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        sse\n                        \n                    \n                \n            \n            \n                \n                    \n                    sse()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Sse('sse')\n                \n            \n\n            \n                \n                    Defined in src/see/see.controller.ts:18\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     Observable\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Res, Sse } from '@nestjs/common';\nimport { Response } from 'express';\nimport { readFileSync } from 'fs';\nimport { join } from 'path';\nimport { Observable, interval } from 'rxjs';\nimport { map } from 'rxjs/operators';\n\n@Controller()\nexport class SeeController {\n    @Get()\n    index(@Res() response: Response) {\n      response\n        .type('text/html')\n        .send(readFileSync(join(__dirname, 'index.html')).toString());\n    }\n  \n    @Sse('sse')\n    sse(): Observable {\n      return interval(1000).pipe(\n        map((_) => ({ data: { hello: 'world' } }) as MessageEvent),\n      );\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/SeeModule.html":{"url":"modules/SeeModule.html","title":"module - SeeModule","body":"\n                   \n\n\n\n\n    Modules\n    SeeModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/see/see.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Controllers\n                    \n                        \n                            SeeController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { SeeController } from './see.controller';\n\n@Module({\n  controllers: [SeeController]\n})\nexport class SeeModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/ShareService.html":{"url":"injectables/ShareService.html","title":"injectable - ShareService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  ShareService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/circular/share.service.ts\n        \n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class ShareService {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/SingletonService.html":{"url":"injectables/SingletonService.html","title":"injectable - SingletonService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  SingletonService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/scope/singleton.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                instanceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInstanceId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/scope/singleton.service.ts:7\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getInstanceId\n                        \n                    \n                \n            \n            \n                \ngetInstanceId()\n                \n            \n\n\n            \n                \n                    Defined in src/scope/singleton.service.ts:13\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/scope/singleton.service.ts:5\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        instanceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/scope/singleton.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\n\n@Injectable()\nexport class SingletonService {\n  private data: string[] = [];\n\n  private instanceId: number;\n\n  constructor() {\n    this.instanceId = Math.random();\n  }\n\n  getInstanceId(): object {\n    this.data.push(\"hello\");\n    return [this.data, this.instanceId];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/TasksModule.html":{"url":"modules/TasksModule.html","title":"module - TasksModule","body":"\n                   \n\n\n\n\n    Modules\n    TasksModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\n\nTasksService\n\nTasksService\n\n\n\nTasksModule\n\nTasksModule\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/tasks/tasks.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            TasksService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { TasksService } from './tasks.service';\n\n@Module({\n    providers: [TasksService],\n})\nexport class TasksModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TasksService.html":{"url":"injectables/TasksService.html","title":"injectable - TasksService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TasksService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/tasks/tasks.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                logger\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                handleTimeout\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        handleTimeout\n                        \n                    \n                \n            \n            \n                \n                    \n                    handleTimeout()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Timeout(5000)\n                \n            \n\n            \n                \n                    Defined in src/tasks/tasks.service.ts:19\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         void\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        logger\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new Logger(TasksService.name)\n                    \n                \n                    \n                        \n                                Defined in src/tasks/tasks.service.ts:6\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Logger } from '@nestjs/common';\nimport { Cron, Interval, Timeout } from '@nestjs/schedule';\n\n@Injectable()\nexport class TasksService {\n    private readonly logger = new Logger(TasksService.name);\n\n    // @Cron('45 * * * * *')\n    // handleCron() {\n    //   this.logger.debug('Called when the second is 45');\n    // }\n  \n    // @Interval(10000)\n    // handleInterval() {\n    //   this.logger.debug('Called every 10 seconds');\n    // }\n  \n    @Timeout(5000)\n    handleTimeout() {\n      this.logger.debug('Called once after 5 seconds');\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/TransientService.html":{"url":"injectables/TransientService.html","title":"injectable - TransientService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  TransientService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/scope/transient.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                data\n                            \n                            \n                                    Private\n                                instanceId\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getInstanceId\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor()\n                    \n                \n                        \n                            \n                                Defined in src/scope/transient.service.ts:6\n                            \n                        \n\n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getInstanceId\n                        \n                    \n                \n            \n            \n                \ngetInstanceId()\n                \n            \n\n\n            \n                \n                    Defined in src/scope/transient.service.ts:12\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         object\n\n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        data\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Default value : []\n                    \n                \n                    \n                        \n                                Defined in src/scope/transient.service.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        instanceId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                    \n                        \n                                Defined in src/scope/transient.service.ts:5\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\n\n@Injectable({ scope: Scope.TRANSIENT })\nexport class TransientService {\n  private instanceId: number;\n  private data: string[] = [];\n\n  constructor() {\n    this.instanceId = Math.random();\n  }\n\n  getInstanceId(): object {\n    this.data.push(\"hello\");\n    return [this.data, this.instanceId];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"entities/User.html":{"url":"entities/User.html","title":"entity - User","body":"\n                   \n\n\n\n\n\n\n\n  Entities\n  User\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/user.entity.ts\n        \n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                firstName\n                            \n                            \n                                    \n                                id\n                            \n                            \n                                    \n                                isActive\n                            \n                            \n                                    \n                                lastName\n                            \n                            \n                                    \n                                    \n                                password\n                            \n                            \n                                    \n                                role\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:15\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @PrimaryGeneratedColumn()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:12\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        isActive\n                        \n                    \n                \n            \n                \n                    \n                        Type :         boolean\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column({default: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:33\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:18\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Exclude()@Column()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:30\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        role\n                        \n                    \n                \n            \n                \n                    \n                        Type :         RoleEntity\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Transform( => value.name)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/user.entity.ts:26\n                        \n                    \n\n\n        \n    \n\n    \n\n\n    \n        import { Exclude, Expose, Transform } from 'class-transformer';\nimport { Entity, Column, PrimaryGeneratedColumn, OneToMany } from 'typeorm';\nimport { RoleEntity } from './role.entity';\n\n@Entity()\nexport class User {\n  constructor(partial: Partial) {\n    Object.assign(this, partial);\n  }\n\n  @PrimaryGeneratedColumn()\n  id: number;\n\n  @Column()\n  firstName: string;\n\n  @Column()\n  lastName: string;\n\n  @Expose()\n  get fullName(): string {\n    return `${this.firstName} ${this.lastName}`;\n  }\n\n  @Transform(({value}) => value.name )\n  role: RoleEntity \n\n  @Exclude()\n  @Column()\n  password: string;\n\n  @Column({ default: true })\n  isActive: boolean;\n\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserService.html":{"url":"injectables/UserService.html","title":"injectable - UserService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/circular/user.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(shareService: ShareService)\n                    \n                \n                        \n                            \n                                Defined in src/circular/user.service.ts:6\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        shareService\n                                                  \n                                                        \n                                                                        ShareService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getUsers\n                        \n                    \n                \n            \n            \n                \ngetUsers()\n                \n            \n\n\n            \n                \n                    Defined in src/circular/user.service.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, Scope } from '@nestjs/common';\nimport { ShareService } from './share.service';\n\n@Injectable({ scope: Scope.REQUEST })\nexport class UserService {\n    constructor(private shareService: ShareService) {}\n\n    getUsers() : string {\n        return \"get user service\";\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UserServiceForwardRef.html":{"url":"injectables/UserServiceForwardRef.html","title":"injectable - UserServiceForwardRef","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UserServiceForwardRef\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/circular/use-forward-ref.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getAuthHello\n                            \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthServiceForWardRef)\n                    \n                \n                        \n                            \n                                Defined in src/circular/use-forward-ref.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthServiceForWardRef\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getAuthHello\n                        \n                    \n                \n            \n            \n                \ngetAuthHello()\n                \n            \n\n\n            \n                \n                    Defined in src/circular/use-forward-ref.service.ts:15\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/circular/use-forward-ref.service.ts:11\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Inject, Injectable, forwardRef } from '@nestjs/common';\nimport { AuthServiceForWardRef } from './auth-forward-ref.service';\n\n@Injectable()\nexport class UserServiceForwardRef {\n  constructor(\n    @Inject(forwardRef(() => AuthServiceForWardRef))\n    private authService: AuthServiceForWardRef,\n  ) {}\n\n  getHello(): string {\n    return 'Hello from UserService';\n  }\n\n  getAuthHello(): string {\n    return this.authService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                create\n                            \n                            \n                                    \n                                    \n                                    Async\n                                findOne\n                            \n                            \n                                    \n                                    \n                                    \n                                    Async\n                                getUsers\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:29\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    createUserDto\n                                    \n                                                CreateUserDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         string\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(ids: number[])\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')@Version('2')\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:49\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    ids\n                                    \n                                            number[]\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        \n                        \n                        \n                        Async\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                    \n                    getUsers()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()@Version('1')@SerializeOptions({excludePrefixes: undefined})\n                \n            \n\n            \n                \n                    Defined in src/users/users.controller.ts:37\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Body,\n  ClassSerializerInterceptor,\n  Controller,\n  Get,\n  Inject,\n  Param,\n  ParseArrayPipe,\n  ParseIntPipe,\n  Post,\n  Query,\n  SerializeOptions,\n  UseInterceptors,\n  Version,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dto/create-user.dto';\nimport { FindOneParams } from './dto/find-one-user.dto';\nimport { Cache } from 'cache-manager';\nimport { CACHE_MANAGER } from '@nestjs/cache-manager';\nimport { User } from './user.entity';\nimport { RoleEntity } from './role.entity';\n\n@Controller('users')\n@UseInterceptors(ClassSerializerInterceptor)\nexport class UsersController {\n  constructor(@Inject(CACHE_MANAGER) private cacheManager: Cache) {}\n\n  @Post()\n  create(@Body() createUserDto: CreateUserDto) {\n    return 'This action adds a new user';\n  }\n\n\n  @Get()\n  @Version('1')\n  @SerializeOptions({ excludePrefixes: ['id'] })\n  async getUsers() {\n    return new User({\n        id: 1,\n        firstName: '_Kamil',\n        lastName: 'Mysliwiec',\n        password: 'password',\n        role: new RoleEntity({ id: 1, name: 'admin' }),\n      });\n  };\n\n  @Get(':id')\n  @Version('2')\n  async findOne(\n    @Query('ids', new ParseArrayPipe({ items: Number, separator: ',' }))\n    ids: number[],\n  ) {\n    await this.cacheManager.set('key', 'value');\n    const value = await this.cacheManager.get('key');\n    console.log(typeof ids === 'object', ids); // true\n    return 'This action returns a user' +  value;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './users.service';\nimport { TypeOrmModule } from '@nestjs/typeorm';\nimport { User } from './user.entity';\nimport { CacheModule } from '@nestjs/cache-manager';\n\n@Module({\n  imports: [TypeOrmModule.forFeature([User]), CacheModule.register(),],\n  controllers: [UsersController],\n  providers: [UsersService],\n  exports: [UsersService],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    Private\n                                    Readonly\n                                users\n                            \n                        \n                    \n                \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(username: string)\n                \n            \n\n\n            \n                \n                    Defined in src/users/users.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    username\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                            Readonly\n                        users\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n    {\n      userId: 1,\n      username: 'john',\n      password: 'changeme',\n    },\n    {\n      userId: 2,\n      username: 'maria',\n      password: 'guess',\n    },\n  ]\n                    \n                \n                    \n                        \n                                Defined in src/users/users.service.ts:7\n                        \n                    \n\n\n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\nexport type User = any;\n\n@Injectable()\nexport class UsersService {\n  private readonly users = [\n    {\n      userId: 1,\n      username: 'john',\n      password: 'changeme',\n    },\n    {\n      userId: 2,\n      username: 'maria',\n      password: 'guess',\n    },\n  ];\n\n  async findOne(username: string): Promise {\n    return this.users.find(user => user.username === username);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/audio/audio.controller.ts\n            \n            controller\n            AudioController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/audio/audio.processor.ts\n            \n            class\n            AudioProcessor\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/audio/audio.service.ts\n            \n            injectable\n            AudioService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/auth/constants.ts\n            \n            variable\n            jwtConstants\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/jwt-auth.guard.ts\n            \n            injectable\n            JwtAuthGuard\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/jwt.strategy.ts\n            \n            injectable\n            JwtStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/auth/local-auth.guard.ts\n            \n            injectable\n            LocalAuthGuard\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/local.strategy.ts\n            \n            injectable\n            LocalStrategy\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/cats/cats.controller.ts\n            \n            controller\n            CatsController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/cats/cats.module.ts\n            \n            variable\n            loggerAliasProvider\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/cats/cats.service.ts\n            \n            injectable\n            CatsService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/circular/auth-forward-ref.service.ts\n            \n            injectable\n            AuthServiceForWardRef\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/circular/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/circular/circular.controller.ts\n            \n            controller\n            CircularController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/circular/injector.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/circular/lazy-loader.service.ts\n            \n            injectable\n            LazyLoaderService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/circular/resolving-scope-service.service.ts\n            \n            injectable\n            ResolveService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/circular/retrieving.service.ts\n            \n            injectable\n            RetrievingService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/circular/share.service.ts\n            \n            injectable\n            ShareService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/circular/use-forward-ref.service.ts\n            \n            injectable\n            UserServiceForwardRef\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/circular/user.service.ts\n            \n            injectable\n            UserService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/common/common.service.ts\n            \n            injectable\n            CommonService\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/config.controller.ts\n            \n            controller\n            ConfigController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/config/config.service.ts\n            \n            injectable\n            ConfigService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/config/interfaces/config-options.interface.ts\n            \n            interface\n            ConfigOptions\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/config/interfaces/envconfig.interface.ts\n            \n            interface\n            EnvConfig\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/database.providers.ts\n            \n            variable\n            databaseProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/photo.entity.ts\n            \n            entity\n            Photo\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/photo.providers.ts\n            \n            variable\n            photoProviders\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/database/photo.service.ts\n            \n            injectable\n            PhotoService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/orders/dto/create-order.dto.ts\n            \n            class\n            CreateOrderDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orders/entities/order.entity.ts\n            \n            class\n            Order\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/orders/events/order-created.event.ts\n            \n            class\n            OrderCreatedEvent\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/orders/listeners/order-created.event.ts\n            \n            injectable\n            OrderCreatedListener\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/orders/orders.controller.ts\n            \n            controller\n            OrdersController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/orders/orders.service.ts\n            \n            injectable\n            OrdersService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/post/post.controller.ts\n            \n            controller\n            PostController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/post/post.service.ts\n            \n            injectable\n            PostService\n            \n                0 %\n                (0/9)\n            \n        \n        \n            \n                \n                src/scope/request.service.ts\n            \n            injectable\n            RequestService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/scope/scope.controller.ts\n            \n            controller\n            ScopeController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/scope/singleton.service.ts\n            \n            injectable\n            SingletonService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/scope/transient.service.ts\n            \n            injectable\n            TransientService\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/see/see.controller.ts\n            \n            controller\n            SeeController\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/tasks/tasks.service.ts\n            \n            injectable\n            TasksService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dto/find-one-user.dto.ts\n            \n            class\n            FindOneParams\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/role.entity.ts\n            \n            entity\n            RoleEntity\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/user.entity.ts\n            \n            entity\n            User\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/users/users.service.ts\n            \n            injectable\n            UsersService\n            \n                0 %\n                (0/3)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/bull : ^10.0.1\n        \n            @nestjs/cache-manager : ^2.1.0\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/config : ^3.1.1\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/event-emitter : ^2.0.2\n        \n            @nestjs/jwt : ^10.1.1\n        \n            @nestjs/passport : ^10.0.2\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/schedule : ^3.0.4\n        \n            @nestjs/typeorm : ^10.0.0\n        \n            @types/passport-local : ^1.0.36\n        \n            bull : ^4.11.3\n        \n            cache-manager : ^5.2.3\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.0\n        \n            dotenv : ^16.3.1\n        \n            mysql2 : ^3.6.1\n        \n            passport : ^0.6.0\n        \n            passport-jwt : ^4.0.1\n        \n            passport-local : ^1.0.0\n        \n            reflect-metadata : ^0.1.13\n        \n            rxjs : ^7.8.1\n        \n            typeorm : ^0.3.17\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ yarn installRunning the app\n# development\n$ yarn run start\n\n# watch mode\n$ yarn run start:dev\n\n# production mode\n$ yarn run start:prodTest\n# unit tests\n$ yarn run test\n\n# e2e tests\n$ yarn run test:e2e\n\n# test coverage\n$ yarn run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AudioModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CatsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        CircularModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ConfigModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        OrdersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PhotoModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        ScopeModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        SeeModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        TasksModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AudioModule\n\n\n\ncluster_AudioModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_CatsModule\n\n\n\ncluster_CatsModule_exports\n\n\n\ncluster_CircularModule\n\n\n\ncluster_CircularModule_providers\n\n\n\ncluster_OrdersModule\n\n\n\ncluster_OrdersModule_providers\n\n\n\ncluster_PhotoModule\n\n\n\ncluster_PhotoModule_imports\n\n\n\ncluster_PhotoModule_providers\n\n\n\ncluster_TasksModule\n\n\n\ncluster_TasksModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAudioModule\n\nAudioModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAudioModule->AppModule\n\n\n\n\n\nAuthModule\n\nAuthModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nCatsModule\n\nCatsModule\n\nAppModule -->\n\nCatsModule->AppModule\n\n\n\n\n\nCatsService \n\nCatsService \n\nCatsService  -->\n\nCatsModule->CatsService \n\n\n\n\n\nCircularModule\n\nCircularModule\n\nAppModule -->\n\nCircularModule->AppModule\n\n\n\n\n\nConfigModule\n\nConfigModule\n\nAppModule -->\n\nConfigModule->AppModule\n\n\n\n\n\nOrdersModule\n\nOrdersModule\n\nAppModule -->\n\nOrdersModule->AppModule\n\n\n\n\n\nScopeModule\n\nScopeModule\n\nAppModule -->\n\nScopeModule->AppModule\n\n\n\n\n\nSeeModule\n\nSeeModule\n\nAppModule -->\n\nSeeModule->AppModule\n\n\n\n\n\nTasksModule\n\nTasksModule\n\nAppModule -->\n\nTasksModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAuthModule -->\n\nUsersModule->AuthModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCommonService\n\nCommonService\n\nAppModule -->\n\nCommonService->AppModule\n\n\n\n\n\nPostService\n\nPostService\n\nAppModule -->\n\nPostService->AppModule\n\n\n\n\n\nRequestService\n\nRequestService\n\nScopeModule -->\n\nRequestService->ScopeModule\n\n\n\nAppModule -->\n\nRequestService->AppModule\n\n\n\n\n\nSingletonService\n\nSingletonService\n\nScopeModule -->\n\nSingletonService->ScopeModule\n\n\n\nAppModule -->\n\nSingletonService->AppModule\n\n\n\n\n\nTransientService\n\nTransientService\n\nScopeModule -->\n\nTransientService->ScopeModule\n\n\n\nAppModule -->\n\nTransientService->AppModule\n\n\n\n\n\nAudioService\n\nAudioService\n\nAudioModule -->\n\nAudioService->AudioModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\nCircularModule -->\n\nAuthService->CircularModule\n\n\n\n\n\nJwtStrategy\n\nJwtStrategy\n\nAuthModule -->\n\nJwtStrategy->AuthModule\n\n\n\n\n\nLocalStrategy\n\nLocalStrategy\n\nAuthModule -->\n\nLocalStrategy->AuthModule\n\n\n\n\n\nAuthServiceForWardRef\n\nAuthServiceForWardRef\n\nCircularModule -->\n\nAuthServiceForWardRef->CircularModule\n\n\n\n\n\nLazyLoaderService\n\nLazyLoaderService\n\nCircularModule -->\n\nLazyLoaderService->CircularModule\n\n\n\n\n\nResolveService\n\nResolveService\n\nCircularModule -->\n\nResolveService->CircularModule\n\n\n\n\n\nRetrievingService\n\nRetrievingService\n\nCircularModule -->\n\nRetrievingService->CircularModule\n\n\n\n\n\nShareService\n\nShareService\n\nCircularModule -->\n\nShareService->CircularModule\n\n\n\n\n\nUserService\n\nUserService\n\nCircularModule -->\n\nUserService->CircularModule\n\n\n\n\n\nUserServiceForwardRef\n\nUserServiceForwardRef\n\nCircularModule -->\n\nUserServiceForwardRef->CircularModule\n\n\n\n\n\nOrderCreatedListener\n\nOrderCreatedListener\n\nOrdersModule -->\n\nOrderCreatedListener->OrdersModule\n\n\n\n\n\nOrdersService\n\nOrdersService\n\nOrdersModule -->\n\nOrdersService->OrdersModule\n\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nPhotoModule\n\nPhotoModule\n\nPhotoModule -->\n\nDatabaseModule->PhotoModule\n\n\n\n\n\nPhotoService\n\nPhotoService\n\nPhotoModule -->\n\nPhotoService->PhotoModule\n\n\n\n\n\nTasksService\n\nTasksService\n\nTasksModule -->\n\nTasksService->TasksModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        13 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    11 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    3 Entities\n                \n            \n        \n        \n            \n                \n                    \n                    28 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n        \n            \n                \n                    \n                    2 Interfaces\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            User   (src/.../users.service.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/users/users.service.ts\n    \n    \n        \n            \n                \n                    \n                    User\n                \n            \n            \n                \n                            any\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            databaseProviders   (src/.../database.providers.ts)\n                        \n                        \n                            jwtConstants   (src/.../constants.ts)\n                        \n                        \n                            loggerAliasProvider   (src/.../cats.module.ts)\n                        \n                        \n                            photoProviders   (src/.../photo.providers.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/database/database.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        databaseProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'DATA_SOURCE',\n    useFactory: async () => {\n      const dataSource = new DataSource({\n        type: 'mysql',\n        host: 'localhost',\n        port: 3306,\n        username: 'root',\n        password: 'root',\n        database: 'test',\n        entities: [\n            __dirname + '/../**/*.entity{.ts,.js}',\n        ],\n        synchronize: true,\n      });\n\n      return dataSource.initialize();\n    },\n  },\n]\n                    \n                \n\n\n        \n    \n\n    src/auth/constants.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        jwtConstants\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  secret:\n    'DO NOT USE THIS VALUE. INSTEAD, CREATE A COMPLEX SECRET AND KEEP IT SAFE OUTSIDE OF THE SOURCE CODE.',\n}\n                    \n                \n\n\n        \n    \n\n    src/cats/cats.module.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        loggerAliasProvider\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n    provide: 'AliasedCatsService',\n    useExisting: \"CatsService\",\n  }\n                    \n                \n\n\n        \n    \n\n    src/database/photo.providers.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        photoProviders\n                        \n                    \n                \n            \n                \n                    \n                        Type :     []\n\n                    \n                \n                \n                    \n                        Default value : [\n  {\n    provide: 'PHOTO_REPOSITORY',\n    useFactory: (dataSource: DataSource) => dataSource.getRepository(Photo),\n    inject: ['DATA_SOURCE'],\n  },\n]\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
